% -----------------------------------------------------------------------
%   mathquiz.cfg | mathquiz TeX4ht configuration file
% -----------------------------------------------------------------------
%
%   Copyright (C) Andrew Mathas, University of Sydney
%
%   Distributed under the terms of the GNU General Public License (GPL)
%               http://www.gnu.org/licenses/
%
%   This file is part of the Math_quiz system.
%
%   <Andrew.Mathas@sydney.edu.au>
%   <Donald.Taylor@sydney.edu.au>
% ----------------------------------------------------------------------

\NeedsTeXFormat{LaTeX2e}[1996/12/01]
\ProvidesFile{mathquiz.cfg}[2017/04 v5.0 tex4ht configuration file for MathQuiz]
\makeatletter

% set the quiz filename for use below -- can set by mathquiz
\ifdefined\MQ@quizfile\relax\else\xdef\MQ@quizfile{\jobname.tex}\fi

% Generate HTML5 + MathML code
\Preamble{xhtml,mathml,html5,charset="utf-8"}

% We don't want to translate font suggestions with ugly wrappers like
% <span class="cmti-10"> for italic text
\NoFonts

% Don't output xml version tag
\Configure{VERSION}{}

% Output a MathQuiz doctype instead of the default for HTML5
\Configure{DOCTYPE}{\HCode{<!DOCTYPE mathquiz>}}

% store the quiz specifications as attributes to <quiz>
\Configure{HTML}{
  \HCode{\Hnewline<quiz title="\@title" bread_crumb="\MQ@breadCrumb" src="\MQ@quizfile">\Hnewline}%
  \Tg<course name="\uos@name" code="\uos@code" url="\uos@url" quizzes_url="\MQ@quizzesUrl" />
  \HCode{\Hnewline}%
  \Tg<school department="\MQ@department"  department_url="\MQ@depturl" university="\MQ@university" university_url="\MQ@uniurl"/>
  \HCode{\Hnewline}%
}{\Tg</quiz>}

% reset all configurations
\Configure{HEAD}{}{}
\Configure{BODY}{}{}
\Configure{TITLE}{}{}
\Configure{TITLE+}{}
\Configure{thanks author date and}{}{}{}{}{}{}{}{}
\renewcommand{\maketitle}{}

% pstricks pictures need to be converted to svg images
\ConfigureEnv{psmatrix}{\Picture*{}}{\EndPicture}{}{}
\Configure{Picture}{.svg}

\def\MQ@openText{\Tg<text>\HtmlParOff\HCode{<![CDATA[}}
\def\MQ@closeText{\HCode{]]>}\HtmlParOn\Tg</text>}
\def\MQ@closeResponse{\HCode{]]>}\HtmlParOn\Tg</response>\Tg</item>}
\def\MQ@closeItem{\MQ@closeText\Tg</item>}
\def\MQ@closeAnswer{\Tg</answer>}
\let\MQ@closeOption=\relax
\ConfigureEnv{quizlist}{\HCode{<quizlist>}}{\HCode{</quizlist>}}{}{}
\renewcommand{\quiz}[2][\relax]{%
  \refstepcounter{quiz}
  \ifx#1\relax\def\MQ@url{quiz\thequiz.html}%
  \else\def\MQ@url{#1}%
  \fi%
  \Tg<quizlistitem title="Quiz \thequiz.\space#2" url="\MQ@url"/>}
\RenewDocumentEnvironment{discussion}{O{Discussion}o}%
    {\IfNoValueTF{#2}{\Tg<discussion heading="#1" short_heading="#1">}{\Tg<discussion heading="#2" short_heading="#1">}
     \Tg<text>\HCode{<![CDATA[\Hnewline}}
    {\EndP\HCode{\Hnewline]]>}\Tg</text>\HCode{\Hnewline}\Tg</discussion>}
\renewenvironment{question}{%
  \refstepcounter{question}%
  \IgnorePar\HCode{\Hnewline<question>\Hnewline}%
  \let\MQ@closeQuestion=\relax%
  \MQ@openText}%
  {\MQ@closeOption\MQ@closeQuestion\Tg</question>%
  \let\MQ@closeOption=\relax}

\def\MQ@choicesingle{single}      % the two legal choices
\def\MQ@choicemultiple{multiple}
\RenewDocumentEnvironment{choice}{O{}}{%
  % process the environment options
  \def\MQ@choicetype{single}% default typoe is single
  \def\MQ@choicecols{1}%     default of 1 column
  \foreach \opt in {#1} {
    \ifnum0<0\opt1\relax% \opt is a positive integer
       \xdef\MQ@choicecols{\opt}
    \else
       \xdef\MQ@choicetype{\opt}
    \fi
  }%
  % check that we have a valid choice type and give an error if not
  \ifx\MQ@choicetype\MQ@choicesingle\textit{Exactly one option must be correct})%
  \else\ifx\MQ@choicetype\MQ@choicemultiple(\textit{Zero or more options can be correct})
       \else\MQ@error{Valid multiple choice types are single and multiple: \MQ@choicetype is unknown}%
       \fi%
  \fi%
  % now insert tex4ht code
  \MQ@closeText
  \Tg<choice type="\MQ@choicetype" cols="\MQ@choicecols">
  \let\MQ@closeOption=\relax}%
  {\MQ@closeOption\Tg</choice>}
\def\MQ@item#1{\MQ@closeOption\Tg<item expect="#1">\MQ@openText%
  \let\MQ@closeOption=\MQ@closeItem}
\def\correct{\MQ@item{true}}
\def\incorrect{\MQ@item{false}}
\renewcommand{\response}{\MQ@closeText
  \Tg<response>\HtmlParOff\HCode{<![CDATA[}%
  \let\MQ@closeOption=\MQ@closeResponse}
\renewcommand{\answer}[2][\relax]{%
  \MQ@closeText
  \Tg<answer value="#2">%
  \ifx#1\relax%
  \else\Tg<tag>\HCode{<![CDATA[}#1\HCode{]]>}\Tg</tag>%
  \fi%
  \let\MQ@closeQuestion=\MQ@closeAnswer%
  \let\MQ@closeOption=\relax}
\newcommand\MQ@when[1]{\MQ@closeOption%
  \def\MQ@closeOption{\HCode{]]>}\Tg</when_#1>}%
  \IgnorePar\HCode{\Hnewline}\Tg<when_#1>\HCode{<![CDATA[}%
}
\renewcommand\whenRight{\MQ@when{right}}
\renewcommand\whenWrong{\MQ@when{wrong}}

\makeatother

% Do not set `indent`/`noindent` classes on paragraphs
\Configure{HtmlPar}
{\EndP\Tg<p>}
{\EndP\Tg<p>}
{\HCode{</p>\Hnewline}}
{\HCode{</p>\Hnewline}}

\begin{document}
\EndPreamble

%  bug fix from http://tex.stackexchange.com/questions/362178
\Configure{mathbf}{\HCode{<mi  mathvariant="bold">}\PauseMathClass}{\EndPauseMathClass\HCode{</mi>}}

\endinput
%%
%% End of file `mathquiz.cfg'.
