%!PS-Adobe-2.0
%%Creator: dvips(k) 5.996 Copyright 2016 Radical Eye Software
%%Title: mathquiz-manual.dvi
%%CreationDate: Mon Mar 20 10:52:44 2017
%%Pages: 12
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMR5 CMCSC10 CMBX10 CMR10 CMR7 CMTI10 CMTT10 CMSY10
%%+ CMMI10 MSBM10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips mathquiz-manual.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.03.20:1052
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA853
B843CABA76BDE9582090299F423519EE3AF8F83AE7F7828B314B6E36E9127419
F274E9FBF5622C5E48D7E956758CB54E8DB077B8A351836209A9F5BCD74A400E
A58B8CF0854250389C800CEFF0C6062723D9C5F191DC37787490CF4B6F339533
AF9458B566F55442CE75A2DBF1659EFD1967865133CF525DA7A242D0AB16DCAE
2C22BCF453AAC073EFBA1AA8A242DEB8809B32CC0F4037EBC5A4546730D27341
2961D434A474D56FC130DC1E9166BD77598B0C4BFFAF0644F1A5A45B0E4229BF
3E44F7DEE1D85AF1CD42210970EBC2D0C7CCB2062E85BDD4A7EB4E4C49F4D8AF
7F84397CD26F45AE00DE4622E49317842C428693940B7BD7201AC61CD5F001BA
5601D3FE9C220F41004F31D799D5476B1DE24FAB81844C070AB1CA21D34A18C4
9116B11D27773239376A86366AD100F8D7B427A6696048E0F759DD7E9D7962BD
246C2A416AC8D920252ED81DAC9441005BCAA1A5B4EF47D3660C1439D8094F38
E21C39AC59AE0265
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 97 /a put
dup 98 /b put
dup 105 /i put
dup 114 /r put
dup 116 /t put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9042537872831BF5F1F340A
8D3E6DEA1D9675E87B3425FAA0172DBEFD7C28E30906B9FBA65517C9B58FB6BD
E0D474E69BB90B0D130A32C4130974A1C961CF064A5BE8EC1056858553FFCF7C
0D78627BDE04E5D0B9F6F72F92B61A915DFF7AFE7DC3807891D039AECEAC3F50
0A09579E661D3DC3022206061E0250B09A05CF198DF82D4F28FCD2A85F717630
90740F78F242019C349B65C2A455597DEE127E914C372C6EA0E250402117B903
1D7D6FC7153D77458569B2E0E6FB978B06AAD616BBEB70B58E0BCAE1013D4405
873D2AA3C41309993563E652BCF2B244451D8FA1305BD9BC2C57BCEA7F065670
A5059B0B17303312E8B787E02152FA92480CDED118924A9D490B2BCBF9A560A0
D4B55DC4968ACE1019CC2840E1AA0596F8E8D4BF7119B047E55B0FA01C69B9A9
F79DA6C9C9B49EAD94943613151247423679B7A29AD2C71BD077306FB9EE0AAF
9AE4B268C8BEDF3CAE8CE885ED53184F9BF2F55AA05933071F536B7180F6301C
A04438DB5BE00037A8145A4475F336515FE7559214E9F85794431D2CE7466A09
77C99702EEE94E2B2FBD24A46D9F536527A5F4E87D5D2B6AB492F774D47A732C
6C4E5BDB8FDF8A6088AFEFB54C234B9FE131896CA71065F71A462BBB8973C92C
92E8B2ABB0051CA248BF1E569F958CD5CD130A8F049C729BAAA61090655A9B42
875451D2C0BB52C2AD8FB8F36C236CAAFD78F72EBDFB8B420437331A4AC62255
7097B9FBEC129EEA11F27580201FDDA1CF4EFB9025D215C7D26439D32B565762
6EA3B95EB8CB1F6D47E396F7FE30F6CAE3278F09EF631772706CA4F43E749590
483A1A2E56BEB892682AAFE3C93BF3C53429F9C8ED4FAB3106494ACFF60445A4
C2321226ABBD5ED4A9616CC0B39EC79F24E888344AE1D9A0C81857A38DD3843E
E1A2561EEFEBAAC7E07D5CB4E4DDCF4DB650E7884488B12F901B603FC73927D9
A0E2A38624074DA034C300F527446B86B828AD770A6D602B30E470D42FB5423A
2EF14B9EEB93578FF7FCC89008ED2285D3F231826D7EC6DAF86E248A57B9ECE9
B698F314D8DD56A42BFC8B24071E7CD08BEDDC17E3E617C904885117A850FB87
BD0743FF5C4CB1AE82F6454EDA3F899AEEB2FED3D75A54DA3965C96D7EDA677D
B5BEE90B478C106CEDFA41C0100B76F7B3D71AE2363020406476E0FC824C9473
BAA6F21C5781CAA9A414AEEAC989E0FB494A4AE012EB4A62F3E19CC7D6C9EF26
4FD2813182855EDD4659C3C7D436378B0E8C9B5621C42958C658CD0295820E44
384978198B640AA792154C75B9D78889CE33BA1F2FC3D0763F9D9D55EF3FFB03
552116685D541E7E576ABFA5A3C1D04CA678DDA55DBC65C787BCC8AB0926DD4B
79680EADA4E0E3A1E0A31B168605EC8C6C53FDE12BB0C157B74806B9AE76925B
44BEA80840642C61374E89BE7C38164BB32C4D962EC835E6033980CBAB9675A5
100A16D1FEF42725E4D5AD0B2529800B7F2F153C34ABDA909F3337D092B30A39
D2991106125F75456FAD3114502202440A88C75361A6AE6E3F2757EC5A6BA775
D103CAFF90E34098F0B12515E91D0F24E3666CAFD3BF78E632921158DFEB96F1
90E76E02306D3BCCE963AD342E53EE6E08362C5B44BC890004A82F3A0D7707D3
018C87882E3581EB5771A54200ACC888BC5D957278AFF23905ECA58AC8336E7A
54B1AB8E3641733182096A3B2296FA753F1F2A7B0C77F3562C63EE6B97293702
68C611B4BF01A40520F8F685F3A461062393B78FC5BDC5197C2BFE608C43B5A2
CDEA496E4C519BFF49A7C535BD506B2B8B3C0153BF6AB3FE8F513F2D7A2D66D5
2AACFD43F42FFE56D65DBB415918BC0CFE41E820B988C9FCE767E2544E9E16E5
BA14B61AEB5C19C769EF4F3B15D8223284C48D0C7E6FA70EB45F4603C5EE612E
0C3FC748C56B7CD10C2DF69A37AC4E836D941350D8355769ED3C1AD3A2CD373F
5528A486655B5E47BD34A5F6E89B6EEFBB84383B594D455DB96CB8017A27E311
AEC1B0A2899BB2137532B8B8C28E407C166A5A931A71A7C2AA6C06B0F396CDDA
5E4808D589A785EDD23A4CCA10553B2FA2E628BF63B75D301AD263423FFA0572
6E4F63329D50C971ABFAA8491C1719584B1B38B49A9C9FF6F918209022718F97
F8C3A064030639FA1AB3CD54458FE61D395481C541304FA0AE6F77B7557275C1
1343BA25847E57E61472AA2C501ACB3F182A751E0BDE912F5080AD291E80D27D
7F2A10F08AAC803082841306D10FAAF7D5D08D8E66B53EB548E2A7145790AA43
8B5EE5ABC853F8F8504A04DB9DCFBD47850874BBA10E362F8E603D263538B5C9
7FBA8A66448A68C3500EE43F7CCE1CEE7C62230EE0E2354536E294FE3202CB3A
3A90DFF6070CDCC1494D8BC5A7AB698F8D00743082E9CEC737F4ED9EA2797052
46189F75496CAE4289FAC285A7BEA361086FA7AC51C9635E51FB84F7DCED6807
6AB86DBFC9EB7C4769C9B02AE5697A32309FA93807ADD2AA1A0F5C3DE3FD4F26
BB5E91AD38E01F14CB0A723AECEFC37F43B5C665D35266C974734001A0799275
8ED3B62A003D6AD7E9634BD1E10276A5D98077BD5D1DADE2C61057185F922CB4
B115FD56991360D18B869AD3998534C5436167637ED725186876FB5495BECF73
6B1FAD193A55D17766E6804F0E082DC1FC224FADBF2E8A6EB37FF48B308D7908
6172BD0076B72452D004F22C725E8A1C9F02546CAC34C321489E04D082307E90
06EA04EE2A1E7282E1E3639C9BC93E6D52A028523B4AC7E3B1D6602C58B6367A
1B831775043E87EDF19E26F8D94A97677E998809DA0F7584301674BB3E517AE8
6C04CFBFBDE43B415915F102E024A5C03126E7C8C7435DD5E642615FE06D0D9C
138362FCBA0188FAF7329C342E6AD5A3555432B1C1D0BCCC0D890D8B45CBBED5
5CFB0192530B9D4347D3259DCF161B782F5FBA6E9CEF6100061326D00C495BF9
4AAF96CE78F414F0A32EADACDBBF947B253FEAA8E312507FFEC627570E54440D
253D39183C16CB78B748A02F56D049D461854CFF9F0264D49D3BA1AFB27D8316
F845280907E1721D27B87070AC04BA3E76E6CF3D5495A56F4E1AF3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 15 /bullet put
dup 50 /element put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
dup 112 /radical put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B15A0
657F5ED27D204449A841ED19E01432CFFE928E921321113780D036D34F2797DE
D4459CFD15BB117B5C9745EF3CD2B296D91FAD48C80B136D94476967E255F808
AD2B5D522ADEC64176833756510391815A1D4A8DA1D0AEE7CAD36A1D161889F2
3347D5B6BC503300FDDD48F594F391D5FB42C42113C538E707C16EE24A3F375E
7C506E8F49CE50FF9DEF3B4A4C1BEB3848EAA3477349833BA22D2A9012287D8B
A8C4CB4307A1188ACC0E6E9338E1559BE5FAFF381BD82A6C71C267409468B3C0
2C1A29F4281D565836EAE57F680490FEA4A952FF64C8CD11C377C294DCD1EC25
CEFB2B6DCE959D0208F85B6E32E9B44FD455F9B134A5306D95EA29F37BB8B86D
9E592159338E1293F449380E13C21AE42E6319C88EC1A9F09E58A0ADB9740B20
DAC0E973F1B8B96EE7439168103E2A76CFFBC91D6B63EBAF8E3E8AAAA3EBC76A
B3258382890971FAFBE2C80951B29FF54FB8BF3574738BC5D16198F94AAAEC2C
64C7B863AB6BFB8B63802A5CFAEFE53B997B9F5E605CD6C608445CD1DEB75ECB
B59D502DF69E8642FBC085461C1F95B529E4DD39C4DA1A37103DDDC516D82A97
4CDBACD012E8F246E9D7F091B9B0E5E3255531C069F47F999BF6FF6FADC10F14
90CC32190C5918DA421B2C8B92040F88583BB09852969774634F6C6964BD57CE
36B8988D98C8A447C875C3A4893C7D99666C4CA7D019A589E4117ED97F8C3899
5B0DF8565CA48DC0ECE027A480713EA4C8E8AD43DD9A4D3CAF060C6298ADE404
9C641D6BF36F05D44BB28C52CAC7EE30D335AFE3345866B51C6A696544F6B1F1
29A88C7359CA4511A7A35D840BC82DD81A7435674239994C053BF81A81A29770
446368FCF23720FD677FCBC2259329172148684DC5AB9FB0BF1919B84A644D36
0E69DB5F92F12287F8C6A69890C6B97DF4F6A8EBA15F4D2181CC20FB7190F84C
44D5F1AC5645CCABE95FD28E5CE48F4193F1350C2F74C280D790D53D590CB0D9
E646EE261FCA1788851BFF0C323B394A425E3BA1C314377526744D16F20AD13C
AA3CBC7D31F711639D68D63B301E72680D4555C7C1C85A66B245C4637653261B
1EB6D2035B6C292F8B001F10FF3EED1B2C480784D1AC026533E6C0174CF83D2E
6E4EA5D68F39AE7226EDFA2DCB2FC86E3CD22215D9D3812526EF651D6893B0F3
4A0FAF6E5FEBD4A4899BD76C2E797B9D911B42EF0DFA22D8B505D537117984F4
153876C2007F2B9A4A63A01E6ED3D5EF278B26E663730D53D7508F33648EDE12
E7B30B8D19972343A15B649F2FDA52B4BB91F2658DC4979C28414B49CD038B92
090750481CEB09F2061CB590120D416BA9733F86AC4A74715CFC76B18A4DFC75
89DE47D9D34AC285CB4547447146C6E40B24301D4C97DE6171C979ED59DA8FCC
9D8AD663740F6CAC653C058518ACFF82D8788CBDD60CFF7064339B839947E1E2
7BDC21E32D8EDBB8650F09E023EAF0440809AA4A3B2A83C5F2E6E9E29F8CD338
0C46028FAA3BCD9586B9210F27717E07E600A1D99A12A8E4CADD8D1F6216F757
D4A478439D4F99C9B6400CFC2C4D9037E465B1F4B32C2EDA0317C806C5FC2143
9130CF3E95C218FFE3013AAEF6721DA98354D561B9410E4B788B010D3FA3E07C
1C654794FE27B5F990D7E36A7F766B7AEA07E4EAEBBBEC0A5A986D5E4BBA8766
A36D91A223C5E733FFBB97554E28AE5E69707EB8D7F9778DDCACA991EF4DDEB8
5A7CE85C43E0FC30008F8E34E4F97D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMCSC10
%!PS-AdobeFont-1.0: CMCSC10 003.002
%%Title: CMCSC10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMCSC10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMCSC10 known{/CMCSC10 findfont dup/UniqueID known{dup
/UniqueID get 5087402 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMCSC10 def
/FontBBox {14 -250 1077 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMCSC10.) readonly def
/FullName (CMCSC10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /colon put
dup 76 /L put
dup 77 /M put
dup 81 /Q put
dup 84 /T put
dup 87 /W put
dup 88 /X put
dup 97 /a put
dup 98 /b put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 110 /n put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BB89566A9BDEC70EB4F2
048A6EB631F05C014D372103E37FC3FA317EBC9973565A638403DA02E48B7D31
CFF6C241DC5CDB470561002FF46437C06EF93BC99352DF04393C661FFFBF4BA2
0723ABD9B3E9CA9E63BA57EFDBAE684655CBBDBA15ADAE43E1A2C98A3CF060A3
D16AF8FE3A49B50A24C20EEED716E49AF6013D4D38CD9CC41A91C17E4D04D79D
567E1EF49110AA9C34464E95D81A730ECEB2C9AF38FBA6B45E253288438B4CB3
DC75B3A906D4357293BA41E59C35223A6C9CBD6FF5FC90C2D07CBB376C7320FF
435A6251822BFCBB612CE630EDF826C37E95F541C21B93FCE127591D5E38165E
2B58A34AAE37712BC58B63FFD70AB80F4F24612CFD2F1466BAAF3CA2BCB45148
D0DEA0E9B8FBA4C4FF5B8B3CB02E461355051842BD1C94F41066B9B909DB83B1
DCDCBEF7CD00A43E4C0B8191A29600CA197F0BA227FB8309BB539D2A620BAC70
8A1AB2DFA51ADC9873B8E5582DCD3ED154E5D727D1665F99BD89883D69E6CC2F
DB3A57AEB612171A88E22F038461DE03FC357F771675E34E90D4D19B4B36891C
9D2333960400E97494F4FC4DBCE6A73C34A0409E433BBDC0AAAEBA7D3555066E
1CFBB4515C8B573C9B9DD12ED5B6ECEBE35AD0DDEA9DB004FC6CB540B5117B49
59CABE5FD74C6F5B6482B42C20B5FF0467D1DBD7CED2CC651CA57852B6FBB402
A6764DB342889132C911CAA713A7F2FDD8A5E849345D6C81025E02F5B8B682BA
90CC9B467FBC37362436EA6BF8EB62D784B01D5430147945BC09D1F49EE89F2E
3E2B8E6D439248A56F82F2E03EA5C7A922F2813BE6538A3A423BEBC55B345AFB
3B3C125306749E137C647D78028AE1FBF3E1A82C260132832A9668F454D39C41
736717DED0A99F6B11F005F0E1D07FE84713AAB4C042FDC166AA146D7B5E9198
E4F485BE5B135EA281FF1C1E616B5AAF02771F58C5840CB5A427FF9794F93E94
17FD799C78AED1DC4810BCEF4C6C51D3C1504EA2C6F2B29805B7ECF97B5F637D
FE92E168CB9029E90404CB54FB312FC7AA8A9F2F524C03E61F03B1E31D4F061E
1677B39D5D30C9FD4673E1723F4AE3CCF38593AD6D7F61E9DF3C010E51F25085
35D51105E1464BA146A78D7297D4D310AD91342A0BB942034A3EC0696B467367
3E39D202D637E6B14D0EBCA6AD3CF22B07D4CA69C0FCBB6C93782B2F0DFC5AC1
5D8A16CB5EDB671A0C1BA9D10F63CEAFCD0E06E42C730C8EF769CCFD57937245
658F486036D37E8BDDE5670A212FB488A8753322A5B170C9662750AA958C0BBD
8E97D8239D2A08B30416504DEEC4E506013E037C91785C674F8A6A44E23FEE6F
CCC00CC5E4D355B0871FDB8ECD64F70EE32449BB5D6F84F8C8AA2D5B1A489BA9
D7FF2DBAA8D0B84054E93D64D3E77850A3724824914A0F821EEC3D605DD851A7
606936B8B9E24D6E932E16C448140FE94DD96C75AECB73850035ED9C04A1D93C
64B21E7D4657E030483EC5C3554AEF8BE4D0FE5B9743B875340B09E01273DAE8
F256C50A1A8F2E0417440A8BB0173F59E11523E1CEF2593A4AC5AF2167627B00
C5EA97D125EB8A4BD4C372877ABF10F5B7B149D73787E0834BFB3084E9508DF7
072DD71637019599252059738D4D6BC57A9358E4B14F6AF9C4B31DB8E25C29B3
7A15F9953BD73ACDE5F0445A5DC406BB4635FAE51C1D8202AE31730E6F355317
1DC197DB0B6177307C60E5D38F4487363EE051B2E609A52BC4D45B14B6558B6B
5E1618748794B8340752CDBE7756C068975B559615D4CD5A97CE30BAA7B2B1A3
2FEF2E055232B24FD8A21BECDE1B6A479A28EC80AE2CD16DB50B30B4A6CFCF06
491C7CD5AC29FB964D4846415233947522676DEABDA0D9535F8507D33693930C
B4E4240A02B0CE7EA288516B8A6EF908D7F8BAF9012D052C6AC96D9F8F6ADB07
8984F3559C5E7E3022A957982155FC9CD599C74E18328D3AB46F9DD15D1C4C3F
9B93ADB4489BA02CFCF57DE6270F3AD2F8597BE71786510EF08142F430EE5568
4F9DDB792B7C46B6135E341DBBF062FBC50FABA80CD4A384157BAE57CBEA9781
AA4416323265168AC097DE7E30A0D4750143A4FCE70A863A31876A8FA5327C3E
36E89589E363AA2B1A6E8B09F5AEB8FFFD0396067173465B6503383DE517A6EA
88C0FC08578398C2A721E5AEB29F4AC9BC990A50CD87BD35A11F9E81F68E7B85
5E5B95A4F9A5D30379EF90D78E1E466DEF867BAEFC4F5ED2C762BFF099C1C2B3
5E0DA1C2FB33BE1379413CDDB1EE6BB3A495331F72F2FAEB8152E8AD5FD334A8
AAB0082A71D5574B618EA8D487B8FAF1B445F3395B1E21224F5492A0E06F5152
7726835C900E2E52BE3B7B654183AEDEC68053DD0AF19EF6DBC10B6FC08EC7D0
CC0E2C8FAF8C9A4C21FB7C34E074BBA4EE64226BEC8C928A784C1BEE35B72EC8
E9295240B29DDC2539CD118BAC38DB3917D14CD33AB45FE47E827F2A2B193AFF
53C5396C52CEA4F43F06AC2D08C74CC85D608CBA267175EC31311EE25AB48DD9
FE811B411AE426C9FC0B6044D1EBF130231623F1566CEA4D1C06D8032FD9808A
94479C842BC41B675CF6B90113BD681F8D43F51D5016D80EDC11D7640FB950D4
E709A46184406ED90D0892A4CD9062938A8205697A200DBE1F38EB166EFEA0EC
4FCB45CDAF82EA103DD6FDD03D146F3E42EDA6496064DB3F4FC1C5280C9E604B
D5EBCA08BF2AAC90156C11EF68137DC76502EBF216F3AF3EE30DD2676D218428
F41C655093F8B530FCA378B5769F262A6FDB4B66B83F18F050E77227E28D71F4
5F4425CB8D51B3DAE872CD86D7804F870BC564A6DA1CA13EDB00D131CE4F6460
7021661B99612629DCC20C85CF155EDC5111E015A77B0B82A8FC1EBB374B7EF2
361419BA93B857D5C9944BB5B4AEDD86ABCC261542077FE09701C96370168579
5F89D5AAA08D700E2643E88C2FB8D1D56D37AAA9744872E7C050B4CE046B47A7
83F224FA9FD311C955EFBF173042C8FC66524135F579B1397828870D5C9DC71F
8615FADE2A1CFAEA90F732B6C266E2F3048FC43EDA7A6B6D98E9DB793CF457B3
F5877E7A055C92B0246FEA8C72B3B3456F93BF36E2651D32CD614C3AECC0B4BC
F824C8363E593A6458D37408FC5B09883B280005DD24123E2D4B1B85F4113327
EEDD9186A4AF2CD6439B46C5C168C125CA80F9EE9E68906620EE126CFBF26E15
B269838A54224EDCFE2A373EB750D4829BFA410DE5F1541E428BB1E024AF496D
F5F1C151F5A645C8622F2EF9088D57A2811868A8A8BFCDBFCE3ACB8463AC35B4
8B6F44E1C1232805842F56FA468F81FF37D5D55B81CA56058558544C142EB3BE
07CFB1F75DECB1E48C14D6AFDD455989AA6FFE8B8DC54F462B3C20E31D270BCE
8E68E2B43A6625AC7E9792704FAAD6CE8BBE0B341DA7189EBB3E9D5375B27FD4
12506D5BCA50AEDC6955E6C3C7BAA84BACAF7ABDF3A270C7734EC3C6EC22793B
E67B0E288F99699D38DA8B79F2D21DD97945FBDDD132A8F0BF947950D3C0B4AA
EB7B2C435AFE54489E1930610311D718AC610C21A644F34CB2D1959B3066F39B
EADEAB5CFC6AF4D191D86B02402B00D1C5262707861C5308730579795EB53207
A291A27A8B5C4DAE0A87A0C6A260026CA3CB620E1002E066A515D7990F3DEA29
0FAC962E0B82B7A6C86B1EDC54007822BAECED673FAAEF88C8109777EB79A53F
AF3C58546974F2F56E70E9B5CB59ACB5C27CB01895557B2D82134D7F02029B24
3331621F38E68717F5CB68A8892D0B9C0A8ED4F8BB56E80505170D44C6856128
2DED0254ADA4875CF56B4D97372AAE730D4C77A2940DC8C178274DF88A9EE037
215C6FE7B9D481EE4DE809B124C0270782411ACCCF89906A8B143D0BA8B2CEDE
E9B90465C3E57A4FD9AD2702323450256ABD09A1F8C26F08480317C08B75B720
70A161C99715A35A94DD5C9647ED0F8A5337B774C8E54F9653AC859485A1FED5
37B725A7E4BA58711CBCDA6054E34CBD8E9F9460179DA7DBD243D81A1531FDDE
BF2BD425BD9DBE75EAA333B1F5793669A215549A774597E6ADA16D323FE5601A
EDA41092730009A99BF5B5AAE281844A6BF3292D4D4EDE36B4FD8BCAEB6EB72F
AC5D3CD53D0D621CA9EA8D254FDCB2B5161EE9E80B266563F669805A3A15271A
0753983004A1ECC7FBADF62AFEA4DAB49A178C231759857DB910668BDB07CB3F
7E8EC24901863088B3231EE3FA563924032C91CA9D68DB398F9BD9AC0C651EC8
9051C9F709CD784F3FF5951DECD7E869ACC34B83AECDB011E6594347855EE7F5
28811F744A4BD70D4E9077EA7EC19FFCF612689F12B34332857AE41F13E6D16A
962DB9B6AAAC167B9FBDF0068EA13412F318384134B29F3F0C399F1973A3564E
F9C3C39B5BDD4C98D81A6CB476E565860B50704BD65ABD630A5F1372F2D826F3
3AD47C08B8AD3176A170C369EF3CEEB190134006D6135C5B8CCDBE1C11FFF1EC
3F6D8C46E15C4F5EB9ED9F31A129594D542D40DC3815CD075A0DBB648D868AF5
15A05C4BDB28BF23653A3AD96CF6AFC065DCCCB23D5D9A945F8CBB539DD3BFA8
DB8F1FBF9B6F25B41EB4309995CA3D5D6ABD70CBB4A2F0C6364E5439AD1045FF
72F6B45A30BD3A548CFAADDCC6C15D46F6D783D3E520215751DC98335A4ED512
D7D19235CDF911CC69F3CF4365B678EBF3E87C456A4E77339C74930083445588
462529C22A96A28C5CE87AFA0C981F26CAED5A1C8DBCDDA612624DBE0373F026
465185A4D8C73CCD8D71EE97116F8F7D341B87FD78F9CCB9FBDA2A7799711607
6BBA855AE9D5C505870DC85FDFAAA130A351D56AADBFBD6A7D52055E3200F8B7
8AE9A00092B55DEA8BDE224B4BA7FD4A191CB1FFC4CB995FEE1AC2883AB69E1A
AFFC09AB5B9AE311A030A5BA05E2213F9BBF016C8FA80689C069314D91274B20
53FCC65C7D7B3A7504887525BFFA060304931672A078BCD7F269595686310E34
E1ECA868899BC402D17EC36CE40D5041D7CEDA77F7764C9D98793F5334F574DF
E93CB10A5E8ADAE95CE63D2339557091B4B4911A4987CF21B7F1DBADBC2DD605
8EB72473C1F2EABCC44E0D0339EECB55DA74085606C3F89D57ACFBF5755A5395
CA8D4BD47E4EE8D8B882D3AB31A1F0C62E74654C7E041E4FF2693A38A9796064
46526B0A37E6B5BF8E48E80EDEF81E34DA8F6CC9025936A4D0E6D709D61B7B5C
AB550397117F3F9D2F5A542A64DEA8E1178F7337124D6B56BA92F659AAD694D7
391028731E01284BFEA635314A8DA8DF7A34EA3B6B2F8803BE6DCB423A9E8015
55EBD90EBAE8A00298B3B6B1C02BA516AF528122C1F2B07EF69F5466C2C36643
0D665D6561705509B7582D8301AF3C32E2F3B9433E3E04D62117C7E8A368BDE1
0D4DAA1C415B2A6573116D2A169AFEF700A83F55D88813585E89C94C07802BA8
3AE8F9BC3CDBFD9C2E35D062B1FD6E79E1EF104FC70B0AB09D12CA027F33F85A
22F0ECBB4AD55FE8C616B82C46CE69A600E4F767BD7A9C5F9B37A3196B038384
5DEF76A8884425FE598A63AEB19FA698C2AF7CAA4983CEC789268E22BA051EE0
20A40633D22D8F707626ED30E8273EAAD1C065F0B2E1718B5AC853ABE09330C3
B0082A71D557169BC1559B6D285A3499D41C4CCF1F74884EC3917EB9C574371E
AFE8578DDCA459B8D22C0188A8D150437B05FB92022C95EB6FBCC954216B5FED
CBC7C90B9A1F061376A9840FB64390A6BA99CFC8279A86A730C6DBFD14C53C4B
7277D676BD42203677E9ABEEC8C97E13DAA626474513B06F8734DD784F2FBBB9
B3B448B8E8221E380AB4A86D3A683B86A54129519D50DD4FE63B30954D805CED
A9A5D9A39C58B65B08E1C19555E927C6DBF7FD07252B2B57F62B905D6B488201
213D106A41033B26FFBAC2E616DA6ADA6D560BADF10E68872806CFD6F6E19D7B
57CF1F7A030A7BAD374F16A977E0ECB8742D034ADAF9C247DA19C8AEA74EF6CE
DAFD6B1DC562FD3B77E4D008BDE4D8C7FCA9895DA1AC9EAA01C32A0DA712B082
9438E77230D38FC4153E1711417B918BA6CC03203A5FF082AF880F48518D8271
C1121E4F1386B30A7F1BC6F10EA98443F8A65C867A109336B808BC9A8E2A75AC
F950835AA84B56F59DA4C8A18859C3B68F6B6DE09A6675F639EA9107BDB67B0F
54EBC564BC2D781B61C14363A54956BA78A2BB89C9F966C94EEFC29EE9F4E23E
C0BF750144DC289F0DEE1F8A25BB52E54F656FAFEE4BD2DA57E1306BBE648051
1D0CFD6A23A3DF082E3CF13197BF1B7FB22B2CD427BB78F455C9634DF989DC90
7BB2AE247B1C99AB2062855B2948341B0F857ACD750B59E370A6698C6A1F5287
72A4A9628A592E313956C242DF8277EDD2F1FDFB07CDC104275FFBF796D7518A
DF49FF3CDEC3BDFF1D290C382F244DF18005ECDABF0C5C2C64EEC4383E2E07DC
5C82587C071E59B46B7BEF31D268F39D9B12D534344FBA515E9DE8F166FAD1E2
7D1558967AAAD3829D3F7EC6938D20E5379F414532976ABA844D97A5E9078901
EAE4D0ED1F4C7EE7A2D80D891A5013D6409A38ACFA497F5A169EB7F9F4890DC4
62FA6A89EA48267331F086992B9CA9305E16611E6AEE67DCDD588A25D37F45B1
0DE75C802EE021E574B64B3969DE2E5061ED9364B646C38D4BBA86802CA6338A
94E135D2256920EBFB1AA22D9E90C7D16853F0DF9F2D942748EE540E4FCE63C6
5380D7AB4ADD6CB00FE8F7867E4862D8DB432F28331428CC350CDF7F447A65ED
D7683ECA35A22ADD06E9FE6BAF060913AEEE7B2B8EE4798E437698CC9EB2428E
74CE73F84D0D2292DE709D71FFF8901C3505370E6F1D4E28E6B7372492C65A88
159371B1D60D77CEC93B272B6C5394EE1D2EF9969DB2838B8E128553879A1BA5
2884B0A596E8FC3D1E648B7E26A4AC57DF09B9CE09B2F91D8CA618CA52AB3DBD
D005A56A420366069B73146A6F58E88BA49671A1AB7C2070C3D42AA770285143
40AE7D7868C0E1993506B07C086AD7D4F28CE2D15853FC5FBCBF9425D8012B9E
DB6E1E5002517659C8DA69DCEACA94F368537668843D281FC11782F1C5F71977
CA215349EE6F20565DE3D8D8212A40E1227A4B22965FA64A0B02C62BFDE97E6F
C3C54FED4057EF9D258C42D7440C78C5E0CC58A40DD74ECED4152F70A93CE71A
1B3A57C46F74A6D27BF98C97CCD31A8EA487260F224A3E40F52C65490AB4098A
7B9EEB54A5A415C8C88568F7D9EFE74BBB785FA18AA27D9201F28BBC477A20A5
D1307AA78EB8C7CAD409AB64B29E4115E45F5FADDCC80CA74B296C4265A40614
37F2ACD8386AC0202D6FDB6711E8CB06442F209D781E940ADDD6D881D4F8E874
357C533115923B90138FFE31D3577C6AAE60D768970FAAB682CD0DCA3E9A9A68
6393E4B772691C1013ADFFC90C508D51B02D2518ADCC7E79F7DE5DF9D18B8435
6129064DD1A3995E5A6F45D78287CC10A0EAFBF47223494C5EA934B1BC2F7C53
686C5880303F9E3ADC8B100D441D944686E1FD811C646C6DD0224F6CF55FA87F
D132EF50450879A25242A18683BD6D0266F8F333F3768D1952B0F32AA75106D8
EC0AB703F287E847CB91FFB88CD9DA174B49171822BDE34621CF41EA772230A6
3088F8D19CF2364A329162D39E166AC728B267758341630B00398D64538FCC4D
E3E6CF103794C29AEF7F7E56970F6B1ABA87DC8D23E280EDC77556593D02DFF3
154883CFE4EF04E07E7539A4750FA1CF1A994E99B656E728D140C83AE1F196AD
9F049188A4184C84556C0476BE46DDA8ED86888DDA3065C5091D99EEEAC43092
40B97AE327215024ACC0134CBE91FD761C26A48EDFF9028DA28222985FAED7B6
A1CC891D07185666E34BEFBBF77C6C32B88FF3F1046E4EB2CD942E70746DDCDE
002E74BA03A2B15E0529E61DCAC207A71F61C89D81B3C53C5B458EAC70ADFC54
810310CB04E1A21FFBC5DE2429EC0989A3F2B6AE4290A005FBE7367288BD767A
D3EFBE479E69066B803788C0CAED640D0FCA79A4DFCB87E6AF6C3BA77A254CC3
1833BCEF1C958A4DCFC898D707553AA905DDB525EC0A55A65519D8B0E5231296
D9B794F347BFD10E49E52A60C956F929F82FEC54B0BCA72EB7DAAEAD90278945
EA70346087CCE7261E734076B6FE9A2F7ACBBA7586439A6390F58086FCBA946D
1713D5B0EE42E9DBA89EF543D8C3CE4C76A06D3B15CC3C7C3F7EC3EAF07C1087
3E2599F0CF744763690E3F5BB3CC348AC52F4DB9FC528CCA877F264F9CD0A984
2A9410A0895DF75AC2E3354EA556DAD044021E04D489F45C86AEC4EB10BF0D98
37F1F8CEF58D96C38632606034F883B76FCF024D7D14A5BB2578EA332420A9A6
39DF73EAD9639181DDE5D41EC93BBFA151395F5221FB64F95A2A29CE367AE89F
B0BB24D0C64FB53C4AC008E0E32B9674957861DA3ED5A50F26F9EC44A5D755C6
6AAEA36CDEC2C3D06AE6E4E305E03F9016DF990F21725DA5D9A5E3F6D5B77068
1B61E3F814B3BB8EC649A4A1141F86D8A06958F1DC24B0BBA1CA0C3E3BDF49F8
5DFA1DAD7233B9D4558E92F2BEE44E0A82191896CBAB246CF96759E26E585CE7
73E8B67FEF0FDFF9E3C03612CFCCF00A3679B5455956272664DB8A5AD40FA07D
89222C6861BDBCCBF531EBFEFC2B66E27F903460F7EE22B26ED514BF280BAB6E
8876137E2ADB89705E72C29482D6C1458AF1C2027FDBAE3079913264BA22A010
D42F3E0B7AF092E5227B06A1886776CAC21C4F0D155C3C97095D899C03242106
233A719447D1DCB5C93EDB56F54F3AE5C07724C9AD69957492AADF6630F91433
DBFD3B47E039192CD426D2CD31C29550F58B08F239D73A141F55324978146BD7
6668E71FEC6C9C2E27380D5670042678E66C1FD5CF620E09F31E588E0EC9FDC4
F8AF206809BD4ADE04A9693FA7F3771A8298B3FD21D1FE47D7D8571A822A500D
D42BD5E698AF65879DABF3A3278B18B6B11EB7746B12A221265FAF077FF338F3
F0F1B7903A2608D78C8CD3312E379777A07254B4CFF542046DBFDCCBB8F55573
B7F39DABDE886A14D4CF09991D3850AE15C0404A0837EB2C81294090979FF158
6674AE52C9788A2F811D2D079694ADABD2FD3FA5DEA09721165B3C2A348EB38F
9FC911DA8914A18E18A2C36192A8F5C1AAB756B63DD548EDA7E859DBADF2C5A4
F2C1D84B8914668B66F6C7E6B72DE04B12F9C028199E2265172E277A67A85969
4808990A42BE833B00A4ADC1E3453273376A9A61F4D88627EE206C375A038844
586AA23A4B4C5246EF5A096396CA62ADD61730CA2245612F93BFB332D66BEA6A
BBCC77220E660EF56710B95369630F6496B0AD5893E11851D33D85EF4F2FCEA8
F9080A5EBD38DBB1A4D7DD5EAA2CAB190E7D4BADE8AEBB38DBCAB2C062E65175
AC8731F083BDF4238F40FE1E9528C35BAEDA24FACE7B5E5BFAAAC28A83EE543B
43FC2E76E77ACD7FBB7D6BB57F33E5599991376B22C87E5C2CC5590599176E0E
429B243F0C1050A52DD89281424F608815211544130E962DE5424E97CC9B0142
5F8506B688038E383FDAAD016EA6A4EF57203B8624E919ADF36FEDD53A5FE048
4F5E022385CAC1CD3D188AA02414C2FF62588932136B364D19C729AA55914A13
1BB3BCB5DC7CA5ECADD0CE11A58DD2A864B9EACF6DB6D225D215E2243268CDAD
49C702B3F94F5313B6A7DADBE1FC8807BD6F4EE793FB0EF3B28148AEE7F17182
08A47E64D7E2D1789B3A565A7B86741A2B3DF00FCAA6BAE60D1E3D4AF119D893
F278B80E23B4B8A45605A56CDD8CEB6B9A139E3CB9D22AEDF037593AAFC056F2
55B1755D9CAC7AA6C092C58F51F82E1160B1CF9773DF4D22A3D2D61CE52FBF7F
94E6BC8C14258496977A2C3D8347EDF0D7BD2A8AFAEFBF0D00B3DDB578259EFC
1321F5384094EB2494B421F2E7E98D509832362B02C19C895DD6E44BBC8B38B9
487272C7A18E34DEC17538B779F3B54DB37C0D3AA93446A7C9E3ED45BB4F4C80
521B9D3473C907E78C1547D5F03B80DEEC97C1397DF2A63C0A5E232334C20CDD
56AE3D9872BB4FE2B4B4D3DD4AAB3ED9F44622A8E5A93CD0C51E1D58B64D0C71
75C91219DBE6A6107403505ED4E753D0E511B09F65AA8BD63261C5A39B670F84
C90116CE23EEB9186096FC4E7EF1EAB37DA7B67C4C4B25F1271C6854A6DD2567
13CF02ABBA46E39A101B06DFCF2493688207EB75408F2550AA11CEEC81774C2B
A904DB388CD32E5442A001B0953FFF9A6BC47E9E2219D79E3F8F443757B92CD4
C2229761FBAFA3595D65EDF9F735E6F8C0097D66B7921A6EA809C7E18F704D50
37150AA2323273EE9203A60904A9928561ADC714D158205A829FAB3A35EBED89
79A2AD0B059EFDD8F508C88F4362C7450A626E7D490887C4082F712133E5EBB1
331ED92C6286C9941CF0389422E1853FA1E5BCF5F3B0CCCAE96CF2A604D118C8
E6BE6C41E4CB6E3486D1FBFE3EF190180B9DDD33908A4DE02D2E4D240D81F078
56DFAF57E825664891D831C28EFE5543747FD1C8B84D0470EAE56A1C530DB9E4
333029DA9A2A8F5A8137E2B60571633AA83630BE121CF6F1289C681F4E35FB4C
949AA407C0252B04CAE06902C27DDCAF0D3F52413EA74630FF5391B45CB31DC1
8FD450360F926E5B79C91BE11612F11592C0D3EA1A421E001D907DE04AEA88FB
6EF2AFD9F51000F31EA7955A834B78E3911F97FC4AF727D87D9FBE3F53CC8167
00C5401627DA0777810BC05FCF110C18BB8473AFD81CEB21FA45AD865407884E
2E573BEFF7BE4E16B1E2BC78651A56EAD7EC62CFC83D439352F9DCFECB675EEA
8A3ABA2DAA999F35C119012191F67CFB5E5F32B5B4997DCC96FB34DEF57BB94F
63DE714D033D1DB17E182B0160E0BC13A74948C9DFAACFD26B03DF1D4AFF9BD6
61C6D35365BEC76DD4C2420855A0566227ECB1528CB58A8708C6A9DE6E37DEBA
289B7E964C13BF9AD9D95BA115A181D8458267CFA2CA4A19ECA603A4F1E9A962
26AC49A5F37AB9C517A289C1E997E57B30F49FE5079088C245594B0B00357DF7
0F083092A1C4D3050057A93038A843485DA2BECE15EB03DCBD392E8D92A31978
4D6760EE09DA2919CC167CA4C2E6C1E96354329AF563B24961B02ED612426A1C
2ED9016ACB267DB3264E571704EDD8796D1979419FF45B0BB8149109764A08CB
0F5304AE3A2880FF1D0BD49E2B7DC260486AAFE59FFC6CF90806E00F6FB45E0C
CE7D8E92BDCEDEE2981EC1FEA88822977F05731986A6006B4570EDFE6D90AB7F
0688B3B03485CBE177BB259E655F4882EA2E107F5AF4E99ED20AF8E103F301AD
9F450236435C8FA82508E1B21DBCADC594F62ECB50462680930484886BF17651
AAACAA3C06D7C413A8F54484DAC1FC3F3E114E540B00067A7755C7C987E9B182
3E72E0282B0419EE11509859137183EA6FB7C13E0212655E4484D0F6893C09F9
1F677A5099293F5BA544520C6E94F8307F5E8D8115646412D4864E21FFE859C4
4B94544DB1A80833D0831DBA000B3ADE896DFCC8E56AD8D2AFA57FF464621C92
BA63B80DB89F3AB0932A153312C1560F4DA809F97045C7FF8AF7048E0545D551
DEE68B1302593B3F55C9EACAD44EFD13BCE3B6EBBED119AC93DBFFF2BABA69A8
CFA83CB8C0BBA087533FF24314D35271B73B6803CC98E76656465E547BC00D87
F99513943A38A37E4AEAB2FA030CF8F08548D547CF96BC9C89B6C7E4FB09C0E0
E847BC8C28ABB70CDC0B8D3C7E4075C49FE68641F61A488565762F55E8B3F102
0AE2F1D240A6494DC6A821898037795CF2A8B0370B5A361A5FE09C0F78719BE4
B540D963F2B41C21DC872C07D4FC60C4F9E50B387D42D5BA918C93541D18DCB6
2320674924603337223564ED5DA7E0878C472DB3668813D087813C8481616678
9831D9BB77BD1396E923248BFE9D41F978B25E98BFA3E96902E48CC5084DCFAA
D491BAB89DE99241D8BB5F50467CD2BF930C8EB1294E85B0CEBD3295B9CC20CC
A0536A2D249E5D016398A149D62E8677E5E806173656BBE395CD0C36C0A1B990
B9F7EAB6F784267B12921BE03E89207398E85C87EEC4A35649E0753F885688E8
C594278C5606AAB92B66AF32B8BBBEAAA69907C08F54EFEA28ECC5523FFD1288
46BCA8BD0B95601324E271E40130E40BBDFBC6B66B7CDA2F3F4256ED78742BC4
49F00448715E31DA63F3975B8CC92F42D9FAB59E41C3FE153C7FE5D92388822A
041C6DC9E2DA1304D89900BD4D219AD9426E0B5BB49C276B7AEF0FF94EA248E1
8E61AF65A8442B1FFEEFBE908041344F863D9B1A1CA16D9D51FF535F1AAA5C9C
1D3335C65842B023C91A9AC948D969C053F3ACF4617F75C76A850886F06DE959
CDF4499D4C0F4BE0E4BD5C57BE732FAF7E40AA01F5E712FAE4372392898DF44F
B3DA039EBB9998E9274F3D2C230BD0481DDB427AE3FDF8A94D693E57928A8234
9F89E937D70C38C90DC858912CB487EAACC335EFE55C44DE235482E3E275D864
603C6D3E76D5A29D476B4CC40AA5FD045C7D781B4FE33569C6253B510A8DCA42
EB8435806D6F58F14B11C9A59EAF2A2371E5FA2CC951FC8567A4B6C3EA9B5F2C
66B9AFAAC2575525020295757BCCFDE7CB521BED2B733BD0E7DFA8FEF84640D7
C50BB670EF901194F08E822D6A937AF8F20D293F17F5F61FC72391C9A077F26F
C79E0B404B9C3576A85B5F69B876658CBCE9FBC37AF6F2CF143B8EDCFC065A01
67D74A0CD3D8CD680972CCA8BE629AC3B03ABB7CA7752F8962BE16401974209C
14CB47F38BE089B675BAF3C42FEB2739F204AC5FE38520DC2A1FDE9DB39D6401
47CAD86BF2441BDC8AD9A6592205AAEC2D2DF9E79693EA17F088EF86C06389C6
04E814009234E2A36E468EC4B2658E492781C626CFB63DE00CE76DE18D94BCDF
704F1AD3F7D2966D2101DDFEBD6CA891272EC806F4F52833D21214645B14485E
6614F6987E14E43D1657D9D1A92A520B5869353E5236037BC1CF1D41A10DA0BE
F98762038E2AFB8568C489D5F136FAC463DA6F8B9F11BADF661209E4F6A44BBF
8340123B5E0F7D6C4EFA161313A0E472FC80ED49D7841229CF79A3BE50E4C220
A33F0EB9F1BF8ECB763A4A333F155EDFF7E688ED00896FA670B169DD2A0AFDCA
9DFD1DA0FB0AE22A42E35E949AA0DBEDBCEC5599C6F8D7DD8AE58330E886A906
E6815DF5DEF34F85B826898069F9EF2A11D41E82ED1911667710AF8675D42946
970CCE1A1C0D0A604613A6A6323F69FC6A40A2EE74DB4E2F9E0AB8239F89E9E8
9ADFF5BCDD42F0C96358BAAD45401CF98E4985AD43DF5211AA6FD57930BA2B38
265EC92B82AFFB1ED67D5E1286646EEAD8BAD0B59C059E4BFEE3EA04E0C72761
9314FE26F8BCE3B3415D338BFCEB2E96D2E6D737A907219A1F0BADEBED6BB33B
F601283AFFF2B8F3C45A0DCA16
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTT10
%!PS-AdobeFont-1.0: CMTT10 003.002
%%Title: CMTT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT10 known{/CMTT10 findfont dup/UniqueID known{dup
/UniqueID get 5000832 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT10 def
/FontBBox {-4 -233 537 696 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT10.) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /exclam put
dup 34 /quotedbl put
dup 36 /dollar put
dup 37 /percent put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 89 /Y put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 94 /asciicircum put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E5ECEBA191DB82B3
7A69521B0C4D40495B5D9CE7A3AF33D17EE69979B82B715BAD8A5904C5DE0260
6C15950CCF6E188A0CDF841EB68E5A2F88253E382140F87C87E55C9EA93B8C89
14A36CDF630D6BE7CD36DBDCE22B21778E8648B97B7EC6742EB5114BDF0454B0
0EA7B1FE236C84C0E5308C871F67B973892890557AA12E00B2C20C71F516C397
3F3BBD14A1D0149CA064391056E45E9470FC7F6F556ABC82653B3C8049AB5CF4
BA83C8F2158C236B2FFD4208846013BAF4165E8BB8D334C8FF2E8D74AF5DAB2F
D44788869B08399421AAA900ECC6A2D594641C121660D4B5F512938994C18DD0
FCD9B008F68F0351D21ED735B2740CB1E0C1CCD25EB548C35B844601D98828DB
556F71D07E081A593FF12DAF83676492A0FFE16E95717A07082B43A966C1EE8F
8A59E1255E1705C43A23CF29A5E4A6547C93F1680A870EE7BAD8CF74D838CD5E
F806911D8FE4262ED8E7F5BC58B92C9C6D74F8AD45FBB021EC7E97393018B9DB
B1B84E7B243ADB05ADD3F1DB3692ADC5D47FEC7DF93080669E63281F1576B673
125EDF08016664BE73364F65389F7C3B66623AD1754ECBEF9E5CE6948D933787
A5674279ACB2EBECD3B4E6361419AB32028A27670C9F3E18B746A10B00AF6D77
4EC00E3BE521C02A99AE5BAA98F793EB1228952BE67934B91472E01AF7B816BC
56D7F19F631A1927846D800C107B1E9CBFF9D2DD513B4A8CE2E0DFD77B1ED178
E43FA7052765E9FAF89989D490D8FEF6C536EC0D4AE27A74F474B98DA9E6B92F
15E063DB260571979A5DE2423920CE1F59F56EB11E00E3BB9D466A8263E1E385
2014BEFDA8D1EA3EDA04BE32AEE6CD15C5C010A1DF7F705A2C0C18E87C8DCCE9
05D9163181CBA56C0FAC8C06A2990554C8E759D076B01BBEADE3B5FB8B551390
6C8E4A2A1C6E7D9C708614626F3770C0AB7DD2027469C77975C27576065862AD
04E5E50CEBE907E3E991FA0C627302C0E207B4D5992BEBAB5853AD1C0D271728
C76F40A79392ACCA7358F948AC65DC823CFDA59E1FF69CEBB6B7EC3CF21669E4
70D999508F9C49E2D9F8818CA53C977D93E15FBBBAF75B1E84F0BA62BCC4BAFA
4EEC82D804C8A8C0210F3E5E258BB1F6921AF02BA9861BAD5C3D5FC8CEFABA8A
A607E547B802096F7AEB09FBA99C83C9A494B94408DD607CA6561A6E6660C473
62CF8D35F31D052F6C6C8138A8E1430CBA7EA6973D6D510C1A06B3FBD79D9364
240C1A00272DA44B89A9FE8D5BF36DC1B5EBB4A78ADBE9C5EDB485F093D9517D
69E1AC9A8E6C9D7C324E3797CFEAD9A18E82E03F69B2CED7D5DDCD1A218BF2E2
ED2293AE999FE2A4B5213A10083EE0407BCF8007670B8C737EAB30311C868D84
121149ACB4A27F3ED6C0C181C98AAAF51B105F264B5672D7F745131ABAB5BEA4
0C9B43C0DD9116D6DC61F90BE72018F290D26D5E9D341055CAF09C9F45333CDB
D45B7954271767F638EEC499F7B53C2CC5774EA7A7F024C4CABFB93D9CB1856A
0C671A4ECA7C62EA5242648A84E7F3AFB9547A0AFC29593CFCE6D8B873A78157
D337CABD291431C0A2CE1F37E0CD7340567AC206FF98E4B5A6410F70F750451C
550EFB54AA259A1B236CA9CB730D2CEF125EC65D959441F7CC9768F777B44844
CC9842A307C72B740680ACBBF6AA35FA7A94825069BF7696ED81A371A9E5475A
9D997F2DFAD339AADF797F7E03E654234455AC3D17702A420EE0A597BA31BDE4
FEB8DBA7C61D311CC90441A620164DC22DC2D373973EF84CC553453AB1B3337F
7B39983B8DFFB3A9425F119B45C1CD37A76F905777B3154CA6200792F1759D06
E017890F4041A385F2238E3C48B6C8EE6F5258463FDBFF7AC762F6C4363926D6
50F004D473B7B7F73CA686B559C2885F1AA761653C727A77D73431E9D110E76A
2E55C68CD50F43997C9B2FC4710F8C8540909829E215678E63BB8363C4B8AF05
9986102BB36580D9CA95CD216B7C321822CB41B2E0422CD077F3B55E0246FDB2
44D5976F67296B5B0BE4B06F6E43535C21164E6C5089C3E9BA2D6B30888C57DE
49DC8D9D46C0D5EDC47ACF2C03B72DE3B69512508539019B759280BABEA12BC9
385308A0395C4CD33182A10A5A229743379C2075D82D8BFCE4A66E1AA087A091
8F5372684FA5037D1B92D50CD9CB4F50AD4F8EE7D51F1C9E63C721CB5B9BD011
6F0A8DD4FDCD2B008F223A1036D90F0F3B252487DE7898F9AFBB3A9D9CD49E0C
EF4ADAD5155A98D2125ED5A3D3907F67301649519419F33CD942E8DDEAC1BDA0
E90C431B198F646766A8FA9F8D1561B57E126EF604838C0C1966655CF31FB7EB
C8CCC434FC1C96046D38203E1791EC824A3D7AED85C029288D4608CA7668A2BE
484C99639F121845B22EEFCE0A3B808261921AA042AE19E641769E91277BEC29
4594082CCB3058F90FAC4A700A8A827ACA00FCF574ABC8EB7DBCECD97F2B22C0
0AA19E8739B81AF8C6F621D69B8E6F29BAE233FBA655A0AF5BDFD7F5C6B9167C
6BC7AB693D45EF2AD999F5DA3CEFA39BA48A17EE6D9F2C4DAB91AE3F0044DC3F
5D5506CE4675AA928B0092D6F173644F91295216D8BBB14CDDE0AD524A4D545C
1B5E284A3BF0396664081CFB4F186A84A0D24D61E82F4767C1E55A0642720CF3
909FA1AB8EAB78030B59BEA067DEDBD2F1D0340E790AB2777DB18248521934A8
BB38A58B7F633DEA4291B0D5D13E9A882C974697CC6D3B49E030C94EA29B5506
CC29C44D01B4751B453A46A9F6BF3BF135AE87A4CE232AF57B66578310DE41E0
2A6AC422117F1963C4D7CC306BD25A6E724E51921779F22F029733122E23E2F0
CB340008813ABB104380C80A492B3FC6D0BB07CB8D8409E9576891EF6E5C9D08
EB8320DFA31BAFFBD336D0C2BBC3D3B2D30368B9860768FC080D30569C7F7811
0EBEDA2962476113625EEB555490B8CE4C5F99D74ED10F738C61854CFF8B41C6
9402E56BE8856144A1A05D0B05F4CB7EF728B2F4F5A439F18C3B68CEFA41E59A
D8308ADC92EC1289DC84CF48D2CDEFF509A145BF945E1E00D552D329EBD2A7C4
21D58082CC8FA790E981F4AC8EAB99950678FD3A7DA3DF13778681B208DD71A0
7C3CBD0664B37C9EDC6B601D79A2C51FB54DAEE849F93209793849104E722D3F
52DFAF7047EEEDDFE744787A5801E4AC2C3D58EC5DDC15FCEE03990C53B0C57A
FC54F125A04C8E4A0ADAA725808C587E7DAFB9F784FA2875689979D316DC22BD
AA36B306A1ABCF907B63C6476737B746099973CAEA8C1E2C5C41F27E0F7DE8D7
F0D942E34E92F43FE902653D4D2EBB6F3B9F7928B1550A82AF234D45D028F429
067652BD3D391BF423AE72B9CB1E8D91E898161BE3A7849D456A861A2046711E
E934DC59442AE7D81661CE8EF727D8D7DDC0270E937E40F896AEAE6171661431
C1025C53172F9D366834BA0054FBFD84503FBAE328B6FDEA180F8EA35B1DA937
5CC3B8F00C206908C2FFFFA6A7AC6915D15EA44BDCF29E2BFCFD4A849535F19B
0D307C696BE8205C7D84B9C77F02EF27D911056EDBB4080E4D3ED72788666CAD
CD91B0ECE27A177DB23320A7FA9C31408B4D02D2A4B1CC6DDE1A6CAC3D8EC1EC
2226EC98E51046D1EC26FA20EE62D24747D83CF4941DCE5CCEEC0DBE387149CD
E05B19FFCAFC0D117F9A3E60DCD4C815228D98EF95EB559AD0ACC0D50FFDF714
56C3C812EA5ADBB013BBD956A7C4CC0ED7D3E25D5C9AF5E626F18297F75D4957
F5B0B33379114B903FE98BCF35C3FF76FEE1D9AEB711F2962276531F7380EE3F
E368720E0292A170A15C5539B1FC7BB954EE2624B504CB8C805B8D31AC38307F
0513606F09211AE64DAC447693B2A0AD15E9A64C34F5A911ECD0ABCA90E9791D
67C6BD202B0858EF96E7722305B8AC02B01AB1706CC6AE875A8DDD15EE349046
EAA65005E7866B506EDFB7A5A2AFD5C9E9DCC821A79EE9C1EA2C7BBA32A40BC7
CEC26DB1AC473C8C3960ACEC581B37D6569E8C8C42950BAB7930B65E1570E3F8
9A7FA719F1DCFDA45A3BF2AAB32C9A93BA3552608A61C623DE59BCB346E87EF5
9CF025A87803161221C5C1C6F6B3403712C76E9D755C7BD68D7F2DC03C14CDF0
C1BBED1D648B905B4B17037B7263C1EA7A7F06FAAC4E09E08483A8D714C19861
327CD9C32DDF850302DD6DDE24912D00C22ECDF3CDFB18FA831A41A7488EC203
F564CFE30D506F0829A96D35A7E09C3DCD107D589B627A15B55C5D6649126BEC
60B88C55ECCBB4E680265D9EAB4CE22965D3B1AF759B01ACB0D0E6C92B6B4EFD
A81E6A648708979487FC591CF09631310D46891423F4EC159A73E30D8DD147A4
B0EACF6D45D18CD16CEB8176F03ABCB41F2234747B9733C8FAF34AE5D43D3BA5
0CE0FACFC9B087F84FB6C68678BC6E76022B1526D6E5B3A48EC1A110BD75F45F
1C4DC6D39F254976453F57DF873B7D635C80C42026DE020E5BAFE0DA0D54D1E1
DC634D2621BA184347E5252F645A6A1DB7657C48124186F0E4C644077457C24D
55753C651A9A7B6349867641464B515B821349C795A645420508673B93750D0C
7A3B33EB1F09782033742AE8F3A23FC02284E6C03818FADD1731361542E3FA3E
75B8D52B668C3E18A4AE967D0FC3157083D952AFB8144D549E69EAAC51C279C5
E5D88A0D9D53013DFFB4352A1598FF84DCDE6FA32FC377306B9B92C0F96EE149
8CD55E7B2445B86CCA7A547FA732D52D59025129FD8C6333AC0DF4F0CFF6287E
F2036D5DBBB3B91B92F12FEBE0B61A313A4DB5A9CF0BB3DDB781A56FEBFFACCB
8CB9D1D3DBDBC4CB6AAE6769E470582403CB920630221B68BCB625CD4605FA8F
D3D5B7A1A28D15E44B38E92E906C138E72C15B86F64C38E23BF0440052A8C914
54397F49DBED99D0AF7CEA3B0A05FF37C2D7EAE1412567E6776333237C31E3C0
49949EC8BFD6E0F6446CE2D4DCD2C1524A288818CC5D159BF8463A847AE4A2B9
CC8C58F822804B81B13BF4F2DEB6229C4F51F093075581791D02C36A13B855A0
34900AA7CD4F1A797652656FE3A8425A38F421C4CC0ACA1CDD44FA6B31219276
1CDE1CD63D6A58CE705CB56CCA1260F9B86E989019071563A9B4C274A87558CA
6EF1660D574EDA276801F0057740E2C3B80D253D697736484D892CE1AB128B8A
DECD69712F5E70E895FBAA927E8194D792A04AB6CE205E04E38A433BBB793FB4
E8BBC4279D58A223C6673D909D6AFECD246E66A52F4CB35E5931D24C828489BD
4ECAF621A220D8ECF702BEB01C4FC7510197D3F6D15321EC87175ADBA6434ECD
2B5A306E91375CAD22CD94301763E4A8B981472890422C5488FCD523C9CB17DC
ED22FBF12D5F7525D0D6BCFE8CE85B0DFB1D6F989C267FFBA0A996D309E4A934
3DB54A9D29C88B9D55D7300DA3D46419256C5A07A2A529A8DE8BD1727281F5FE
97033D861E0531B14E811378EC1AF1CC7EE9BA2B07D935843D3053F673979F8C
FAFD59D555B56CE338F606747238B22BD62C42BB7238FEA335678D474A643570
A9E7B4970E8C541CE9DBC7BF70ED7BA33639D6744A18379455029E934C95E2EF
639C4848CE9A0879B51649FAB023A71782444B451F92A34CB8A124270CCF86D4
D18EEF5C1D2B2A29012613851C49F50702D63BACF95EE2AB4D72B375E0A62615
E0991E130A67ECBA9E05329B740708F1CB148724C3A6E5E3AEC1F88EBCA398D2
1CA8827C977D72734310233176D1AE26C55CF2CEACA62223315C28FCF6305C7E
A22414D4739A059F552F1F9372CCCA5FED4F9AC987942848EB498900269511F3
F408CBEA0659B954F5F1B18AE4FB270213646F9B28AE4439D2BA2D3E0AAAA780
5E530E4EFC8A060EB979E12191044509DA0C14397AFF949E12DC970658D5EAF5
4EA963F5BC1407A32F3837CA6A24B7F3D60EB8E6222B702E25ED903F9D21AE50
664A095009BDEAF4B78DAF94E5A55D48366CABF07791A1684B2F54EA69070844
4F031AF8DF416C2D3679F8BA038B0DC9DD0400CA6B34667BCBBC07E62C1668A8
35A8C57C9048A7227E672E89681B54D662079A189A9E96A3CA96D8DD10189B04
1DA49BA2729F1CA585B1BD5C467295285D52E47CA904235A1A3E48EFAE9EB6F6
01374125CE89D53C276858668CF45D2F092DDCAA52418E0BB94C2B8266B4D88A
5D911507BB1DDA3D8F6E7C14A91CA11AE799EC42E993098E18CADA70BD2A1D82
2C39326C6E3F9E84CD9758B9AE43D79BF99E6A0CD713E95B3D9B7DB90D127DE0
DAFEBF850CAAACBD860B5DEF2082F1ADA64B44B193C4A1417BE221FDCA36456C
BE5934C8CE3ED55AE3A11697C2D682B7D0F72D48976451D205783BE25DBD2507
39C14FFB4BB828DFD187104F38A7F11D5F0698C11E8C1D4F107CACE573FDC4B1
C56FDAE47024D6FD16A2FEABB434CA320300FC4B6C1B6CA08F76C60B7C08A665
99F404DBA8A2A1EB18EF6750E4EC186E31561A3F080BA6562967546715859481
7BA782940F5C5D06626D6F6A412CA7C13820EC7C1DF23E15E5829F698CF617BE
D940523E4EE4ADECEC48C24297DBAD528BA1DCE7AC335A1D15D55415B108EFC8
6D45030D27B3EA63B2B4CD771DBE66AE0218ABB1153D4B7482289D1313CEF184
5C960B1E3C3C953912CC6F4521D1E15636C1545EEE457EFB87B88C9E43CC2F38
6BC4BC96969F4FF28ABB06F4454C01CEF1B6DC538F1E832FC1666D977E5A881B
F72F1B4C7DD4BE167A5535F1163A0706F9A0B26400178DF8A128FB5EBE6A7B81
E478AD183EC06622B591337B9F1872AAEA356F4FC67EE767B34CB5A4D90702D9
39FB846947F4096FB3DCF16EC81455164783BA0B5D723060DAFF411B68307E81
7BEA1D9A47A5AA3D648E618C83C60F060029E6EC4D46B045FA7415BAB2AD0AA5
ED9C729C24136F6AF61E6409C0B5CA760B16225641E268A68CFB8260BBEAFC77
6626EBD97195E77CAB425CFB0096D805D9EE699E41680D095AE9FA10122A7882
2F00F495C9EB2102DF0D3E61833BC0A2E468C5CF7AB430FDB7C0BE3DF2C0D230
1580BAA25D65F599378D873165482A1FBB224AEA89C6BCCFBDBA42AE1C5DCF41
06969F585CD3B737D1388D6359F5468D88FCD2279BDB270F6A858FB7D2ABDEFE
5EE8FB79FA437F8F50237B92C307B73B0DCB808D07A9C3255CB9B3B17039CE5A
288103D05D132863FB522A02CEE3839EF9AF7F07D99732F0B8B384745369FB3E
7901166478F4A16076A1504C5E98D17408494E270BBF4470ED12B4332422679F
759F1D93984D7E506D16950DB6C2682FE1379EFFA6F6C95DD71F6E55BE3EF6AF
E0CB25388EEB436E6527806FC75484133F6E561DEB979D5C1FFEFDAF2A6D964E
03BAE0BD593C2992AD84569C81050F7A793C5263E50C2F50B98C4CC703EAE17A
6AEDAACE312DAFAF5278D125B6EFC5587484F61DAFF46B87B7C9B1EEDECA4859
314A9A9E2248467DE1E54D90DD671660B9040B3E0DD982260822177EFD757266
74A16C83A7FB168016A320D3DF3BD7726F1F4EC90EE5DFE810C96B099FD4368D
906AE4699049EFD37E8EF058D4B97BF71106445AADD4FC6E90615A0066823A36
673B8DE32322BBE861AE251226B4385AB28702831270DBD25D666FBB0AD7B96E
A44E891EA1EAF0F87013AFC982E33D67A28E96E0C9CB99B9E4192536830D9901
931A8CAFA41289633B20BA3BD7AA3414B6DA8D57CCF2FBE39920CC06361F075B
CC40335DB9A0071CFF77F6B7BB47F3100DBDC9C4A58C2B81EC99E8E966AF3390
E3FBCC28BA1D79961C8A1584266454DF772FBA99664D74D4A89FC82FFEDFCFE1
4C9E4A04291E803D142E37E7ACA66AB279378F2F192FFB2B5BBAD18B95F03136
2CB594A3D6D3F8576B90A6C4DAD6D6C8EE07AF682F925F01D0B26CBA347C03BE
F3B0585CF4539FDC66915E22117078CC94D621F31DCB3E021998A5D6EE94CA4B
E214D07517283D56973D8E4367392BF6C1150DEBF459D141AE0941C1C8C5CFBE
E735D796E365A1B0F60BB4CF2801EAFE4889EE5F338D3C4885368281B3C95CCE
251C28A90D318A8A0384439B38D63B94757252062EA44E88509FDD2E75FAAB71
7329622828B2785C1A8B26351BC74237A6BF99216652ACBD4CCF54CFC8AC72A6
46342F1E32D4318E7E27C7B2DAC943B3E72C472FC6F1DDA8684AA922516A672C
E969C047E318B5E3B1270C1BEB1C4071A15BC81B29B268C679B41FC5E381BE33
DD95F0D68118CBB60C521E5CB2BA46A10E50E9238163713290DF6DD8A27D3813
F871C07E725D4518013D9A84CEC96782541E5580E33C2EBCDB18F08EB4655A46
507A8526DB26CE1C7BB734D124EB0386F7AA332FBEDA5E099B626A60DF2180BD
B1BDA7D334766F2D303563131DD15B8D8B1F118B043898DEE8E5E232F73D2721
5F9DBBA8A96857B6E45D2F37549973B1BDEDB9E36DB6CC86424A9AFF79F9916D
73AA714E650AF284926EC0EA6D53C8CF4E76AE27517A104667C6E3FDB1702F1F
AAE2C441E8D6917ABA7C3819B115C4F9BD50E0F185CD78CB5D59BFF852887AE9
BBB960C2304CB9703D6915AE7D72514803C83DED4D043DAC22ACE46B4B466BF0
900855DC9A70014620BB12A2C11615610B54223F785816795E4EE872A3A15D89
9830D6050CC3237813F8EA4499DD65D7A610D79394A8E8B143CD340F4C120A2E
F7E000165E884AE158F0E74196CF251E5F517E576B499942E56EFB61B241E93C
08F3716A1D4CC603654B2178B0D46C5A53B73A1FA96E48936799EFABF4CB0646
C18AF3788D4530C107F6686A960FD11E49CE94ECA86E519F2696457E3F49734F
E8F150A78218DF587BD534F0A2B3010277491868B70897D8348625322FDF4BCB
AA3F01A38780E5BBCF404A560BBC0F9E152C30051B5FDC12E0B1B1EA715D0AF8
CC5BA7B6D20B395B5B06C74BA977CBFA89F1304E69B9F4ED56C6C5CF2D5A613E
D143BC2CEF6117598724E5F99FA3D98540D94827AF3EA1B0A3F01BF86BB79C1B
3767BEC03FBA3D25718E8DE1196C3BD998F3C5BDA4BB16589BF177A238168FD3
27996437B0411D3DA016F0C8E94ADC8F9800B1F19189B05C16B24F42C43E50BE
543E7C115DEEAC3B948C839E2CA9017535EE0EEB0C30DBF301D5869FCFC2AD6A
B0469D806E104CB7F8410E2F4E2E31A0B0D64445DC90572ECB44D71092A3CF47
4BD8CB1FAED1624E1E7D3553CD1D30B936D6024FA740C5E867BF2F70CC6049F4
B0E5BADB6E56F734A5222F52BDC1F79BCF5DB5890544D221BAF930D1A25B44D5
A4E5B0996FDBDE53381FB28546087A7B8E3203B60A8DB8344D63CF0C68AC833B
AF4B22B26EFC197D4A893A5AEFA9A1092509A31DF9148EBB63F37BD90F6B32F3
CB06A6286618AD7E9FF68946C5159ED28FBB5ACFB75A80A16C12C412B67F9998
114BF92E9AC67B16DAC79F6E85AFC8FF97B96926B7F0F75742E24AB6F2965D6A
C9C1B17CA3DEA3D131971EC182E6F85D3E166976A1AAAB6BE716ACAF3616C49C
07BEDA6A2349283F0AF62704F47A90435307E815E95AEC89927DD97CF502E051
A1FBF647973E9A746406002FA2421F56F5EC143C54D627D66FB086BEF01D3C90
52EED904B59BAFEC5FB40AC21333875A82BAFA33F4736B84263821F0AEFFA0BD
88E5894B0F3EFF34EA7DD193182C034354025F51E44FAB651E86379F959CBD9E
449D62E488870E8F093F0B9846F3DFE23F2738882822BC80A55EFFA1771A3C00
BEE8B178FA974394F1090FBDAF04012F5122EEFCC4543D6F704E9D361119B81C
6191E2B9E80CB3ACBA9E78D9E4275F04629194E661D5628DC97AADF2B06422AA
571DC1CB53340A4054B02E8A4E55577B390F878368BF418B72A46EF53CFA991C
CC3500CCC9ECE19D58AA28041AFF25E4F0660D69581FA8F1820C6FC3A77F5F55
23D857D9D5FAC2F930B83D4315BE73C4642CF3A8235FF5E3C4EECDD73B178FB7
B673072485EE6C73AD0A23CFB7F631E0FCE9333EC66C76A3203EE0E0260F44B2
B359A5B089D855C28BC18910AC8B7BCC2BA9124D8F2140F7ED1D90FDF92AC9F2
D074BC3A17530441D39241832D0B7E1602827FC1683D296A94289886EA8C466E
8E71908038535227326F9C0DDCF7C2114C73A29760553D214FA3C5F0785A7FA1
E454EF28C6D432330FEE56133F3C323F865B4A16A39307CCE2C1B99B8FF8D5F1
651E70F35D9809BBDDBEDD82FE0396EBD46C873A68C675D77D8FA4D2219AD846
F9D362E7857445078DCDD901074A7BD31AA844914BF569EA1F9CA8A77676B55A
08CD95366CF57FFAAD3D2D2EE49C9984BD45AF96FB8B029F26D369EA7692DA01
A5084251E6CD57855B253618E64B839938233238D5111403754688AC8D1BD968
CF0EE334272D8CA64430D0436E9328BAD981A424391B17399962E0B01C59A996
C550B44FF1625F8400B9F42C092F22D7B396FF06A0BA806F3E13818F2021C414
E5D488D045EF61CF7DC1A9D5DCB31F5F1605C7124B10713D76B089990BB5719D
E581059F6D0A0338C7ECAE46C7294120BE65B3F7CEC1B38E56DA9A3775EA8397
F455FB2E3E27169FDD22595F0C054E96CC44F2D4A2292C962E535C4110F79E83
E7A53A1FDAE21F1427454DD9BA2054BE9535A5203A1307059D0601794ADCB4B3
957E1B8AF74DDAB54BB400555719F21D0F31E60399A326E0A57B6958336ABC26
B13218F2B69738A1829242A8A41522B5C30D6D9FD9F900252DE788A0B966B6BC
34211897D0784EFA1A9BD09A3C1506817935FDB023AE58DA02D3957CB43F1FF3
7D834FADEF7E15A07EEA79290016F6CE9458E941270E146BAAFA216FFCB225C4
BFD340BCABB8EE5D872FFD6997F464C5806D183FB8A4EBA26BD278D9E2EBA435
AE7CA499450162B7373CC89DE6B9AFFA3E9950914CB0781D5442DC61E235A209
AA79D680DF0CD9B5E64328E01FBA1ADDE281345AD36952327C1494702E5AAFB6
8D3E37CA58CE08B25D3633AF0AA5FC77EC0C2D3AAD49BD8B72EF182DE1EE0577
1E2072174AF377B6372C9F79B5B7C2E53DF5C99AD7B5EC5F200D5CA5B16395EC
9EE1C2E86F1B92479CBBF6FF524DB62F32588C5AA6C3B18807A874392E443C98
67046F4B020955E1D3C7DCF52D62F45A52CE74702030A3B05F9AF9C343DD4F41
9402C92F8778A833F72AF07B8A8CAB3C69F5FBF674B9C0686029D0797D1C23EE
0302D336DFE62059B5F7BFD55E90A814E9FC21A23EB7D2ED80A09CF67F86C9F5
26B70A66C2FA422F917B629295DA2E8250E3B2506F87ADBF1AD9AA046C0C1BDF
6983835054F97A0CF3E28AF68BD0E6264F95A483E982471D3ACA117ACCB4BEFD
98AC5ADFC929071E6C26B30F8189FCF01790F133A45B7E289BAA2064FB56DF34
2BF385C9F75D8093AA982E5AA2C99D424B8A315757D08E8BD7C84CD218B97325
281E325CA21325A524D676161BE829AF12C1003A59CE0849916475ABD0384146
20F4F4F06DA955D68091736C4AE1E72DBEF370AB5EF7176394178A05C75F5AB8
7BD9019549B869C6E9E19B9B78AD5EB02FCD22A689ABAEED02AF670E8E9E88F3
8A474AB0644B9AB89712A3A23C5628058002BF1D547E407D509B63F8B87D5950
F1A9D983FC31EB7B314A932B8E01F3DC11FCDD92206E06AF5BC1FA9B60704540
6443A8A0EDDED1270163FD81500FF21D2AB9236678C5048808436AA75317061A
10F527F9303719205AB91D89925FE50200B782696CE9B65AF0C90DC41A785D7F
FCA021600986AF27D9F8D278DA6D3CFD02411BC347FD8360315511AEF33FC9BE
3505052079DF0AADFE3568FBF9F0EF193B569142C719A0A3666067FC2C2A5902
7CFB85550E86D719A6B9807D4BF5C64CDA779C9CC439A7F54265B43E1761649D
66AD95D7436CF2885F95424D5F6D0971419F3A4C52E4886E9CC3C7B522A631DE
BA9D336AE6F0C24320208BCF13FAE1C56F259D3C203A4E799745ED824B890668
15B77B90C8FADD97AA8540D3BC9C5A443ADC16C44529B66744CB59280BACB0E7
692DCE2FA4E04AACC05C758C9B6E1F898C53E6F57EE470B0B43E8577F9A69665
3F49905BE8451E8FB610D063A444EC1C39C294F3B8C14AC57E7D2CACA48ECD4C
34A0C094CBAE15F99D9D47B73FAA57AC95703F3F8C3970683BB876754FC1BBD1
8243DB527B50971BDC3AB1DCEA49CBC1DAA7013B0735B5847BC336923DD82C5D
D7F1644C9AD3C358F9E3D6AA6402D4D3A5BDB294B542F4DC27B74538B8F2EC26
909DF204CFDC53D3E7603E68CE0D0D7983BE7CBC3ECCBDEED9E4E5B5CB6E50C0
579F75A596BE5F0366992CD66CE1D6DE3360993173004DBE3FB74C515BE7677C
C61C72FD1DA862A81CF7B371BA0DA292ABFE489D415D5838585B9DACD29AE418
40F84B5E675FA2E116462566D47097645AD578FC8E30ABD63332A47F90E634C6
7B3C3DD16DA8B48E852DDBFE4E95436DADEAC8D1A8A6E64DDA2F887B3D7AECD6
F376CE2BEE2D72F4EE974E2693834EC262B9CB759D7756A5249DA54C8FC4914C
F8D4636E98874659ABEC1B00E54B076A516457AFAC58ED8C2D9CEEF477E41343
75207BC789EEC011E35A694B67DFDE37C027E4544DC5177DD8FD11CE4F79997C
A67C3809373EF9446A11F2B26512C944B09CB5DD67F1496E72A200AAE420C821
14D4EBD73E952DE61AE492B722A9604D68B8F97AB0B4F9427D610EFAE4F6C3FF
1106CA20BAAE1D8930E268E2890E067E2A3D0BE8B26982A01B5DFBA212A72B0E
9BBDDAB7467664D798397260159A39682043C43C8803E0ECCFE9EEF29B633B71
AE059E64A97906F78C726B5E78815BA04AA151BCE770AE9FB8C2684C939894B5
DB8CD78C72246CD7A21934B2413093487553023530ADB8C03DE860467D7CC0AE
F5D0692501411728C5E7BBC4414CA3CF8216860857FFBBD2D851A74C0BA8B82C
B374351F554AC356E388C4BC7A814160E77654A9725E22C3D14B3152C2F61232
79A91117DF0187AADF89FE53F447D44E968A8BE13EC93B454CDB839F6C3BA33B
6C1E47207AEC42C7985F1570E1E486C97CD91F3C048278B09BFF9FEF744CA522
C68DEF9216B2DD40927A252A3733A60F073F1922DEE3EFBDDA7BD4AB7D76E087
22DCE6A5762E15FFC83F37E2E23FE5B884C6E7C49F438CF8CD99770817D056C9
DF4F957F16B3DA164DC8CB5F7548D842FEF9E538096B2097FA9F6684B505A9E7
7FF88F50E4161F59AB1FB8302E456D3D70DFD526A8BA7887152BA07BF75C0C58
A070098E6601A7183777E2547C5DBE475975517DBD1EB62329ABBE670400979D
5BAE0CDF30BC8BAED07A9A645368BE1BDC7F3DAAF03A01D09087E914EA706700
4A073B746596693CE2BD753270794CC60FB539525E91EE25FF498568B85B8CCD
6B0FF6176C13E0ACA25836CCC457D9BCEA8CA779C452AD951BFED37140B6A8F5
4EF415A29D1D00F457241D53E903172A54455AC8A862AE0C0E6BC65612FC675A
78AD76A8B152BD0E1732C80893C555FBBA53D06BCF2006C92A523E3C6C897F68
38F4503DDD5CA3D8F177BFA56118F6C137AA1E47A08C5A40B1BCFD45DC369B88
346CDC76FEDCCE927FF8576302A3E4DA59FFE68BFFB5C1435F70FDA31B8FAA62
2F6A694E879F4ACEC483500B5442D735E6BE0600CDE4D9EF310821910CB511AB
8275357E130BE9B369F4B809BB5283C6AFFF1AC78657B4E36759013FD167E6C9
BB4FEC3D76379569568D651807AC0B6F679A80DE7018D0CD6C024980B881AF7B
FA97082369335AAAEFF491FC966069E411EB1F98430D97D9E71C9057E71755CC
7B4987AD69F1530E119DC8E47124D70A6313E603A29755C4F5182BBC34A5FB61
C9D8DEA6B04196696BAF33670F541B937174DA0E659C6CB20C69B1A580C463C3
D6EC325071578ED9B054D46D1E1411E824E34693189ECB7229D7A3362D3C1D59
A9189571842EA9AE01158E76EE8D6C20D4845E797612DACB697FD4EFDE60AD15
596D6A31686F280FC0559750B2FC254234701A7785DA1664FB6B543C47E4B6E0
86A53257EBE7AA5647696A153E382C9A391ED5609D211813B5A23F83400DA130
38A98F45AE4A9FE558D11C9AE9468A10FD9FB7C52FAE52D6EFDEAD2BF31877D3
86E6A2303EA030E883C76B2F8A4777AC9E7F5814C66332C02D1487EC6685752F
AB495314294DAD52F9A4D77BF67ED6D4D69E34C707DFB4FE1367E89709CA7AAA
0D90C821E68171315684CB1963610C6972E140A835AD86F0712B14DFD01AA4DA
AB6940F81C7A5D6E5DDABE8F4472B756F7023AF620D03F1A0510338DDB148558
FFA1213B31A7CD1EF5DB0139A1B66B912DE539099D2B665C94DD725DA5D7505A
2EE352ABC3FAB6668C08A45AC2211D408357DFB95C2C329DB44DA1713190D701
1160793FB7880DC69342804368E12CED705A939E16DE991593C13865F2ED5C47
49D55C7DCA233EEB0B2A4BAC180F178AC847C25738BF7EB9331A54805F565483
434A5D301691292D1690153933679EC92911F21170CD438562D029D5E7B78E32
3DE0082285CF3AD4C43F81F0B87A188F33A5225E25343AEAAE1591C95B90032F
A7C22A40B8EE6604A98D1A11A5EA31FAED272A8417E9531FF7291ECD5C449EC1
EF09E942E6F2F33088B50A4D88EEA3BFFF393817DA20561B653142003E8A7EE5
36799156449FB601BDB092701560F4905AB0D781F10873619010088B988E04C8
00F5E4ACB549A93BE41F2E7AC6F7866EB3B1CE55B16C53CF00F99CCEA7A6C585
E79F2F4AE8048D4ED70D36349BFA80D107C8684991E5D3E9E607A6E560B5C5E6
09C0B0978564D1590689976FA6C4E269A737A1CFD8097CBA8CD1C6D9FDACE3F0
65450D9FB054BA4B435A2949159C47B556C6AD5E09A52F56E92AC5B33D12E120
EA2F017A8E98356B07405769FF4139415B707E09D67F83FECAB2EF7D5410E11A
96713FB7B3E513DF8033AE572E3A1482AA7C3CA4B777FB4E8EAFEEF3C4716D18
C70867E50C6EC0F8F0626DD0B9219013B2E8512F27FD0195FD17DD3896459255
9E635550CBF65755D16C30667C59425708E01B0BF87A7351F26E52A50E49B4B4
5E7C4D499027880ACE969776F5C1DC888AAAC00523BC1EC132D272DE3070D858
BC855CF74FAD8AEAC0AF21C9CC8D2701D5FA4B20C557F38032986F13D6B55552
6BAF0D32BEA49ABAC2DAB26EF285AAF99FDCC81C25C6563A33FC6B1352A1248B
87B85B3647BA650FFFF2B3758D9D17ED0180440381AD04ADFCE3058C4605EB7D
A0C0BD6E27C01B11896DCB7533A12F06A6D8546C1358768D48F3BD89EAA1E706
EA9AD72D5F23EC91DDC5C9B161FBDAD9B4747FC2A034FC7F4499A7974F6C7003
5DB01D7AE76CDE2BA2BD4256B7E56091E34023C3C85DA6FE79FFAD8BE6BAD4CC
C9529E9F4C4F60B43D56DE490C99F7B151AB78F3C657A9B655E6DA7FB8EF7993
E4FC80D01B7993F9A872BA64B6C81C5A1C6335E76588726B91464EFDFE099263
0AC3E74C6FEBC70E8307DEB2BE569EE81BCAE5346A963DA1E5D8CD203F49EA5F
A0A523A4627ABBC6C819FAB25D03C3D38CBB38860E9F61245ECB183EE064B747
87232A3D56414E22842EC870549D2CA1714EE692D0F039BF67183044D7F73CCC
0C5CE99C7E8A388A082EA64CBDA8EE55B17BBDB8FB6A770F846D378DB18B9B53
B563596BC09596C72ADA5E89B3774A6B4881DCE09E709D2AF616B16A9A4EC28B
2E2C538B71B9C28B51D68A1D9505D12BDC01529C6D8CC905568ECB9BC2B09077
D49A5D21A3231E97A7625C5404B6A44943077AB523E6D457BE61299BE42BF57A
AFEA21F360ED92710C3692B5A362EA3179E0D4841ACC0B03C402BC6D2E4544A6
5F1A16C8133EE0A36A829573DA3A1FB402EE3D0AEF81C560A2DA44AAFDDC8DAE
AE5290055CDB513097139F4E61C3ED89F0DD830AAAD52353EF8E5208251F3844
118020229F1653BAEB84063F51FBF887AFE46597581DF038012C21B0004044F0
2765436B959EB1924BD4198F0D3E8FC24FBDB2928D2B5306611F9F333AE15C8F
072B616BA90AB95628C84E870E0C659E11A62338FA3071F45D3F689B954CCD31
A75DCE70DBF15D863DE9F79E824924A69A1EF2A220F29D668B863B1D9AE7D265
06F6E5045043F8AF49CFE3F2270B4AFDC5246353D69CFB24F14D68464458BCD5
5F8411A58D78A35BCF12C784AE356C195653A3082917E19158B3FC75BDB098EA
055348AFC99B127F664C9942D9FEE89ECB04EA27BEF163F0F9200BA2EE7DA6E1
A0CC4ECFAFEC36A4671926F5CDBED161A97C525F7EA3DCB71D11FF698A9BAC34
FE8AF72B38B2F98EFB74CFE22E9E50D93CAF8D63D282C7D79E0503F9D9204875
003343837C3C9E175BEDFD3B04A490233F6978030B7F635EB2A9B6C04A6687C5
2C71EBD976F4F96996456BEAF035C96A83170059CD21BF01B5C0575379957D02
FFC3E64368477FD8D3F793EBE41933902E52363B2476704B2855298A0EB76365
CCFF915F4E5DE8E10949F530E851627FE06A466FB22E0E3A2AA4928B14B5E1DC
5156AEC50557A06B77970804EE9D14661E1BCC86F2090E595B7BD28BE43693F7
4B2B2D45D427E9D0F184598F91035DFA28033BD9C333C710AAAB48ADC307063D
855F1AABA86389234C0A34EC69AD3525147E508CBCB56BCA8728CF3E29F85AAE
123843E0204CD2A62B095934F997B9CDDFB9ACB633C6FFB36B7B62AA3988461C
D649F43386BF9F3D4441CCC39D3246A945CC7B6CEFBC73502CA0C19D68D63B30
3B42E28E8A430846E137E6CA0BEE19C7995C7EF78BAA419BB4D83DE279E6AB04
B574C67E5D4C746D6496AA4952CF8DB29BC943FBDD0BC3ACC408D60B99623517
343800F52C54214D559913700B1833FFDAC6F07746505EC3BA86495A2249310C
C6D579C1694D075BF4F0D103DBFE160C54BFFDA0C70E1BDFF427283F22061214
7A5252C873527595BCBE0AAE2A2457811D36D9D112763D4A691E6248AA054A47
0AB5BF833BC652E5615E1EFC63103E2A76CFFBC91D41B969F9738E66A080800D
30CFED73DC7405605575A3A359C582C267A32066A5A9818F7EFEAF40A63B7206
2E85C744094E10430747B852FF519C7E24932731218F2C952DB3F2EE2B86F9A9
24D8915B60ED7FA9A52C91E00249434215F39C8DB9FA45ED243AFBE90449FB01
A44E8D137C44422281AAB2C837FC0C001B38216B52FFE655C874B89440D5CF62
73B986B50C282AD8AB1719FE8E1D71D6C1BB1EF02A9C1D9E6ABC10B62D646CFE
DAA09CC280D73647F3448DF5F6181801DC14E53919B1399B27FC610B320B3788
767B6658EBC7702426C83714D9351ADACEC5E6D4B83723FC0537C18AF9643B4A
585F84549A8013093DAA95A080DB2D9F0C0B2C1D464D9803F66A3CB2F4046DA4
FE140A414756618DA607AF8FF8BA22E5AD41669DEEDB25F5E7BFECF1766FF62B
D33E9E11EF3BEA2D8E20F748709A7B832236F435C44F664A2CD46924CEAAE7F2
2E6D000CB48604B7B2193C90F6AF10ABE646EE362718943A07310A192B9C3EE6
5D66EDD99F5FCD0C46B2DFEEA61983AD8713091D65D3F9A202A5C840BC597534
0A0685BAF862885C3FB76095E704BF1F30A90A3228A7E4261CD300B01A991225
7017B14098FAE73C17F497E0625A6562213D56A25E1E360B457E7F47B3335C2D
D9D790778B59F015B040FE785FA57541B4B7CEC5F562B63DE4C19668037BA566
1166F38989F4FB5835C966FC21A0C75D6A3BA0E2FDB972B62C720D32DDC73318
51A2676639BFBB1C695865AF63CD93D5C93B202CD2AFB6C7B56C9E5544234708
C82041F646F54F9FF838F1E31CE7AFDBA8DCC96B18018412B3A24B4AF756EC50
B93CC0CA4A0D69097BA741DB811ED85BF2B15F045B42E58EC8BAC2D3D309DB23
B6E2BE359DAA7AB7D8A8F3EB174193FA958E4346721F51480AA860D58BFCF0C0
516573493EA48CC84A929DD4831B783624C08744F15E39DE50AA65C4E9EEFA9B
B176EBF07FB5BA6C7412E47BAC48C736F731A377CED4B4CE135E6457045F1445
FFC009B3E09E7FE81ED44FD4F3D554C4015ACF614EACE2BFF73531B3DE5E432E
325D60779CF733D89643944C426A8D8DC21FA4A472CC0D2D4D0661629575C84E
F0707903E891AF03579ACBF51EB6816C7CD8771A0A2E76C059656F66BD605331
F1C5D2008C84C2CE5A909C92815C1830D7E9F90DECCDD7AFE613B08278C88BC0
160233D328F9D33CCEAC6E0ECDDE668F3644C02BE9A75514262AB488F3347B98
A45D617E9460688D5C49E74D0EE6236232ADFDB745B0943BB7B24CEF93DAE098
4B4356975B430A2F41BB88CDB7CF102D68FFDCF4D085A46EF8AC7492D530675F
CF3508CA784AE77C037E30A5642C13A6ADBF5A59F3FE705C1CE3323F2DD4E943
ADF2F876D29E358C521FDD8063257990F2322A8E66479600DB6D1BD138103346
B9EA65A09204F05C43E3137360AD0C4E5F49498F518A4A9FFFF19A16677BF191
C90C29AAC6A9FDDE4CF019FB21E7EDD69E69916DC9FF11869F041F06FE238803
BAF353D4948676322E49F60394A2A2F9F74E1A1FFFDC53477EA690A3D68A9C29
0E205E229DB0637F1050C447DAE63EABC0794CA17BECAE94F4A02150FEB6326D
DC06ABCE4952E80367C11E91BED20E41EC27394B61FE3097FD90BBB124986984
885734DE6A025ED6B0D220572E927239B2515ADCC38258DE9F93E79D821AA112
7AED066E51A0EF6CC4C27E825D9E045A026794E8269E267B14E0868CB15245E4
A25A77425CD891216FB2C4A8E8A5E21DA75081DF5801E8E644AFA20FF0DCC242
AE80254CDB5B8D138AFC6960B20A69395CE5384B65861E55832360276D8A3AEA
DE6F084DBD35FC34A23CB3DFA2F4F620FAD9D191547A7667D0C9F8F04C882D28
810A03D0B3AC2969723DD0487596F28C3A5D2BC8E3FEE75F9AEC1D075C551AB5
99C3EA4AF5AFE550C8CD6EAEBEE54CBBF7057F71165FBF583448AEBAAFDFCA06
9AD7E91CC7529A718DA1340B177802A27B2A73BF006957BC08B6F5F8A7E46CB4
7FEC9F8FA11EBAF3F52AC67499B2A3A2F42239EB39BCB7D7575325AB9F052196
8494F1FCC8EDD9A540D2586BB1C08F17DFA0FF3D0AF1B424F1A064F54747316F
16C1E656618ACD18F152C5AFF56483C31AC6C909D51683F8638CF88F8C6FD1CA
764F591B5932500D287A2E2327080F895273A9561A7E7307EB5777F9AFCB1A43
90B0272E8AC605F957C663ECB5FE04A4EEF32BC62DC0B23683C6E9D8F39E3E68
7A95E38A4E1F82C70651B8DBD496C1CB31805B339F358B8B13E52C9309AAFACB
F70EDD5F6FA03128978F921358257FF1BBA8DA7AD8C95974C46E799D80B3C39F
7FFAC2CE4F87B9C443326528AC6378838B91ED73BF192381B9D4037C9D1F702C
0A671BB3DD8E88A1A85C39314E4D32D98B43B0E1E0604DE9774DCAB8409EDB95
0E0F215BB6220B45DF86B8CCB5EB9D2791E998382307A7A2A0EB3408AC92D07F
24145E2446C5404436E689B1A66377E171865DBB9AF0BE21BEFC0A168956C241
E304BA52AC8C686DAED30EF270FE8BE1173F4D852F292BF79266DE00BAB74A14
DBD67299AE5B401A488D3648A980F72FA8A7F6BD6567D4631E0BB2F5810867E1
2466C671B9A5AC6F26AE08572226C4AD3D0E0DA42E57ED63EE1A30A6C9C74CE3
A658ED75B2BB14F46772D88BEB349EF7ACF5B1533DDD22F471BB0FA179E7C855
C02C07163E222F7E8DD047ABEF4708DCF2BDAC86DFAF796D6A3FE0B6D9EFAA84
82102329B2DEB5BBFEF5160F9C1093BDE3A236700139BD2029D01AE87AF52BD1
D3CF8B84FC4AF8D5C494634E7AA26803F614C7F7D2428C977E1CF126C3EAF1FB
F20692A343EA48CE9F6579E539CC23665534C98D1F0D484E412941F6E788BCB1
6E4F3C1516F16243B284979BAD9CAA8800B6FB0EC0FF7DB38E76F2D882BFBF12
1172D2871792DEFFBEB94447CFA93AD501A5A2D664DFBC260AC468B8BF704977
409DF8AE319177141B8327081E902A7F25B8C1C6CE9D2F2F228A2F628BFE51EC
0491297966B3C3865A4A6447311C442A24737D2929A1515A6107F72781E64711
044D5B555FBEB99EB81DC622D911BB63692F8FF76B72E2CF7B52865DA0A6F68A
BE250E23AD688802AE94F49E7B6ED6C85FF05CFC3CEA27C95B2F8FD34476283A
38CB4D55CCC0A94A0C43F5BB9FA2C365C2A5A6B06BBA2CF2B95F4D07ECFE8F16
551D0725192DB857F235F154B5B32D29F987EE665C3D2F0E7FBAF38388183C41
E1E54DBA98FC4FAB7DECDBC8B9E31FF32EDED98AF10B197361A938CE348A1A98
23803C2F2C451FEEAE793E7A28773303177691E2E3E9854321F8152F81B7B97A
8A4B361C8942AF05B355B05C3C1FDFF7544DAE418E958BC1357164CDA3F6DABA
32836433BB214C77C23C99894021521A00317B5039E57E204439E89D61B7B9A2
D7433614429E8737CAA9A6BC83DAB4D4E16CE077DC21126D55F11249DC2C1639
936D27C727F66C4A7F612B24B42B5202F37C8DEF2227DE85B7D1536E6965D208
7B58E35B2B43C42362111519EC07707515C98EBD5E44F0D2BEAC5E346A781E52
7F01D6876FBC67F2CC3D00357E732C328025041CF9F1516D909459B2C36AEDC7
EC3988A969EFD567ECAECE64586078A3281842A91881E84671EA30A181DB9562
E8DFCC5B6A533C625FF405C659C3FCB0B87945E260C68112F36A725757269A9D
B97A8BF50C856019AD6B66B7EF67D7F07880AE2AEEF909B460838264CC1D961E
9462A3F77E58CDDA6229319203985536173E4C3231291BEF6A0C7DA5931533CD
EDA547B6BF93EDC27A78E1EDB0EF5BD7C70ACD652BF3FFDD01A1D1D391ED7E36
5A0EB14F31B84C63AA5A85D0C7D24BE77A7262A4FFD3D2F936499DD4B50DC2A4
CAD064E43E50BFE1526FE44955A227F2524D09342B6C65665E19DC567E058355
BE2001D0443CA4E2847C8F25C8BC3B02619DC0531171132A67791D2C5C32CCFA
0EE13CBCE225E2858FEC44F33DF387D02CC1571ACE175999674A74F39732A9E0
79A1BC888F29194C0363F6D32C4EF5676C02EF2AC1A635AAB1763FF9DF4F06F0
7B2B8A6BB579F69E34040E2A36F7B3156E99FB924CCB730C86EB989BDC5CC10C
0325370C963730D0654156E16DCBC8CE8194FDC0F416ED338BF93440F672DE6B
990037B0E4CAE4CBEF27552C5A7DC5891D24C3E04569D53320D904184498B0AB
02FEAC8D0FA7DCC875A24A2101180EE972303A1793AFA802CC0BC13B3742F435
9B827071B5C4022C9CE7537AE8EADD6C9ECE7805E66DD1BF72C643E66A9F05AF
105E67A99C8806554789017DA747FF28E4AC3E5A72C1B9DD253C1DA6DF9B92AD
27B818E4C5E06E7D6DAAB1451ABD23A4C0A33C3AF2DE4ACD5FB62C36EDBF2BBA
5DDBB5001313C047B14C2E831B292C5551A69E0F668979A98291242C6520C15A
4F33F48778D2C9B6D90FFB8BE2F427D39AE05862DC14689441407EB5C25CA144
694728C499FA8E62090FF51330C7ABC0DD65770577DFE274896F79EDFEEECD99
CCA7DE4910AEF10A9F6860E9FB3B7619CDA3904C6B417D2E2F3A82C0F7EA6719
99BE58B141603A9D10ECEFA0E4197D8352D6FE295DA3061DA9916616DB1A6DA8
39F1BC13B74A17E762BA8353049B9264514461593A504F06976B4A5450F68818
BFCC84491D3F0DA50EC8C8545149501CD24F79EF1F64B988CCC3A143A2FF4EE7
0EDB20A1D11AD287CEC88CFA32B7FEDE04BEA705F075FC66911ADB331E1CADD9
491791F8194E2D09830E65222E52528A4E261CE16E2041C8B22C9EFD891CF5AE
071B05DFB699EA9226266C79D11954727AD1E7E0C16B060B25D89CD4CCB34B84
61BBEFCB0BBB2450791C9A3958D6443C5A01CFF128E0B4F2D3FF3FDE4F47FE03
7DE0765AACFDABE96D4A4678C520C1C3A821D935A1C7477389CED83F69BDB6CD
CB24BF941421A2895FC315F957D3325BE12629AA80ABDFB800962F6E26E929C4
20B405987D13D0884DCFDB8A5EBB7728A930DC3F3BB4B4EFDCBFA6D5820569D5
7D8D6A8310B77A6D1CD4BBC50C3A51096BA90272B04CB3A3EB7472239B7DA8B9
139C64374D83F017C102F920372A48B4E683F643D4BDB8520B2A37E563073D78
F220CCEDCA6C03790B90A4DC0AE11295B69C515B96484C5153B125EF6F239B78
FC0FFC20F8B9D0CA5E2604DA403F5E350CDFA96552BAA3A8FCFA3654CB505600
6223EB3B2B762096B99E3A5F85ED369D4157289232217215554BBC27302F966C
E85EAD4C418D357FFC62DE34E1DBB8ECA24DA9C165DCF2AC40C5143AF9642BA1
125E123A33AC78444BA1948E26C3DC73A00C13636A82BFFFCC18D70E5A7E4CC8
01B1AA73324B9B22AFAB58DC262D621A4DE20D25346E015538D74972223F007D
DE6CCE850AEA43796989B34C82B5F36B91975D9C3F0609F9662931146D99D80E
14D8E02C1DB0FB4CB4B57489F2952905F992ADDD44ECD49C8A47CBFC614F9E68
92F46F7959CEE634E080630C54636A44FE7370CF58FDC2DDF73D430D82CDE290
1B86985F5F0E6EFB7D3559FD463F146EC2D2B7D72D248E7647F824BD54178690
9881610F55CFF47110176113F6DF585D19D9A98355D82C530EF7246507627804
8C9BAEB94E038D6E4DCD96F7FECAC10B0D6206D0A36B3589C72251900927A820
9D503934A920C7CC86044748455A142593C506597324B3BB714C9789DCD73BC1
DFE84F7C144657A416EEB890C9EE705A1971707512244F750C2476CD8AC19485
7675BB206DC2AE16C3CAF102C2CE14CF940CF6157F16045FE3702A3330C75F19
B303E8439C5A602C3268328419A5A14C20CA20FC9E6F7066CC4B25F456CDA626
0CFADB5D971B69C4D9F40B58036AB46046E5D465B4C97BDA18841676AC5BB6CD
7CE2D60C127D3D61238ACC3A750E94CFD50D2EA567CB383774EB6E1A7D254FBE
B508C202811C01C2680367A6E6298C071D211B0A245B8C32F4E03BBFAA314B13
6F2E2F9A18E37BCAA2AF1A4805D299B18A5FC61500D026F15C25ADFF30B338DF
9245FD6E8CE6E2457BF333C7B0F74F32D282C4ADA0BBA682CA77B9DD4E026338
D22D53BA6C494F6A23341C12936671FC3443D6FF0B6789941173BE2E6E004622
25C13FE06147AE371CD3171788112AFA954F0AAD1B3676805B573CD82430F310
CA12CDD54BCA71F37EBFA19BCE6B0FA3CBD40BD26A237074DEAFBE0DFA3C4369
17293174F828EED49DDCA1652E4DD48DFDCEF9406C030BE37391E241097130E3
6B73A2993EAE01B6DEF0938E12E0753BF5F331F45540C59F27B0B3A1C3DE7909
442384673D7032D1D2F915D672840871C6C4DC4226C875274A23A9BE310F7885
6B0355FA90A0F3310415A6DEF22C7FCCB7A63942E9613C3D87324927893DBCAA
6E4C846872E7D826DDC4903BFA575539B11B4DF84AF9BB3E0DF6F8657B077A88
210B7A95373D3E1D9E95C0F82248FC66A34E420A691FD82FB011BB8AF23CFE1B
BD85BC306381429DF5974044EA14877445B40C5D8A069F0FB6BD09391C3E7A32
76CA7889B972BCD333C8D06A8310E59A96B0CF24AE5ABEC6E12E8BE2DC7E964B
95197B6A39A5C79F5413B361062C3D35AFDC215517D9ACA0526AAABD1FA74F6D
1AB02E0217E1C5E78D547044175B724291CCF054B03DBB97B0D7C8DD23C5708D
FBA21E42976BA49BB35C88DD2802FA6F5E8290AC81D4BE9AC3AAEA9253089983
7DDDCF4A80E4319B93EAC389315EF0973AB6DD8330DC9F29F67C8B18453EE0F0
4677388A982BDA2EBE2E5B8ACE9E6E46A904B6D05739ED61CA0D9C05E8D0741E
A4D825A8E3AA8B734C56EBD87584A087C09088E8239DF3C24D9AAE528B28B0A9
45BACF0E22196925754302C5210D43CBF60F47DB835238AE954E9ED9FC86C088
4A817996CF5959C566B4701986715555BD013C4BF5742F525F41A8801BA743D6
78927FB437FDC868A89215CAFCE224190A41C2A50FE6457B79817BF4746EFE33
102679EA8357DCB1E332E9A02A4A4C50A942F8DCA288FF063CE7BD2761F5D233
60B24B412D5D905F953EA5B4BA72154CA086EDB717491A9D81F7D9D21A29997F
1B7445E8EFA60E9A298CEE0C54FAB5E52D45CBA44522DC7DAAC5F4FE09D158A3
6F008648D307D4CF35657ED7B69F8F5AEF13E1D85F4DDDF9D0BB269FBF1B9C8F
205AB93477F07F40885138B76C8160BF53D5A044D665E82F027C88A608B2937B
AB2210CE556CFAAAF11A5DEAEE8A6F78DCD0F351ECD83F987949309DBD14FD09
C3136897D947B45319CDCBB16D77203EA23C61083590DA8F234B7920A2073D58
9D0E92543986AE47188026B040422E5B76FB226DD88CD8A64C4BEF1921332ACF
3AC1B986E8D4DB8D874BD9AFD2D53AF1E1ACD8A7053714DC3936902D36D70C1B
286BC4C0FEE3F669C2E1A5CF95263A669E8175A2E0DC51BA09CC417E713A05F4
2D1AC4576BC233B151126700D7DB59EB1A58AA5D864C1B6520B5B819882029B5
18444CAA6A6E71D24B6EC446C34057900E4140205192EDF8F6BDA6D7C73F8870
6DBCA60C183A3EC460E32518EC8956F5E24B4316B1CE39AC3489CA33EACB60C7
85E6373D992740C1350CED255F7B7109497E21FC4E45E2AD45F44481C2397EE7
7010E47C97CEDBF5740375D010E624FB0D95A0E8E2EF5EFCE34DB39D8690F6A4
5C3E1C28CE5CFA25D851A716AE550C99A97BBED9975F8BB89F0D4305F28F8D24
F4FABE72087C715935701ACAD8C98175A05C17BF0AFF6BC17AB7A181E74472C3
EE248C3D1804A39FB79B46758C782DC97D3B0A3674C576FE29BC885F15442EAB
56B45DB2AC2D731B87006790874736B2E33E83E4DF776D52761E3BA81939D765
25F4CBBDB65F063B3DA04D56ECE05580E164C5C54EF24323FC176F378DC83F53
79819327AA7931C8F894F4835DACE71EE41D7F30EC8E4EF01D3049E8EDDFB0F8
5ED2884356C6CFFF560B4DB47BD9EF6BA2FC360B8A47900BAB04A4D5B6BE1C57
FF94FE48A2C775E6D9ED8E54FBDF7D06F05110AD3179278FF2448F518C5BE554
87CF3873C07C508D60563789DFF722169903EB432F31CF2853ACFFF3929D3A04
8DB1C7263FA8D0709C449BAD106C61B7304B0F8E5AED432F8BC7A96A6E3ED5FA
33EDE7190AE711D73190D133AFEE30A98240A5DBBAD15D90DB50D20482BEC063
64C96BE2C9DA891473CAAF31CEEE8448C6E7303D4A39829976A10F2828343032
3F2ADBB2AEEC58D271B26F6E4129A8EC0738C2540D4BC45FB65323A2FC52E130
BEC97031287C5D9D0162346A83FD7109320DF8240BB42491C503C9B21A1F9E3B
F1ADC15B7C18EC5BFF5DCCFE5DA1A7A94154E235CBF72F4302E393362185F841
695DB4023AC137F0D82ED3837D31651F76363A1187DD405A973724BDA5ADCF54
D70ABA640E81D3C9EC20BE6E975E203FDF6259D1456A7128744C3543040547D0
0046617A1C1EB8927498AB24DD95823CB6BA3DDFB5317610A9210FFD57F0C529
C206F9FF282241C9405CCD5A107FBF63C3D5B778F3F87A9129CE8BF384B52638
F34738062F12E028FD64DD7F1C300305D14DA7B521262B0E5B61C7C268C6BB20
D3A2881CE3DD0E4BCBDFB5C2C177BF5C615D3D521698C83413149E17A62FF55C
BEBB669E29278913E48B4BDFE13DE5353230F8671E11FCA955FA2FFA4040ADCD
76E0CA1FCBEF057DEFE3E9264E642AFC95742801012C64F28D3D386D166B4BE8
CD25DE6CDF28E6F8BA6256168C36EFC6C1BA7ECF14BFF9D395D6AF74979598C9
92FCA1DA0D673000175C9F0D1ABE91371C8690ED62F83F9E59B92DD4D69EE8D6
999B1C9AE131211155CEC8133E858C1BDAE1C2F5EC67D5419FDF6A24E39340BC
7D455BE4940283B75406880F5540D6C26C8FBFB049049ED675E6EBA8B0CC1ACF
6334F87A9C43A81B49D03732D3C02792CB44A20BCC2AC976E05D890638E38CB4
AA18B7C306EAB6100EB2F21884720BB6699C84CB2E6BF96FF27B87478A9CDDA3
F38F6DE382429FBC59A3B1962E36DD98185ABF97B5F4AA9EAEC03A8DCA35C4DA
E388BA6ECE8B012214FF0B7146FB8483FBBFF564EF15A31BB4FBE2329C2FA937
E3D0FB1C25C9F124CB42CACBD66411235AE79DDC1602A2892B8FDEED4329B65E
1B20BF2502FFAAC954816A7904F2D4EAB5D09F8A49A634B80654EC4238A9398D
E677E7C478455481EC49C42EDFE843D0B96C66AC99394526078EE7A73C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.0: CMTI10 003.002
%%Title: CMTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI10 known{/CMTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000828 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI10 def
/FontBBox {-35 -250 1124 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI10.) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 58 /colon put
dup 65 /A put
dup 69 /E put
dup 72 /H put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 82 /R put
dup 84 /T put
dup 85 /U put
dup 90 /Z put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5FD29DA32D34C95E
2AB2ADB3F60EEB0600C8ADE15A2380DE10AC5AAD585FBD13097B1A7E8E210D4A
EE96785449E07F0C8EBC2EC5EFBFD0897DFDC15E5BFAC9584D8DE95C5AB288CD
8AD8B9BEF0B8E5F887B3B0B331542FC8184DCCB753DB6ACEEF98B85756B988DF
CAF1AE0DBE7D37D5F44A2E760AAE3A5197C27B15E32275A64946C3E4D0476FD2
7FDE148C788DD2106F7C825E270588AC05B57E625AB17BDD02306F9E5FC851DC
32A5A6EDC43C770A71419B2C0C8074EF3F222C8A2097CD81A91F333A521B3A09
482A4FE1CB231CE344AD126AA284C3280AAC3AD162CF0EE241BFB4C8F20502FF
118507F5D1B5FD898571015E73E5CF2281085072E00D401F6F59761EEC3E8381
1F26F75DB66C504AB6BABA87D121B1E7040A07AA2FE01F80DBC246CC03C4B2DC
C2A715980C52B7F96BC1A78FCC7F4F52EEED5F705E08FC1E5BBFCAD121FA88AA
8EBE58172C162AF409DBB0728F14923ED02A65EA24E5D52B6AD07777455A70A4
61833D3789C719BA92E901232599767E423D5AD9C807670BE0E7B5CFF8256A20
C7BF7214FFE0342809570F5966A2C43E784F35015D9040BA34FEAB6A6F089504
3A40A9E9D711A2721D3F4998371430FB3C94BFC619559B97D49627BB630F4B70
9D0A8FE4E916235335C3962F3CFDB04C4A3CF714DB5E260F4E66FFF2F27CEF2A
D4AA26BBCAED23B8BDC98F8F453BA27AD7758537561E766B82DC3032E92A9EB0
125D98A22C5466AF069BF72A9BFA052A8628FEC6A6AD0B711DFFEDE3AA2D7CE8
34EA487038EF50F953B8B4471CBA6FC3C53877EC1BC94582B1123EDF44B4056A
30F49394BDE22CDAD7F01951C7013D26979277D18EFA594E8F4F2B5E615187D9
39E842EC28461B9ABA52020A127D2CB9002A673A435B13C10602EEFDBBA6BD49
9DDEAB9E68D655443A5C2492BA061C1391A51592BA8C353A6F6A0708E8860184
2B5D031D2CAB87D618E9F6F7A0BF3F66B3FD5A25BB91F7F1F5F99CFF56EFF4FF
0A35C55658001ED2E97B26C869292F6274D433A5443179DBB8EE987196306348
3F9E87C6422AFFDD30080C9AC4EE7FE5E2DCBFEE4974331F4AAE479FD8806D4D
9C2B85FC69EB0453AD827A1E767E5C484BDFBF5C8D6E2B3C96298B390F22D757
802643A79D5E29CF3AEDF0E12CFBECA4663444FC87F2027571DBA9ECF688BF28
FF0DDB3AEDBA0FB28447CB4B5D5205F40C1E7A525FD7373392EEFFD910AC82D0
98E71660A1B3227C4A2592F3E853CA4CDF64DF19A52582E167234F4036FAAAB9
5446BE102DE2BF43E82F0112C2A20F15A3F92C6571AC761665A905362C4F8BDF
AC8705519C99862CD9C0D75113C4AB5FBB83C880E46B82715B5628890D9103AD
A2329638B95D93C4DECDC5E6C588C9D5183EE6FC28FAF9825F02DCA567306D93
5440987A81B51EE7291107A08F201C609FEF91A8F0587E8B13D4BAF74A5A6815
DE9E4441F46AF8E1DDDFA2D611C889614040B144A5EC064DEE4638C04EAB2E37
4CA8F50FB8C4D65BB296DCCCD39F1F554CFBED96670A91F515CA10EF896874BC
8EF48C6447752C70FF5A06F928DB55586354076773BFF7E94C4C3A7A1C1F421B
A9B4E3936EC26E0C19BBBFC90F021E877F54B62108F6DD1C7F6D5B8E64FC9362
E173F01BF2904B7E5A08B3543611562C2714099DE7D4FA330DB148B560A9601F
42A84452811CE213DCE782A0D7809CFD954D6BC1EBF2BA4D1B18F50FA8174C96
3E0120E266AD5DDB40B3F6798AC28CDC5C3C4BC34583528F5B5DC8A222B80B59
A3A93DC715D061EC6915E6E6E21A25425C25E8747C60F170D61047108826F96F
7830E220C108B441B6EA3198E33C49BAD8D43086E49F5A2BC7958A1A8CD011C4
49045193394696EC3DDD0BE084E8F2E9F0B9496F035C0DEC1CE11409DF566428
D50043CFF5CDD1092F6E0807E660B68163BCA738E8D98FC6EE3F713164CD204C
0BA84FFF4F33F47BC31750B448603D7ADB9AE92FA91AEBBBEC0DCD66980E6955
CEB425ED07115B24E40F53B29B9D840842EAC691B4F591F866DF27556474B485
1C6F53DD72499847109B16C7093984A6B8487D4F3870DD517945CD90E648C1BB
8A6861E540FCF9D75B984B5009B5CC760CBE297042C240DD624111670B703388
6FE6FC0E89C6B4C88F51DFF3913D0CC1FB4770C8CBEADD4B86393605C0B6C468
83CA5594754411B6FC331EF56D7CD6D247FAE42E966583C29239A8F862348D29
60B177984B6B957E733DB4D275015691D91443BBB13C2DA96097A29733CDB284
42F89C85A7A743338C9DD3BBC4EE53F695E5163E6E1ABE5791ABF100B198B9B2
1C21E2FA2FB4AFE7F9BB2D381260CDD3A2CC05BF513AA1E80ED69FA27BC5ED5A
21445BF00BC2F997B356D94AF13736C6D3B0613EB6F4CD96A685FEB672661DCA
206105EDC3CA07900676EB2FAB37F48D2E8207BDE1463894DA3C5B1488AC1EE9
D39DAF691648048F5D7A384B8927F8DA2BE3602669F71D80686E427F395134E7
7ADCC611BA91AD4B7A0237213C60CF2C905359C90795230344FC3C50A22BD44B
55B2044792509F50F5C21F53D9F9E9F063ADBED3AB99E2613B23334FE8DF70B4
6120F2EDF69F50BE793EE145B9FF9C73179DE640FC2ACEB5C6617F918CEEB762
4CD81E665B2E544864D13230B058717B207D3CC5D6647D5343DB4D0356082392
871EFFA896631A7E0D6477942B632074A9A4EF7B09D4701B1639BAAB4E03A40E
9B54A7A4F845CD63F88831EBFA4FB847847CB98F3455CB5957F2E0A0F5623645
DBB5C5564C7F8B117D6E27E65C0F3EA81AE67B4AE4B201E7C4FB0A8364FE53F5
41A7CE8F834C2C4B322809B353A5E63BBA7BF3B7DC1A85EA700BD287C2BD3FC8
2832B0BB4695FC937FF5EF06FCD87DCE6DE793C2B1EE10E6450352C17726155F
220D550B1759E15AB2C1D5968E52C8080CD280E99D3CCC0E80C2EF8BBFD96001
A226FEED7311EFB4B67F424B557A877379A15BCA54780F0CD2CCA00400B9B39D
981C6B552AFD2506D1B23618FA9AE6D8143CD7198A8482CB416CCE62B992347F
337D505A4078713BBD91E5535BD58EF0351EBDCD749CC24D4AD39F8CECD7D6C8
139756680A4C03A58B3374CEC658D30160AE4863A3938A891BB59CBE02BB451B
1BA4B2B6E68AB61DEB85F95E3C909B8B66E220B9F18280161C279F10F7093CDC
100A53D542F071CC0A5AF834DC1D18738F5DD62A5573E884E1FFD22BD810828A
1EA47F8218C15A2E97CBC609927DA3CC2B802EA4A0D7EB57627C135E3B065905
F97597D818A2C5CC6F328AD25AD11FA50F1E4FE637980B7474D6F85A521892FB
72989AABEBE02A2D0EFE88A6F67AC29F5D8DDFEDAAF465C439983C6B84389FF7
A6434462BEB7B07DBE4BBA61ACD4A60C55B5C0AAE527DE381DFECA2E6BAFDC8D
310364ECB42CAFF72BA93C067B2F02D1CA7C34AE7CDC46787A0E234C8BE8A928
7A6F3DDE0338FAD532A9886E8E3525B85DD39364AB03EC4C0DD25DC179CC1989
1BE232E387E857C78332D834679195E10F1E7B87B7966DA3B2238F53D1E13FE2
8F55ED6A92A750C7250C9B91E29796621E7E9520373214D7DA81B2875A986D33
80382AFF6DE1F829F048E57664D9C4ACE91E4684A51023943A4964AB5657D610
3A5405EFD4CFD1EBA684243E15093C9667797BB47617B66054EE02C41FFEC45C
C1BAE8AD56B00D323FCB1D2744F061FA16E161988741A319B1564E04BA210996
4F9F02A3268CABE450D166A763F5284954564A1C86B76544C5F5ACDFE0D758DB
865A1CFCF9FE8CD5F9C3B2998C56468FD52DF8EE60C6935A3D221EAEC7714E3B
301371C7DDA0B03A2416238F2B47BAD3A2C5021C886DF51C695AF9C87A864B48
3BB3FE0B355EED5454B59B25A0D8A1B8CBD356C24F64D9B55E16C30C011365C9
1E0380753BA3EDC0868788D5F50B9353D0227BCEE1BE36998B2622C0759BD66B
E4444250589F9CEDE766D8B940770CB6B89503E925B35C00CBEC2873D2DC4A29
0823FB7A3717B69A7DEDBAAECC067949932728E89BEECAA91DE3AF9BF070B9C0
30EEFA8C0A55C8388CAA2F0515915C98E67FA095BB98967D14B0DCAFA9622E4E
2E0EBFC768D80585ACDF28D8A5C2B6EE2FE7AAF62FFB90F569F84A0903996DF0
C1D5723366C436E4088F3E2BB9B47F9789052A71CF5C49908CDC1DDA194BFB89
14D7E3D7D4D72A150FD6FFD8303E9DE5A97A71B808B8BDF2AE466F31BF5D7A4A
44F81230BBE2B456A221E2F72A8B59F8FEA8D31F8A005A5BD93B9F49CFDC3DCC
CE2B67090460F632271C7157BDC2F05BC2749FD562FC28682A616A52D1B67654
DF78B7843A9EC26A7DE2EB168F874904C2915B97534B2D4D9F74A9573A771D34
9F7BC855E8F794621BF6AD471BCC347E2DF5F620F5C209E33A4CBF1EA85AEA87
4492A77342DD33EF615FF34037D660B713C908786D9022051B825226545827A3
2AD1B05D654DB6E6D261B4E8AF0933AD1F0FCFC7201E1A7C1B4199F160C38676
21ABA2DDF1CEB655B3EC3226E0B122976EEA998F7A5241F062E54AD1DFD6ED26
47C99A439E0AE95415059179867CDD3F0FF751F3141309F40E00A6C7C28433E4
F649BCD5DAA64177580E05C495EE7BCBCC5FBF104DAF360CC2711386655B26F9
D349D887EEB32ADE595241560FD5924A1745A22E6A01DB9C285EF14596EBFF0F
03F36EB2E0A7C3864F819EF7B0855121292D49482F046A55CD7271FE03F02EA5
886864D9D8EC22A68C23089EAEFFF03DED6484D8C341861EF8B6FD3C5BDF5AC8
352DA4E13A1E30D0CB71E090E9CFB9AB2CAFD0CA7C34AE7D8E3B2EB4666834BD
9CCD1AC2108348AFEF6071796F4BB2FFA4A67ED917E76A109FA2DC2A30D744A0
9AE653A748C1D18FB52595D84E87F1C1FB6B2F32667FE203262C66627AEFFED3
92B23861E5EB238BB4EDCE09DAE1C65BAFC198CDD1B45D42CDF93E16BB82D35F
821E9E49067E966AFAB2AB52928F8DD6359984071FC37AA652FB834A09E5BD93
3AFAE161140E74C6531E413E8FBBFC42BFE8A464B71EB1D8CAA93B33D7BCC3B0
47C7EEFCD3E9FCF26FF9441DD9BDE68D77AD7251C06BBB9A2103049E8827CAF0
F26BEF33F656A690235DEEC623CC519AFA82DE2AE16FB99F780FD7D8290DA40B
9B604AEF36B529FD184239E7D50561A07428D28E51B55546590A1AEAD4B7F2B1
AB8C5B9022C1FA03E33F8F409B24911AB8BFCF6EF4A8E415263C789F89063E71
C0910DC20347469380B7FC1EEB87D4CED7F4A361E58B61C91AFCABA35C03F978
B9FB5257C31657EE48504C355CE893FE3C553274C641DBC4004F5D5B879CC5ED
D3F21F867F6DF054127067DE86189F0B59A1B90FDABCDFEE61423609D888EEFD
F4A1367129962110C651D9481CEDDB8C5C2576A59AED64E95F7ED042AEAE2F7E
81AC0C408E593DC30DCAC334EDE9EE27D932B98F040DDCD195D6155607DD2038
970EB78221A94C52BD4F0EAC65F1FC10E5DAA93C17266F351669CAE56F42B68C
6D01E1EA03AE554D63CE76D800FDD9CFD89F80A241EAEFF7EDFA41794EA25CE7
97BD5028464D2CD45B53834B4AEF8BF0B9E7C6ECDEACEC887E8790A47A93F668
A9095E5FA1116A122C0E5B74E2226C654D3187C6CFD8807917820423DA3EC1DE
AA020EEEF2280C44A15209EE2F3FC1776875308CEAD38571E7BF889F287E4594
971A83605E0B4169D4A23EE790515223DF8724054EDAD905F57918FC0BC64F96
514B4BF7DC9BA79E763C22C977FB6146B10D26FEA1BAA7BAF21312F78D1625A7
8E242D743471DB5821408AB786E4A7EA9D35E30E85533C617689F95758FB2C7C
392E759C299DCCE36689686DE0C4DCE32649493650BA194A6208C5EAB670B170
3F2C70BF0EF0E3BE2FB0A79224FF4ECECD6BB3388C6D06867A0E5E3DB93C1B2F
464C23E44D3132E7D4086E3B59B1D13F49EB4772DEDF8EDC4F603217233FB7BE
C13C28648E9AA51D53F11FB896839F97AEDD8834BCA53CB0021AE91FD8E95E2E
F8A094093AF556B9639F508A401542B06821FF9DE1A745FE9AC5CACD5E8E1053
911442FC15CA5333751ABFE2C617D38FA1DC332BFEF44AE569DC631C93EC54D6
261583A695F5A392867A57F59B741EFCD2DCFECBC55D1EA5F2317601C9DFE9ED
D1EA466210FFA905A8F85BD58B98991BEA58DFD1CDED5C9B086D42CCE632DADA
147941917B879139E016B0DDEB8446BA017FC8EE5A354533D667B0835F5D027D
C2D580C16B80B3D05CC92C0465CAE077729F0A15B2DAFC89DCD349B3F81D0516
C65526EB5C10E45A8A85D716EE35FB9AB201FD7C89ADE5AD925A174169DA20FB
61E96C73A143DF964C20589EF24A0FCFE6195317F2FA0D2249C0D8E649C3D9AD
FF13332EA2E4C9CD36D8443EC8F027B61CEF92C6A6B72DD4ACBACC16E429A9A3
F5F29C1631360E32F8C1C93ACB22F810B86D2969A7480F486F62F8488BEEC74C
2C1AF13BB92BC578E8CD30BEA6BC8CB68ED730F54CED0167605FA76AD7B7E88C
7AE7688E598F91C471BD65A542E96D64B1EAF19FB4F1234308C48C2DC86E2193
11ABDB4C6189C6F201627C693691A86DD07FF55C30FDB3F72381E09C6080FD7C
9182762E5001E30F52A216E0B71E4D2D4E2F3B20F95DF3A11FDB2D2B5B5FAA66
C46226D5E0C77066349770514E5675550FAC9394FB27CD2C2F974F1FD58C04A3
1EF53A8AB3B2202CCA1CEFA66228E1480A0709436C44BD3319C40CF888AE4692
5DBBB52B15CF3A518F627F672135A24D5DB9B2EBEF04C860AECF231EBB5A3BF5
6DCCD5E72FE4B6DD29E896691868A7DE4120AD06AC573F5608B8449B38E71CA0
EB5CDA3F942482EA7973661170F81DC88D54DD5B92323F46F833DFA757107E9E
F62A47CC50FAA1B68ED535C3E0E1073532A05ED339C8D70B3B9864808ABACD23
AA95E9FDA43D54C66A675FA074E0A5B8777D3C07850A09087F36852B5351F35D
8BC4DDFCA35CF29CD5E3DE118A741FAC4DED36847F2E2C6CFE08669301722D94
376F540982958074E7F1383C409652F6C99DA39FE90B38221E75BC1ECB93ABF6
B00F410A0C5651DB418566AB350FDA1789AFD88286AF3BCB42B98386F7BC144B
02DEB8940D20A6B3062F0C4244EABC50923390064F1D027A8BACC3DE45156E56
4A942D1B87F1C4A76B0D4D6801AE792CCAE3009BF25368B31B6AD5476FBD3BFF
9759EF463EF5E78E10B7BF64005B2ABE0E8813950A08A1808587A98E0021D0DD
751AD515E8278F1A0759E85D8A084490BBB0F8206484AA36388B1013643D3198
3509078847BDAE08E76FA5BF3E3A73C323CE093DCC148E3C02C2DE1E26C94D5A
40EC8308ECB02FF7DD04EC1005A2A0DC74D4E587F10A3EF349E828F69FD38962
2F0C74D5DAB3ED6CC9F97008ACCE74C086A503948DEF1AAF58FC8BEC703CD360
D32098A56AC776B1BD08442052A2A4EF6C8798F7CDC102AF1A2009657254762A
0793F79A39DCD6ADBAA5EC84A7ED6018BBE727E5D477893D84F157074B24C13E
8D4881C7DF8ADC13EBA0D89745EF93B7616EC5355600BB0D2B630AABA3CF2946
AFFD0B2B724EF0F28393F2034B2E69DA5061426805353EB4D80E20739BC4C510
6C45275B8261DCBA10DE1D104B12F46ACD230977EE7D7D1D35D2814139E38C4B
CA6937CCFA653349B1EF64A98457F7B4B5D8F2978F16ECCEF7054905863AA46E
DD524CB33459220C71E9EFA7845A3A760A507B3D3ABC525B35930B613710A13D
098832C58EBBC8B0CA6AD516E6385792C59220331D0922A1F6F838A8DE13C337
900462F952EABBDC2EB1FBF94A66186C177501453CD3FE3582073DD86F04406B
41B6AEB440DA475E13240445D46726A6D45185D56BAB8807CEC8A8F7CE1AD149
7CE2E1BB5DE4E5B9592241DD136479A65905FD0062C91DFF7349874BFEA5D9EA
2F610ADB9AE7757B2307A1BB9D6797D9F9C4844A59841C7C7682105E23A374BC
A91885E7410F56F60C29AB8B417E2D6092F8BB70A2DD5DEDD4BA1077D7CC62FD
EA43428C6F79C332342E15F75B08A1ED360B3511F823E75AD49BA7AE63B19238
2AFE8FAC2715E5780BBAD6E383CF9E8D8EE17A35686BCBEE4EB28F2434238564
C38D1EA3503922CBD0E88587DC3CDE98E3E91032C3F1196361ED83085F93F2C5
BDF0352676DD613C27057333588CC643C22513C6F69FDE343CE33E17013D4D0D
120CED49F055C3AAFA37312F9BCC4F4DFD7397BE1A458463E8C58580DA921CC8
4DCA9C4DE27B681973EB6BA1E22403433D97EF143C518E3BE33F0B75634DFEA5
5091EC4E2B95858E61EDD3D283D44C3BAFE9D809C2C27956D4647D2D624D9688
C49F9C1C2FBC208004B9D471D1594AC915B4676F69BDBD0776126ECE16DD4AFF
5A50CCEF0A26AEFD0620414860832D64B6BE0C6162D791D759C9B9E9CCFFB119
B21C90975F74DE4895B78CCDDCBCB213F2702DD37EAB12B0EBAFFE516D531DC6
F43B3E523AA8313C2A4ED52022C5D8E513DE25EBE4946011655C21E22D542011
9C91515AC8EEB6353F976C988D6CD724D33850E9238163713290DD8DB0178B32
27810D99B48361133B54A6DFDC87274376029238639D9BA1140336BC9F01636E
D2FEBF0792A4702E16D08A83F4CF9B18D3648CE18B4B1386B5AB1461702C16DB
E03D10F64808884494F1CC65E7F71122EC13D6CD3D48CCC6645DEB12035F52C1
65A4912025A91A4B59094D7655A7434DD0BA692D44156A210B248F50EC728915
78562D1E9F38A0A6C8F8F7A06775EAC6EB7FF45E2218DE533B89757852785DC3
8B1C2E0C9A9A82F2594601D2C3CC78C6A226B071F6528D4F0FFB5C4B61C6E68B
A7DADAB9F58968F63A26C470C8F9697AA4B44E1FBA1CEDC02E319A37604DB79F
A0F89EAD4379C5F0CAAA7441845DEB226DF86483BF8664E39A9D4FEF2E8C745F
8C84845942D40779816F5D37EB3E37FC4FCE8F9492E884E432F5332C61623DC5
D5F943874F4AE55118EA3FE9AF63998A86390B9A2CFB1E883A80CBA9F378B18E
923332930D0E1BFDCF3877F0251F7EBF6F454E4AE912E33646F68734B0C11774
57CCC4837BB013BB5A2E64B229E5BA5830B9E88A453D078CF9CBEE39D1269CF5
95618DBFEB74E455C8972A739DF5330AE07D125B4C2E7967EF52DFD5BD5FA826
A9586A9C5696B732668DFC3F3BF94D213446FA33F0CDEB4F4AC2AEAE3CBD6D83
85A2D4E46C4EA037F4A4453F7158023906423765C2FF3AE2003459DA83904147
5E90B65339629255FC135B6B5C5F2E29D2EE051FD2B53A417018F8F14C41BBB3
6ABC6291B7CBC0CE5EE08D9FC1A863599B510EBA337FF4302265205DD23A2A4E
C20412F04D6CFBE1F6BEA561B2468ADDAC7C8EA6084479BCCD4BE8DF5E43B614
AD3281253DA49C388AB2B41810E3B0AF95BF0E6536BA6E585AEB92C9A1C9876C
83E467DB860647F5D181E4033E1256DF858C0D168536E728FDD82C17C037C5EE
188181F5D165D628AF8BF48E45EC8A2A03707848E83FD4D72FE9017FBACA70F7
3E4C0533C3038B97DE960896B497E6EDD4B4ED1204D5C5D55908AE35CB876383
4BA239F9CFEAD9099FDDD29C8297FCEB446FE889E03A649FC3BD36580D3204AB
61E6335D62556E64A017A95E339906D6A7CA92FD473071C66E36D15F41F7AA0A
EDC1BC621B3C3A44CFD8B87CF8097E633658A6292EA8D86B73544BBC44CAC862
797AFD23CAE96C94B20AE2F1D147AAB602E9889CA3D3797525B6894E31687268
9DE8706526BEF3903DE342F7B4B905C65455EFFD4BEA168FAB3AF88AF4C7DE8C
EC41AC86A2FA0E4E151146BC723675C6B561564F3C6A6F1B16E44FB6AAA268F4
D11891C047D31A740E52A3A0E9A52BEC57E56DF2988446BA852BAB37FB947687
8BEF8085AB3AE339F474B98DA9E7EC678164EA012DDFE7505B87B7C73B63334D
00FD5B7ACCB41475ACB366D24BE3C06D5DF5126671D4AC43B76EB4C2EA4035D6
720DAC615A888CF59B96CE732B6BC9573BE771FC3A5E4DD00D5F303778109519
EC63437E55E2913AEE591684D95CDEAF7E4D95995C9F4E6285984D54DD7A2734
1CCD16F7FD9D5AFA1C1C71D42363917E85C4941D36BEF0CC3CD14430B50BC922
0A5E4374C40D00ACF49BFCB612B1CF8EC4DC915B4D828E47658A81852ED1661A
C13AA7C9900421368D3621E6EB00C3F38D2DB9C32B09368E0E92E43AAC140A68
B225ACA57340343EEBD0F007C5237CB17C54718F2C793A0ED4A4A92CB93F2FBC
3A5137477ADC564B6BE59742CAF2A0A616EDA5CEB309B6BA98FBCBD3EB8F834F
9E77EBEFC6206D372689AD4EA30E374390EE2A6EC676F85AD4D7381BAE63D361
A3E9D86E8F34EA6D8BD08093EF9DD5062FA35E17A335253361B96B5DB79D7311
10BE55FEDCB73E0AB6402826820CB7FC6D8F64E722A29E4309EEE9A1690969B6
EA25370BC8A00B581F28059409597B3D04DC9F5AE76D06B729F36CE50825B427
08AE5D806AB1E0C17EA78E97F23AFB16433496B1BB5FBCAAF3BA3D0EF070D368
13D573BC3DEDA2D589DD71523B50C5DDA2652CC6636D2CD07E3D082A7C82D316
5D80877895BA6BF63BE72014A89E21FDA3332BFD36D7275AB6715C24E7DA4B01
2EF061CFE836C8D7B12BB89776759032D690D50C6D77B54B7EFA7147CC984B64
294A27BA668EC0BF4ACAE22D5A8BA34661056AC9ED2B985782F095666B1742DE
7E5B98E8C2831BD005C7294B401D88BF4ABE94BF31B3519A2CB8F927CC41B815
3C34597C311E3FD219C9C209FD14F4C1E3AFD1E58C93EF8E41DEF78C1A67122A
CD29CF7D5B527D9974C0FE6B8695B26AFD997861328672A1C98B3F6AD2F5D1DE
DC49D25F68D5CC60B4C0AC1D3C6851A243F40C38C7513F4154C0143C0257F2F6
FF553DF3443596C4D05EA070AE5E12C1F3136416E83214405D473440CC33E95A
06E9C6BC5EC6A7BBF393748C2F386D5C9463B307C1AFA4C5B1535E4AA4516DE1
8C2AD42E108EC44E2F9F4DFE8F8A6E22458D982BD77026596987E9912C4F9738
7F0B8E1E87E0FF76B47261816DB8AE033B6F54917D74BE982C7CEBCA2144723D
B976756291A6DE8422462DD823D738366F5B6D1CD6C2A9FBA365871A86A02C59
79E84B21DCD1F000CBF1B7E1BE1235CD256699E785FDA8C5A06654688DF1C924
A6578FEBD6B6B1E23EF74A61CB5D544F33BD8D39971A43622797795926B2F350
16B4099457FD393F0695C50E3C97CFCCDD2A6CE922EFE9FF7F7F3072F8E15D91
52ACB88EBE578105F6F33B2DA241ECB81A9BBC894FF74EEA9DB43ED5EB305B9E
9905CD12B4CDA8F104C1A871FE401733B8E8537186C81716A564BE83E3D0CBAA
B3F98D0FB626BDEA7874F3B2FEDD40AEF77D0CC90B52C5BD43C75F4BEDA8E583
164C33C3AA5FC3982BB795B10F432FA1FDF195185056AD6B2478C7E1B64FEC39
E17CDC15B4EC78BE3EE3AC718C35BA97DD107CE29022199680C0532F8DF782C6
625519A05F932E7D5BEA3402F0D786F2607C2B0C12A533AB43F62F512A8B46E2
18E3D8196CA4BC9C14658C8714E574DD45B4D09E419F8C783001807B44E80AE3
18410BF4369392735897FBC08F5E37F8520980BEC59D74A41508BB4164836FD8
25086ADFA456A52D565BAFF741E8FD3A9F69A8A1D847B8AD2823685B7F92A319
784D492F75C404EA2FCFB89AF74D39038386E9B0DE59C4128738890863CF85CF
4F0D82D7A50E1BE5FA7B8E02B25D92188C24893F1589E8A6D5493D3120E075D0
ED4A38B683487286E361DF3F9F2B8855DB54E041B7963ED8356AA2B27411F751
2073CC14A52A4E649577698A16D19D6A1B575E8A8AA02A53D473AE0584168C31
266A6EDE3904CFB4466F8012651C8A55FBA9659377F5C8C1A4301190B7EA180B
18972A79B9E16B45E904E2085A6209F8B21C6CA8305B4E41520F4BC805126D28
02F095C6A5108EAFF60DE912F0FB2D9E6ED9DD5B83CAAAC0C03C3F93A5932807
83027B672E8EF15DF71036369451E21AEFAFFD8F1C0D044E1B5BA01D10D350C9
53188A60683AC1B9C9B5C62164692F70546C77B0899C9C6C18253D49D2C9619B
2BD1DD44FD3324A0252E018C1F8E363B5642FCB23C0602C9B704DB933393602D
A8FEB070A75533C1426AF6A588D2020B98467A054653C56643E3C0F27EF5F8AC
359E10C8F746B724FF75FB40B30B7DD6174A89A2042B14A82BA3A2075895E89A
C1CFE1582AD39FDF86A1FC091585ED5A3FB8F7736DC1B99B73FDB93B9B2921AF
63F8DF28F6F60B50C1DB314EDFD16EBBE5E2231FA88492E48968EC84DED988F1
9AA3DC878FC6D949A5C196DD36CB9E9873E76F32C003E741F1DC64ACBB8F6392
FDC095F35405D6728D8C6BCC91CB5DBA248B5FCF0894F90329FCDF8CE2C6955A
B20D7F3573E7A7B5A83BBBFD1344CC47D16346DA1850954D54774B655A68046D
850753A81394DDD8526B3977A7B565E64DA96695863FE852851335086B02D018
2B8B5222DA1A55AAE90E015620CFFDE35160729CEC68369384BD9184E9D1A96A
EE38C7162A2061800DBE80BA11A7DC0AA1B54D55FA955C0BD7E2DDF8A9A8C24D
E752C7099F08F090DDA45740383984ED69AFB088CB83C5FBF0794983C926AC2E
E4A9FF767CC027B4E776A9107323F1F1C480D054D4EE51BE463F031697782569
01816672904E2E397BA882CD6DC28F61354B90F716B33C4B26083F9978A8AA67
D00831D68E3DA8FAD7862148DDA102319DC586332AEBF75193F6EA178B81ADCD
2C8DD21BAB2393D3B490A8C192812ECE2BCB478164DF2B1A0FA0CE7015710FD3
3E5C583F98E58270457D7D4616F34B430DC10613E62C1E3D4993FF823889810D
0EBFD306DF6D12837E395372D06AC0B591292DA642E79AFAC8D20F243A848DB7
8EF693A86742170D028B9EF131DFC8A720D5406FCE256D1699E317718CBDA9AF
C5DF7D1557598AE110EFD72EED9EFFA6E1ED7B3F3ACA8F77F629A89D0C478B7D
82C2A10CD43C758B9624AA1924ADC4BEC02191EEF1F14069DA1E0BCBA007BB40
6C94275370F4C9B9797A7C129740F6375E2687D0F28603A6C156E92F5910BA55
2E80B4AB0F9C04EB5DC013F56537117F71846A12833031F88CE71B3B006993B0
83A893198A0F977E05A25333ACEB6470A16CAE4A4D5ACD59D6279864DD240D29
216D90AF0272BC63403AC141AB597D259542787E33BE07F095914613AEED0B1A
958E2CD02C2EEA296BC5A04EA5A5150745FBC0C1FF50A68B7B853B4D249AF4E5
C0D83D4DDD2E4CE1203EA8031B80C87021D1B9B05C5D3AEF53D680F503779971
B0D290C2D78058596F1650F63AC00CC7A9E9B4243CEF594A6E780274D8CF29FA
7D94771E2D221E3D64D048CEC834D4009D49BAB971C496289035CF6E0CB1ADDE
039D641E9553C9F8560B02D5ACC52FFAE0C815DB444CCFF1AA72A83C0E53EFB4
07F5A422D6A4F6D690772254C69907C5A427CC5FB62EBB082E39578C120840BC
EDAABC0D50FD3C64543FA68415C548D8FE385BB7EE720CF97DB0C63C82E5C69D
93559A4201039FCDB50B20F997CEE3F4ECD7D8AC35C08B510E1B820AAD99C45B
2544D4A104CE3B4E767C9772EAF0F84E90AD1356934F8E2F89CE73EE128925C8
49ADBBC42192ED5DF7B8BE799F79DC53685EF0EC01C5C04ADE792B91E4968FC1
6F528CC92EB1D5FAED38F2B9EA3D238B8ADC6B7533954697832B7D46F09A4EF0
69624519DC2527432D40AEB58C0593ED7C9E2AB4B0C800B79472E4FBBADD5691
DA2A53A516794FFA84809A402251A4BE0267DFE50BE12E68CD7B443E19EC3AE6
9030AD6BE537D4B2A5662B84950BE4AE3DC7646F8F6192C52C029E565F2DEB80
E86A9C678AECBF2E3A8BAEC879EE92D81159FC377D7BDB4F0D818442E084416C
EABAEB91CB6A283202662D3AD12D853F7557F40641B6EA93C124A271578C0F1E
FAE1CF275D78DEB9564CD0C2D2AE64840D9C421DD5A859EB9371032BE719C9A1
06A835F778F48186CBBBA6034E6E3EA336BC2E91693795ADB88B439BB561F9A5
B44E48E2232055DF5257FE17C33A4CEF2FFF8C69E4AA03F4A637477A77D3861E
0CF9BDC75C9E2307EB0BD0E54A61A469C732FCF2682181741D63D09717E9F01A
8E090DD438DB051B8A19FA919DACDD6EC3C4482D312C30E5C86BB5FDC2FA0A86
6743EA1A55D05E66FA6D85676AF60A665EF8B92BE6A1A1730CD8A1D655339ED7
A10A65B4F07D8F249B000983EE6FC981D86C9E47E41B151158A89F4535629B73
BBB5F516E103710EA87774ECB6400FA8ABB34518AEF51718C40BC326AAE0DFA8
3B386E5568F48C61114F3645A8B9E23940EEA09F904F98E3C460647F8FAA1D67
C3B7405BBC8852C6414BEB47394BC8DE3362E8686E038B2280D28C2BEA748BB8
14735720E53A34D92DAB21C258F113370E1832399DB3D013A06110418A9080F7
ABC6156A4C01AE7D60A6644FAA275EDA26B0D0266573F2C32E0A2908A5A6001D
0105C2E3CCAA6EF99BA5DC7DBA0F12AAFF9F1F9241BDA8D6BCB20DB1EEF68A51
205F83145D665FC4F0EF3B48671C902AD5271ADB5E5B0B5F3CF7443340CD3916
3ACF1152101625F46957E3E99ACDC41EBEFA077CA52FDB3FD5B4FBCE20FD6BF7
365F7DCF1A164E73E54EB22D559253C065DE68C2C9AF42653E926D7CEF953174
98ECA4D03B9A3DDFB35C8A0EECF06E3BD6A88556C4C28D6615C62560547C014A
6E7B0EEDA2464B3A63BB83D52436074417C98874C7B6DAE6ECBAC7A3FE912645
3AED2CDC31D5951F7F7B8847AA45162A2E92BE180143FE5C873A9540E23AA5A7
8FF8F6D45FCB651EAA879ABF3C4F6B07F080A2315545E4F8970876BF5D2B0C92
E275101CC7A22A36A2BBCB7FE935C1C785161E29050E54AD0F0C5CF1FFD17785
881CE880A6466D4283D371167BE027C64D52698F2D05378A4A89B7E20F44CD3A
74129B02344272A0DD94069C29CCF60A62D5CBD62B1F4CC909D0DF8329220C62
017D6F1A7814AE47DEA395EED72DF13FCCFB313FFE433B52A5253F007C4FA478
814E960AD5B7A7D7FDE9862A36CA839E1D461EE02BBF08CC3594098642A2114E
28827C5F4C356834FD6F14615957C52ABCA0877456E70B6AC053099BEEB382D7
A44540CE697C88163568D54E0077F0F14E6959FB608AC473B856C10B5836749C
9FA23EC6A620A8409E413BDCBDB97CEE4E4E87471E609946853DF79CC95A1064
47A6A988F102E35031DE77BC401B1E9699E52A7D723947D46AFE994E6FB4A41E
608EF42477D32524D7F1AB48C629B59344E1A8A8F75773F22DA14E39A6BE7C95
3EE0EEEA3B150D7AEB2F229A2DD2F6803EB3D058F5B945553377F0A7B875BC5A
78660811EFB88BF392A3E320B8D0DBFA2893D77E279903998302EE30E295E76E
E021304D3E05F599686FFE8FD1640C266017A6D9C03C6A7782EA63FDADC60DEF
70FD2FC2CAA158F196C638E1BA59C5C81BDA969DA1CADD3769A6EF073B01B609
329CEDEAACA16E4838DB83E0187932F3367546D153AEEB0A21F41B0F1CACBDD2
456950A0134397103692E9ECF7233654B31DC69AB3B085C2388AF0916F2B64EE
66DADC40592422F92A16778246C9B1E50F6AF4E15279C1A053BAA423E56C7BC2
30F0EB9AB742EF3948D65B4E82DC557388A724F26DB2CFE7A7284D4C4A4BC042
97A39E769DF23C1D0726A748DA65B6451CB5DBDE11054B42B665E6E967568812
D6407BAB57A4211113CBB3B4875466AE7FB40E233CD052CC619ED8B980C3AFA4
E784B807B58C00666692078CF31A868EDBFB0E584EF35E2E6D7A2F496F76BE9E
79A7849FAD48D5EBCD81B78501E39C05E52313F385CEFC8B66B537DCDFAD0B24
5ABFF03EF61D99C8A136EC2265C810E60B2413550C2BA95F0D2E47436D24C9D4
9431C8819673140115E43B35D638E5A3D51E10874C14D5B1698979D7C13A0695
14FF7E2C842F26ECB87017E79921034482100E1D6CC54AECC6EF1E3DAE52932B
B58371043ABD6BC724446933E8470BB15E32DCA23354EE70E0A7C48E7B5205B5
957EAC25DB707ACF994C54CD7E95A5AD6A30B72C47A0289CCAD69AAFCE49D9DB
8B1128B9B2F29628135020E830A7E09DB839645082FC1E6299C75E1A0131BDFE
6A73448A11102AABAD00428E407DC6F16DE88FA86C8CC15BA3F3167087B38AA0
DC3E49A04D2C0FA17DAAF7A150E52F14D33ACF68FE870B08C30F5AE11A8D7B56
E70CBB9FB7AB3C42F1A266FD9D73827488B5E17A5C092671D4EB2C95F15E012C
691CBA11B0B2236939DC2CBD74B3F0245A746E82FE8DE8F9B1C522AD1C2E54E6
78A4197854A8D27090F94159EC2E4BF9FDE332F83A3732ACCFF592EED3872684
C111888F78CF55119F0CE907D0F46229BEEAB2785FD9C2F2484B40BAEFCD74F3
9B13FB5F699E592E74BD7B1ADDBC0152F5412DEA3EA7D40D21FAFD12B50A7533
9F75E2ABF26C12336C56B6E8617CA45C0EE1E3EABF6DBB4C7C4F0E9AAAD3ECB9
B27AA13A739034E141ED6CA8B0F8B8FFD629BCF454528B0CAC86C21AFA7F9CFF
BE970D6317E1F4AD71221A942F452DB45ED3062A5C29F4BA34C6D0EE7EFB2BF2
A93596992E8A05E6E248900DD30A35B2BEDCC3CFD7D69AB0B0E000B2E5FC5134
5DC5BD4F1AA5528BEAA3A886A800FBCA3A4AE11BE4EE274B65218AA7B35EF922
16A9341DCDF12ABAA8EA54D5CED7742D9490E64A60C9345560E3CE301ECC52A8
0AC6F603857AB029E6C751234C79C3A203BFFDF5A87FB1ADF649EC65827D366F
91D5EB34E51A164564EF7FE459AD93E21BCAA9101E136F36670EAABE178C94B5
72479E14779DBF0186053B1332A7993C61B2D4AFC202124E06ADA456A1A52FD1
5C2031907F8931A42127DFC55EED0D5ED03DD09009F2C1C4925EFBD6343EA1A1
B37C9F9000C8470B6EA10855384A7ACFE5675E73EE904E4D1DF0BA0D91567E81
875B51862DDE8CB8027B1F0C5766691F4FAB6330D54A7109708E4E803E6D26F3
226C9A119BB1F3EC8D40DDD575FE862D3793EFDCAA540903CE627223606E2A5E
8D84F40362CEC29A918C37A71A5F092DF0C3446E4EEABDFCA60D28BBA5EE442B
BDDC395EA8A11EAAEFDFC7A57C59976C1800BB9E7D0E87CFD47907783D67B087
13832020F9FDFCE689E16F9CC4A4EC28D039EE77DC36EC2E1C5949088496A2A8
06A6F75896044F2765F3BBA2B3E9997544E2368CD03F78A30FD61E80F89DE7E0
4B2F0F70D76D592DF1A8FA37EF81E1E1AF92D3081B8AE220CFB36A381DE45E24
EE9B07B658932A23C9613B9F73A428D2F579CD6050499B06131CE5E73CB4CA72
73704CECF49E984E37E287F0C8A1BD937E7CB7F3BE7110FD9C4A09AEC0582A11
AFC14C0F2649EC8E829AC78E80A51FC2E2FAA2F592D54CE15CB4A1434E5D439D
C34C7C2672A91EFD26226421AB075F458C3D4C0AABB8C0A4F2DFF8E7CF9B28E1
FC197BB9F5CF10B67FC3A4B2E45357854562D75F7C5C97D753D3313EE7E7DB23
76D4527EE69C7FC60E5C5E4E5DE5B186C2C60E6C0E5F64124CCBF5FA1BF64695
C7984B37C1FF57E7E4DBB243098C9E9E1DABA49960E8C7FDC5A23F96EE592E0C
9E5A182AF22863350C002FAFA57DBC7E13E02A0A2F9BAAF273BC2349AAD3AD14
2FBB7E7C2F1E0B2DBA49E246EF9319A862D3E81F979ED2013191F44FBECAC079
72D08651CF1FD12F9DF184F804E0A2ED3D9D3B681477B2CDDB8E7A256CA4BCFD
ACB70FF165914CA2FC83FCA43CF8C1A3AF7972E0E6B4DDBC521AFE393C430C76
62914C3EE9EA5EBDE621CA814E868415BF0E178083E814B72CB19381AB8D08C3
B5288C862898B316D634301EBC8A17FE3C8984155137A0716B9C3B282C34CF9B
899CEF3257C8C7329C2728EBBDE2CCC10CE59588C0323F85D71831909275C29A
7426DD5D2EC5085A137ADE511B39E43D9CA7A2CC7A3D81C349005FEDC0944468
5546EF0C049C59E39FD3CE6565D690D1264DB8BCDAA066675B63153396895DC7
1A9BDBB8A3BDC7B2C79650CD8F1FA0B14477A656964A0C7C845C3CC71FA80A97
54E48E66FFE011C1270F435C6815B732EC69E9A4A7A08CF30AD392725610A168
3C031C22E3B656E86E5F3555BD778D133A06F363D99BA2CBE52DF976C2E152C2
38979353B5DDF9A6A336689304C8FA55A6BDAF10042AB127C8D43D52ACB61D7B
93747D1429B7605918A81CD995B85B325C32431B45F955676A79677652FAC06B
8C1CC9DDD69FF2F761650C87D771396406DD8CF7FC4F3F44E9CF55F3A7EDB577
3A45EA6A3F7747839BC43BA547B15C40D15BBC9C9A48BFCE2F12BE5112DACA79
E64432719DFE329EE9676CC37FC87F0B88DAD22C2A4DF2E48C425F71922363DC
5A3377A6355F3AA6BF4991B54DD5F2A17B8DCB12919C7E09692F36C4C24B60C8
694E6E55DF0DEEAAF468DB3496066C4103601DAD43381D66D88D6BB00B35E150
78383C7AFBA84A53A49E675AD68A9B957897EA506D2BD0DB933AC8CA5DF66DDC
79E6CE8D0651E238210F308808114CA6ECB6AC66E866B5281916E6BF30A4A6F9
D4863DCD6C64F2B3BC1ED1231B819C5727CB9B1C0477707D41D80B811EFEC408
4660E46A849156ABB0D25C34FC290EBBC6A1BC3B3A440A4FEFF75520F89C8A9E
C5D62CFD7F2FCE06EDCDE6FAFF91772698AD3CE7EF2EA62F6F4459D246717960
FF700CCE72667EED0BD14D4F6EE4B99176F1626D58A546044CFD04C186942A77
FE2F89FA6F3DB3C85C7C49181DA425BA36D4412AB1B724E46B2CBE80E9BB22C3
D75040A760506A74C2E9B98A6786CB6BC7604D8438F66AA7DABBE7B0CB52D211
1CF73F100475F92DAAB1E55753EA850E8C1CDECB469088B1E6E88ED3F094AB39
CB081E7FF225CCA81A901D8E586CD3EDC1FBE6079AFE6A1F903BE406EC4D28B4
B07802D566166F78E5ED42A5004A1336751F582FF9E3EADD84EAF74B6D417E3D
AFCBBA520C3C1F5340FD01E735F96E3C75771AF6B97E7E758409B88D6543B895
B37CB228AB7457BE9C15792FFC1EF76FA2A69C4F87814DB1D4837D5EAB62B41F
D5EFE8803806F86D3150FACD366C79C195DF8DC9F165ECE32E69D373755FC0C2
0DC83B5A171BD53F29F41A56363EC1F39E928E64A23603863F6FAED5DE9DF417
CB9B4936579E2241A11092DCF63D119F1DFAB858099F8E8E43AC268DFB5723AD
642C3939B57616452204A7F53384BBFFDC32947AFB491326A47E5EC5729EBF35
33203A3264E8E792A8A7C67AA4CB3A2600B3D9A2A38962EA6864A740845E7D25
A9951E1A61B4F2A4A0603925A24C9DC1AD12BA67C6A23604A8514D0254B8FC8A
2E6F5591B10F640F7AC419AEBE23A3727A95A07B8839FBE58C593FE5CD045786
A77889F32C7D3B6F34C4413F0F8BDA7CB3BC154FA23BFCFB4E6C575FF8E49495
ED8E5D143FD7579F2974FCECE4A5F0B08AD8FBB8A454AAA3024C04F202BEAA57
74CC3CEC50C72E58DC99568BB045926819C733692C78D2EB484DE2F43B3CC01D
46262EF76C97FE2E95D832D1DB974E1EE42E541AAB1C034C51E128677E2A2B5C
1BAFDC5443575E74221E9123FE6B406E1A9ACDD35D50712D83A5FA35B2F97AF6
750A6A732ED3062C54F3DBF6809578F7E5E9B9285B4505E5CA07A3A71D87857C
DECA7B4EBDE676D83B4DBC7F4E166AC39BFD7244E767D507441F4B270A5D1388
EB84E2D3257F24C6447EC94DFC9A22A528922308C0D9DBB2D0A4C7E5C03E2CD5
0F36B6826E8580AB075D5C8B1B74320FD24F3A5466BE2DDA4F8DF3C700F43C07
8193DD540430619F88F1320BFE17C36CE65C8A05E1E9E8D678CE880E29D790CC
C7E0D41999B85BD6CD5F8FCBD5E19DF95C0A75BF87BC36158B5C20A0583D55D2
58F05F0A068B531A535CEECD102AAA3776928D5ECE776B300444E286ABDA4CB3
61D8129BD45C028C32FED40295BB79EB52588DDA34F31829BE492AEAD636DE17
6E566FA2D55D09A4F7E6DAD0E63877ABA0CF1177BB73A7339DEE670AD4B47306
ED512FC7721288F709417773BF37FD509F7CF9E9F7237445748012EC8FE5EF1D
9455769729A6B2C85B47F4F0A81D883F3CCB39D181B383D93933364105DD79B4
1900B07A4932BAF20B6344B74049E0274FF71D7BEF667B7241322D03C2F702FE
EAF2D3CE99432125C999EFDE3ABFDC0B7E130D7A570B50DB73B38763B8FA78DB
082AD7B9B07C4D9EE643E6477D4689824DADAC7CF9EE977518E74F86876DAADB
C364ABDFC9B573CC2162EDE071A80348E257D3DB68432E652B62FED13ECE579E
AB5D71F355F94D640C8D5F438CE680369330269F6DDAD4EE99FE2D4086E6B478
991C324F6BB26E3A8A6292D668E6818C162D056D4402E0F9379372CD75E4A9D6
D73D308C59F47809BEAB74601FF3E0E42CD8F2F060FA5F8F4A990BC463A56192
E9BC827C9EF5EB08702262F06888
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
dup 65 /A put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163A516AD96B9354BCDBEBB351B643BF3CB00446AFFC4A137CB928E99D626
4824385F1E9CEAE6E317451B4ED21EF0010D48D4208A33C438D3DFB71B016A4A
126B01232F7E9ADF658B1608464659CC58C45D6BD570E1F3BF5A898600EF5C02
B0220C942D5ECDFBDA55B7F0D5EE8EFB3D6C6CF47C368F50D56E68E55530B5EA
13006EA18FFD6ABB9885E58B15D79A63CFF184DBCD58E3E99717AFCBB63FCD67
8FCD7D27FA745B291E27AF64F2083031A551C8A8AA175C3DEA7118C51D56BFBD
CB49B9B2BAFBA940412ED8EA92558FCBA16326308FF590F581BAE691D49A5706
07234850976B443EFF59DEDDC8F73CC2481E11F43FFD8DC1A4FA161D316CB044
F1011AD3797DCA2E959683E144D193CFB84CADF56EEEFC725CC7547B9F851886
A71E9ABDBDD2FD17E5C6445A0DDDFEC06D5EAA167F2233054EC064B915B14795
6E144A47B43E32BDA35E9CD0271DB752F7E9A245335219681D6637A262587FC2
17DD599DBA1E0174E15260FBDC645FFAEAC9C7C4DFF51A0EDAD482351F3CD289
88803F0B1E4401B2B540EEE035E64AEBD7F79D7B61FB6D6BA060BD0CDF64E78D
8BF16CE71FED40FDF26135E038824AB6CD8DDE9B34737FAE24DFE86B9B547871
945A16BC87AB58E49771AA2161F9E4966A8F08F5DFE83FDCADEB3879AE01B64A
72FAC9CC40C8CE8AE0D175B4FD6CB83DA01578
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 33 /exclam put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 124 /emdash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F43F9A1290E91C463895BD12E8A831DAD661EF23CB9AD2C26CFB26
71B72D15270CD8CB1D59CA2D9DE884C96BB923B1EC8208BD7DCEAB0FC2293629
2AA1F72C6B470701C381E335C2364CFCEBACDD20CA36182CA7E70AFF5B14B02B
75CBD0738E35DAD8E60CB3DA4DDED557FF9ED386DA52D10615E700751C842FBC
85D89C0E713F556814E051C6CEFE7E83C2F379B88A801DDA565BE73013DD56D9
44D97798564787AE6D5A6A9FB777EEB850C7481B4A353EB9279731512C9B95D3
2ACA3A0D44585E55AFD968135F6492A9381FA2D126CF50373AB7D47B509AE6F5
C4B100BE8334ABE2268DAFB7983BF339540A8D8280F3576CDCD4F21408AA7D92
BBB218043ADCAB60ADF6385516C2A5A9BFC5C3845124E0954EC5C627FA7C65AE
AC1A283A5A9670ED2A2073826941E9AAD904A05CDB5B692AF725B6B9102574E2
461D2FAE65B7321C0093A2A34996C214331F7A91B4F74898E2FAD14576F81B1D
688DD9ADCABD51FF07C966B61B0118F09E24354A9F75277B03026CA1C783CF92
76255E2A560768B3A8764F0BBACFC2BCEBF870EC12EF096A2BE42692EA401E2A
3A12BA99AA66F8BEC315412BA9A17E6574742A624447122C877F80740924F346
0E22CA288DC767537CFC7236CB28E31AC2C563B89563D0A57F798CB843680E9A
26A03BAD01DA05792528BDD89944986C15BEF8D3E84C08B3CFD68AD25993B6A3
903A215F9BAE352E428CA0E862EBFCED059D65F3C47D22B2B8E48E97507E8399
AD4FC0BE438049A369F1C68E0430642B5CA02080DD55A96E34ACFAC469B18732
655CE5C09F9E499346B2E0DB6FCD5D64384C2F529685F91BFAED8E85CD5704A2
54E457F74B77B97BC47EBB0F292F8B9839D248B20DFA40ED6AC6C136A7451F9E
57FE699CD9F0CABE94AA602DD5F17214F05886AD032731EDA504B76A19DCB8C5
02B38C86D8D507AC17AA803E5A22632DD205AF07F8AE35EE4129EB0B37E20231
463C95CD9943F718E9635F8765BC693AA01D8B18E0318A3C06F1086EA20848A8
9BC45782CD659959CA78F1E2599AC0C8E7A7396D59EC0EBB19DE8A07FF884C99
45FBC16DD47324B47C81CE0D663B2087DFD2E5F23D3167AC0F1B9A7C31836B03
59DB1249B0445E4D9172E11414A9DAB776BB862C29749077A9C46242EAB10087
1F063F497EFA5A35617FA7770432D63B1C903E570D7F56E52DFF3E48051C4F31
38BAD9D2C195BC8C6D5E49EDF16A023087DE1F666D696510B2AA4A5DF38E733F
5E7EBA96669D80EE118FE03972813811277F1F07A99581FB458D18F0D2C5EAC5
CF755173A99C37525615E1920418067A840679646802606148A0314A2A129104
3CB775A23833AFA223319BCCF2966C76AB573D3331E92A0C0D25EFE4A527D407
97CA41458F494533CC8C721832CBE7B8C5C86283EB4975EF9A5C31B9B500B8C9
7DE29981A0C52D2DB07CDAB41BAC9ED22213CA5EBCA0F8DB437A58BA39BE0765
A7728CC8E15684C683D992894DD9C7D8236D480D9250A1EEDEC54A0D75E0C853
808E0E44482B367FF14E72129ACE0590E1B613AAB89F20B39C6D7EC96D1D35FD
F7B2A3B17CE469506B7159B809BCC79613825EA23BDAEF4AF9F5CCA87942E769
CFB5ED5DAF4CE72F439881D99711C8D330F0AD6E3906F88EF8109CBBC2FB9CAD
50250E23EDAB72F2967772D27292B97AC2ECDC1E562DAF56653DCF043486D03D
CB55AA789622848E696164489600D83E62100882B1BBE05CDD46E8206C04B7C5
2F252D5BD50B9407C3D09FFCAD15D1860D17F889C86015FCDFEF4F4C7B7F3049
6160A9E92F951E522CCFC399828FAF25DB3B6D6796825E0991E7D0D3C509D903
E236F8E573221076CFDCEC914942B1E5BF7968B8AE1BCADE6BA6E2155DCE4C08
7BAFD738277CBB3B888DC2E5A2A507AFAB116ECCDC256CB6706525A3FDDBF0E1
DAA639DCADCDA056049A3AD88B34B68AE444A7F201B20F79ECB86A81588199D0
EEB9742EB0883BD537B708938D88DC40289B35C074AB06137A121D65A970206C
1E094773951CE771C000FAB997389A1B3A5CE9E7A69C1D330528B651C072E9B4
975EAFF199E2F730EB2E33AF375B655D20AF3D4526C7AADCBC094FA2D39A046F
7718E7DC03C74041789C96958669EF63CF400E4B41E5AF94E04B4383A2AEFCD8
1732791A32ED4820F809FC9255064A55FC2CE634036563EC0565F08A81D8BE1D
1C3863E427F97E04C339CDD513189D68F0EAE6D507C27AF1FB0B0FAD16EE841C
0B5BEACE59414C9391517830F2B113C956AED9CD41D1CB704D1534FAAA44467C
B2180AB6C1C51EA2AF56159B724B67EB57FF72A043A4C13249077E5E44639840
73ED052F37A3183C851862F09D408297302124C1D904DB246EA2B24935CA25CD
5573F1052C027C1611FC07A225BCF83A1DDB50E23253920D112AAB2211BD7657
2AF91AD28EA488D1ED74D515766E53D53A3D170218D2C563E1D86D27AF94F660
759BF581644AC6333439A88334E0D9AF23966ECC741E9D7D3698346AFF039CDF
CC5990A998A06B138A3C2DE885B0C370FB10C2DD08D6429DCDD94E436C1ED521
5DC77F792A4C0F84FACC93D76DB47DA046070E46E4BF03B8FAD92A37E836CD1E
17F960AC804CB844C2F0177B0240B92F1DB29805B36241D345CBE471FFB7F3A5
89935C7691B72AD442BD515383C8A09A697C34EBEEEC0A5BB551E454ED027A06
DBB5236240497E7B328B5FD28E46480B0DD9147F594D40FFB7EE1E343CFEA903
330770D1E96C52E95B71C4B9F6D46E491EB866FA501D5DEBA893BDA6BB0D42E7
D4374075C9B4B039504DC860208B07A8C48FDD4D1334B9DFCEBD04A721B6B0C7
DBE121ED183AC083B9C74D94002F3F732FCACEBBC1DB6B4D935084759EDCFF26
C621F496C600CC5B6E47AB40592E55BC899569786F8E3137CDBFB263D0CAAE24
6F32282A9E57D790FE9D74411B7B4A3385DA8892F9894325806456661935570E
326129AA129F1A8C5DABF4E62D76A0EAAC557C76964BCDA7C5ED978FFC6AC831
636EE0F5C7402B8F9384100888F12569804A23475AE6F0C6069B266F540642EB
A7AF38FCF28A300DCE2AA7B424113078AAF101F66065FF6A8CB0F1A6D8210806
2134A7F10958AEB02C2E3CBEE053515E87D63489644283F03D64BAEE212472CF
338C816A170CDA94CAA706790BB439428900CEEFA22325BCDC92F98CFF9FBD34
73AC71A2D17D3447108D3A100708A4217BBD280FAA422D0E1786B326AF9512F8
18BA12A3C0DAF169B50C324B1A65E4E0CE8443F8B24AC016B8E052B331E69D4E
B8F6E12E6FD556A0BEF391E249A28CDEDF692E4B8F5607D926709F4E2CA00410
DA79BAB5DBE07F4D35819F4758E242256C0546552114898DCE5004B41F24F598
450F9F1E10F57311F81FE7226F6720890B985E8AEAE1966C41E28D9E337E350D
29331BEAD3FE0AD1AD8F5798921D00AA1848D82076C95BF388537BF1E3A37D5F
B6DD000AE62AAF47F6DDCE9BBF524C34603094CE1EEE0248711496B906E3ED44
C923FCEAACB83E7A32BF324C158B452D16F814B76F5CF69CDAB03A8F414FC06E
57BCEFFC51F106C3426AD987867C25F2F7D43322D77C92B678D1AE78DB5691F3
44E2181C9631F305B0CF186BF8490DA0C23DA206938722E3903AEA61D117C4CE
5E7ED293603B8E283EC2047174DCEC76D5D6A5E59AD1CC776390116183721CB5
AA649E66BB5A144DDBC4B664616C41F8BBC62072717AF416487C31074345AC93
636B7129A4E8C270ED647693F265DF5AA2522E49694A45FE05D46494A56D2492
3DEE63CFCF412B99167152232696AD38975312E0E71AD42E093C80B95134AC73
813C1C9F0ED2692E8E3552FF02F24D4BBD84D3E446710EAB5919C02EBE9F9C34
F0C5B965DF31CBF390039897C47D2B7A7ACB3C766C747C9977CCCBE517D39F6C
8A86E18C954B41F2612CC8FB2AEED3483BC0280E9B8AE837B7DDE8121675701A
163A6648A2AB556E00539B762FF8905BAA1B609AA7D98E6777A754076C4C3D81
16A3A6A7A17D7F26E3BCF81445589C257E8738C6C63224A16B1AC691CD03E726
B1EA1D2BA4D513D928FF2431EE4E8BAEC66E1452E0B76532F1857B8FA8CDAA80
463BCC001CB369A2F8AD48349FB1C9A1A9231FECEAF44FA8C066B5436D54B03C
D82DBB324C90207B01A07539866A1DB7839361AA3AF6AF759590483A1A2E56BE
91C786C34F42AF46014D74DC4AFB66E179A0F2A275CA0972B9F4F40740EA0929
B1D7769C2041DCC2C11E8644590A2F5091F445DD18C42150008FFFDC9DA85E46
A319CEB306CAF77919F753FF9C5850EEC723662CA38F97EAE140E4F24FFF0D71
614D1F31A46CA3245E9137B274169212022E098FB96870C68B463E6CBCD66237
20D8C612A0C46050683BB23053914A5C66C6A5B1A25FCF32C30D994EEE652E3C
E38E471F4477FD2F8A8BACD0154C47D77F9ECB6048023C4676A9F6BAFF895C00
96F9A02FA6FD1FCB33BE9E61ADB22BAD7F9A5B2893A953D29BD763FF446B8501
62C4A9B2FE51423F4B268C5807224BC734F4F3B3373C705FDF1CB3AA28EAD98A
F1676923D9998F297BBF3E039137E11A011A7AA1AA350A590D5E11E989F49F14
BF34C3EE91DB4DC57D2D73A7B25D9E92047A548AE06C27913E3DF236A3D47329
DACC9A501D98184731BADAA80AAA2AFE6ACB5D511A4F117610A2630DB6AAE75B
3E216B8182A96E46A143F54E4111638352459BD88368E7CE024884C018C7D0DF
6D014F8C474A8EB547159F4D1B6CE505EBA5B75AE65B2C3A89AFFEAAD87981D6
DA7258C64ED0CCCAC9D375E3E5D2CF9B906EE805B46F0CF35F09A6B82ABDC8CB
1CA69C62E1DD1B3232E356CBDDA015AFAE3F3C1C0B6778BE096B2355C40B7D4C
A276E4C1DFEBE9AB6BC94286A00B4538AA279A2D87565D9CCB44A5027B04ED04
09F1ADA7F448D7DD3FA92138714F49E017D0754826EC669AF02684614ED9A3BA
F4B95C4DECAD924C39116E045F93D592FCACF11FF1A9C56AE218E0A4FAC722C4
43BD6AB8D21E8DF3B233150B99039044D1EDCBEFF37A46C88D7A293190A23F07
7019A97B0D1DD7E4A13280242F45BC1046E3724A1BB50F6977198D08B250B42D
9481F9CA2B8F9315E54DDEA4274508C5566C504AF30D2E6B5F18CF73DC139996
5762DECE01B8A6E2DCF9BADB1429D2AAE5DC545DB3554F6B99CB7749A5311163
99245EC2A705C287DA5A60A52BFCDB125C581F4F2C084318A49BCBAE7D36D02C
3409676FFFD76EE974B242AD8545CB530BD3CB3530272E9BD067C61FB0495EAF
DF81AF7E0840DF3A5902D636DDDCEE78CB0794603E32F146BF87F0FD7CE91ADE
C571401B26D53FA27CFCCC317E70C1C2C2FEB61396653A5453E8905FF17C7093
1F4C8E3A722C67217ADD1D77837BFA6D898B185FD4D87BD213547680791383D6
285646AFB0D1631A95BF208E0CD34640680CE5C01FFAC6C18474A370C81F02E0
DCADB381D87BA50D0D5AAED4A34EA8A545D24E766516635173C3DC13FDC879CA
9DE7065CC558937B2CF618E29F351123A8BE808090F33EC1449E0DE96953AF44
795B937F45F33E5E0C7B1A5E5E1F39E93EEBDFA54540E39210D11D6B3D4C5A66
6EEB6A248ACD827859992EED430BBA30E079320686CC01392784E97429DF7BD6
70A2D679C01215805819F8C898C2AFE32DEE548093718A68A17DB28BE625B6BC
73F9ADD9E53A7BF6BBCA32736A134303ADC26AAF2F4F20175E5E73CD38BA8416
3A45866F12881441A03C946909C33FD4AFFD669101BCD1AC9DD88DA85EC1C506
787FF3A593D6E8354F8C822B02A7809F20DA2CF3858370AF9B1F93D2ECD1997A
B948759F5CAC046E6C5E22C9CE33099A9EFFA103D98DB1C49142EDF99D994297
AE7DD125317E14B837143BBD72BA5DFAF363E56FB9FF1362CB1B251234BD6160
76FE35C8FD8EE32E6AEE936D59FEA0253535C843E3B7F5F3A5B6972D0F8A4BF6
D8FFFB82C60FC508512FE0E235B7CB2697A420DFBF0228E74F0A6842E7CD3D1F
B1C98902CE1B6D56EC0608F1FFE4C02BABEC3C1DFB4784D52D673D2207947BE1
DBD2D7A9A6292B8BF8F89A923E208C9EAA6148ED09125F338029147FDE45C703
B155B438415ABE41C279679B1D7CD4882F55258C988F1F09C23C8F792C2C3874
E1FFD4564CD2DE35C04EDF4F24C24DB16068D2E8865F4C09824C0BEFFEDDFDAC
A5E3A00B122BD48C203E32B345ED27489893565768AE42ECA83D4C6093D3FA27
BB2D83FF0C3E601FA30FB7EB1D1B71D7AE11C9F87945CB6B363B9FF6401899CD
9B5AAD69CC72F75A1B652F87AFD6AB1C15BD5671C5ACB22669C7533C156F950B
1A1605A50BC16DD84FB9D2EA362E411C501B13F1B420BE79554303AB91A6C659
49FD3C4CE2AA7816087A651FAE977670D498FF5559F6834C12713509CBE5C9BE
A2B628830D63FB93ED315F00D1925080E34601E065840E1F2BD43B7C48F188B9
0BDE1C56A8509C8342CE1CF0238D267984B758290D5EFEEF3AB8E0AEC392E801
84EBCB9A01118DFA30DD5C9CBA42F4D47488D7F27CFEF9B1089766611352470B
07AE88CA0966A9F88965077C46264EEEB0AB0F22C39FB6AA198C49FD3CCD58BB
1028CB454C3B466E2402977CAFA0F9F98032C2CCE349F61D2F19A8BB7CEFD255
4E3909A8B617B6F5E6C0B2376136C84214C3DF37FD238FDE6497BCACAE3E0170
B7461327E6332E81E44652F034F3B703EEBEE3972C1A29C979678B95AFD3429D
FB4B0F78E9AE3DCC6DDA04EB3D90170E87BB9E57EAC7D0355190BF625E6A6B5B
33A7DACA83BD50A9CC08824A09D5AAC3876F1BB73771F3500042533B3F159F96
8B64CB163980AB5E2470EDD5A5A943133D6DCDA22D502E12DCA41A9C8CEAFCC4
D203DC64E54CD433EA3BB22A0A929F3168964B1223DA9E44301F196C95AE2D0F
5AEFC38BA76D58C5895B8068B83DC778921E48AED2D21F162ADC561F660D4E46
D88E2CDC736DB88AF5E06ECDD77F8B8E772C230BF8DB85D1F85F12D72A21E5F7
02239C139337A4C6BD42048519B1B921DE49AD1AF161DFEFA485386C30F81375
9DCB23ABD8BFF378B0F711B5D7035B72D3DF011C89F7ABE883B6F9E903671341
F16E934C74E4D9464797B7B36B5F5988D681803902072176EC46AA78ED997BFF
B739D0118D7F294000B6518859205EFEDF18EA5A7F0E0D036730B1AA3CBBC7BC
D7CD7F17C206981898DB27971918AD0DBF9831A6D44BAD907910234A18987DB1
AA8F9AD9F645A0DCD496ECFF44BA281A540F6BABC14F8E58E282E25AC8B9BD01
76DC57ED0170639A2C2A38693B73059F27BEB5A1A2369AB254DE562F0222C808
F83126288CFC07311930948AC78026A4FEAA428B6B6D5068E07E3B349A411CA3
902C865717DAA0DA836C83356DCA19F95FAB911391E4DFB3273924376924973C
056159DE721E0041BB3DDC31CC56992E5CB41E40BB492DFB4157CDBEBE0697FA
77AC4BEDFF6B525B9A2ABDBBE831EF8D31E7EA30DD87EF9D359B6A6C82631925
A40453F7F01CE6EED96AB17645B7531C6CB7585C81BF20984C2CD87E1EE8CB12
9427E2686912652A3D40F240BA8FEBA02E683132D75E1E376E9314DE27B857B6
03AA6D4978A81D5B85FE3EF0726A16267334E21ACDA47E05210DAFC0C13C61B2
48FF646B57C99776628BA3568DDF73C8746ECEB0188A1309F391FBFDC211E3BC
DC0AEA50C9A4CB617DB98A9F458559910277934322309A0EDDC56224C0263C11
66681900677529EF233F103DEF1915256604393023115FF9D1A9C10CB6DDA39F
4364881380BA0F02BF443CD5E40A3740335C3886BD81BE1E03F09E2F0FF318D9
4738ADCF630DB5F96BC8E53F84BC352A3E66CB0C4019A55C84161EE8373EBA57
FF8F989017966ED6122315E795147C082A535376EA720C26AC74BF90BF508146
76C3090C68C56CF2F0929BCB00DDDB5FFA0B97BB04DD51C2C8A93CA5851EDC60
99F61B5C916760A54CE7669A66832600C3DF7F089CE0E244BCB2E9C57538F245
B760827676158DF2556EF290A4BFFC78332C10D0CA2F0DD78EA46B2AE2BC0185
F9A48371F98141A495413B0424E2A1FB705E2853D9B63FC80E3DC78D90FD24D1
92C380EC8B084A48652FA8E8FA556AAA9ADEA0787AAC9B9EB48CE20A2BEAE27F
9035CB1FF028F64AACAA0F1826303483185CADCA1136ECEFC056F812AF545E41
ED40A0480AAEDCF542BCACA4DA0031D5B6240617A3387A472DACF84198652B78
9BC343CFE910427A4440C49193F6AD15878326AA66A9F2445C2CB79097539445
833858B45E69A61BA4850310E7B016F4E5FCB7060E1EDFD4B487363E40B1AAEF
60BE5AAD9D424ECC3B282718226C8AA9F370B497071C66DAEFE40F02BAB9C39E
2468C0EFAC68EEBE1821B7FDF99E9C2B9B44BF1C1E52DC52B339F3098BB61059
518AFBFF68197FE64E2DE9C5FBBEADC398C8EC11AD3F2BF35AA12C3ECECC50E2
C94FF18F53D9D9D3BA00A54DDC7864F6D4EECC3CDEFBBAD5F09A0C4C23D34A82
4458DECE6B48E3EC593936817B06897FD4C0CEF4A372A722A5DA219B8CC82BF9
80BAED648CB0202CE4C91938866F8D9ED05ADDF01F441FB09D95256090EA7D04
32153D5C6216D9C98678B6570CC5C5598BCDB77A5898460F646C1124E97B1F1C
FABD22EDE461AD7020870390B2CC7F91095E072AFE0C8986DBB2C85DBEC8B5E4
AA6B5FAAE52A770544EE3FB503BBD7F33249856D4CAE092FF31047538A3F39D2
B3C29B6D8492AEA2FB74CB7ABC4FA85875E6700C1F5782AEE00869A2C000C331
78426AA415B0324269D58C6362BBD0F4EFEB5227CE62AC4DA4429067C10CF5A7
1C3C156261EE11B07C087472A685CD61A19A6E6CC22B5B746D9ED46F04BB11F2
BE4CFF5E99CB932DEE2828388BEA6A27A805553E8350A7D3E2264DB2418847C1
19A3D0EF3DA044E2AC0FB2FEFB537B71026928B32C23476CB989672D240C41FD
47BB63A1583BF59D459AB74AEF32296931E797929C71BCC1D52D2F6D681EB93F
6DDFEA1FECC6AF90DD96A5938C4717853579D83BF17F0F5645DFA5102236BDC9
FA507CCEE595D5744FAE52ED1EBF21045DC09C95C944F44C33B9A46BE156DF68
7812659C138DCBB55ED169470F95C05C068FC8A3A7BD5C4DCE6FC2554E879E5C
EBF7D280D4CEBA3B0402737769F90F2C6B29944A5207A19C8FBA12BDDB0EEF1D
C580B891BBA481DB722A7E35DB374CD2C87E97401C10352EBB6CC1D646DC807E
1F913BB9B1E73CB528407DB003F06A7AD06BE1E51EAA71F9D9979942C5AA0B27
E8C40DF6EE70A9FF46BB1B1D4307ECC984ACFE4D1D2F1828A437F162EDE3B1AB
3CA6B37270E9917DD0E227463B9CB181F63E6057B148F9C04583BA02A7E4CB53
9C453E0EDA0F587A35AA8B7515AFA53FB49CF12F9633287061E76CF69CEF8272
0D6060C2314BB8B8E6121EEB510DAF0B52FE6A11692B10E0AECB4908D9296CFF
2937E09F9E9708DD91D67CCBCEE46A367FB4EB69D64579B7C007C6C18B881EE4
4A5396E649C39E17699A962AE7882BD52C3283D3506C3748B07417AF56FD2A6E
30B87B0E403E954FFE4E1C194B3D6EBCD5B918159CAB086D5FB3B7E42EEDE033
6D2EDB9B6D48AF72BD7AB9944EC609B733AB4F031CE263CCCF73951590C0C149
3151AB50605DF9F087FDD2D6FE410CD11987DA8B286B88E7050944003FD3B70B
E3B077C2EE423BDA189B90B32E39CC97AFCC5B44BB02617B4812955965333F29
D45CBE927ED51C107840B70508D44139C0ED29C53268E623A2957C88BBFC2195
2D98E586D658541C04A3ACBBEEF976880ABCD67AC6457561254076746E72DE5F
07F19A46FC109F28F2A1C2313ABF536E8D472BF0553B245859F0026F7D111F15
529BB97503D58F57E43E08B11A3E6948291CE52437A994B519D22FB2A3EC53D6
57CE71AFBBE239A67DACB8B6BB38AEA18B55CC45A7DA2886DE62EF8D69D12BA6
899E035E7FAC9B8201D931ACE5464DDA7B7121AAEDB1535CB24F54FA1C0C3A4F
A17A7280C125F9F4667173CF840D77DA01F9B65B0F3ABEABBE60CF8E452F3255
67E75E365A3F2DB6AAD7A3F8E88032451CB40D2E02A44334434EA2295593A57F
9CFF32F5BF29A9C9730D0602940B42E23CDA2BA79B2A091DC0A07C937AB53F36
ED9998315BE4D88FE0B4CD0C8CC83EF5CE2361DCDFE9B903A067DFD4824A38F8
EAEEA142EAD34C08E922FA12874929F6017F7C5B264D800C3FF28718EE2CAB1E
1BE0DC4D6A11C5D21F4BF5CDEADFAED9A8F9A70F510FE8F43FB98EF5A363F15D
8B4AC0EEA164C4BD2E60421913D5208C6F969F7D0DB332457D0EE34807C03C67
E65CC5F7A2E2F7C381173BDA39161716C6863EB9B6E4BC7F5F7B5020C784B6C1
00C18BC24B42A0C078C5A0A3B4F2510B7FDEFF1BFB86D69AC48BE8F259067390
6B50EE00AA9316A3C30824054B05F1C109284239A39917EEAA448F2EB63A59B3
531BF219E575FF1790617B01C3E2CBE9CB1AD19905B8ACF8875911590EEAD8B7
4A6AF585AE08E368090C566B1BB8EB274C7F409ACA788020AD1B21ECBD4E7C84
B64F06B2845889118F6B73B8E8885DD499437AEC7C5301D54B3F4E7A678CDA4D
CA87E2152351ECDD00E04CEC916E4CBEE0B8BF2456C325A33661C27A88051CDF
5624A670F31B79AEC46E980A70F513A6523D3F382E0C4A9DBE3B4BD01F869A6A
4E590496E674C18520FAF98EE785F7C898883144139FFC3ED778DDF5E3879446
BF060B7BF3867A877B134FCCE0DA3E5889D084184E9CC73F84310503EB95610B
EC80E024B8613C2EEDD27117850056307C4297DA370462DFB5354F3BD287EF4B
3D1C8D46EDB26C8FEA70BB95628AA2600D118F43824D1D04B88840F7D4AC7FAB
B2E83A20B238AD366DECA4FCE9CD704A615CB54D91A0884F2DC0F1E1BFEBA85E
3A6D16A6022D6958EEB2428A0F15E9AE70E2F59F2C1DFDCB861B77B90397C463
E1F12AB6D7956EF4E050E7F5707B70D7EF538F2408207B61FF20FE389F9A95F4
E8090C82A9807ED71DE2E12C894FE21155DCE91FD9F8C621DAE83FAD92AD2E79
693362D5888B3CED61A492BD3F7E563A61FCDED30564E58120DE578013A52D80
E94E77DB7FF4D4E8DD7C444C451CE8770C1799582C8547ECFB31805A83EF5DAF
9C5161F183779F0AF541B86173CDC25AA713029196436521152EF3BE591B0EF9
DD4DD55ED43DF669604B56621A5C7B23AF25822C1C270E6BD578534D27143BC9
A8C39B538C386207BB3B50DA174F453BB1C5056DB732C9175CB81DE744DBF787
C0B0B906C0D96B880C4325FD33F5472119AAD13B4AF909E104545187D5830A52
B0D37738D18C0B1AEE5978211FC8E42801A1777BCA0266B9242AC7DDCEA2BBD1
857308CA1140F9D7DB6F2ABC0AA4FF2A6F576731F5A40F20C9C7628755C80698
033AF2619D8021D63C1042DFFD306A2BF2C1396B44D8FE59AC87B16A214FF2E9
DEBA064DA0A70580B5BC973E3593B18B16FA08002CBD6AB06BCE004812DA1094
DF16BC427E90D87182632CA9D86FC59F9E8BB333DC27D1CE0C889D9318669483
A31757FDF35515D55E92B7D7F472C73B8E4F461880C4881883A92B5B96EB0F38
DDCBC76EBE08DDA0D22DB7BA08498D2567390579242CCD6BEADEFED9F2BF7771
FC3E955F73E71E0A216B2429740C95BD579E1B8FAA6BC341F1FC0E0106FB7950
9762BBE7F61CF4E748EF18C644124F4126F1B69239E2FCAE1A015F1402E25FFE
A79465F703D41C5A17A578AADDBEC483C90F94DDCFD158CE643748F459072C9F
703D5CD905D3DE267D3FC0E23596468297D7BE3AE318CCA51B3BF25BF826B9C3
7FDA436E61386B2AA3A9BFC0107B03149DB7B61F2707A3335F951018810B531D
C3A768257FF596D5B53AA40D0ABCA1D1C997A9016812ECAE00481A18E0B41572
D84F3A4B27B74A9E4F419BC02BE7BC48D739F957875B3973110554AEB0B9CCCB
1AA1F4E87F1F184FCFD400F34E69CDEA3271FDF7312C83416732871ED52A42E3
18CEDBF2FC8AFDD49DE6028E9E4D0CE9F85C44984D31D1B9979983A029717F57
43DCF1E3E5AFE217A0653C6904DB811C6616BD34CE82401B091FE730A8628FFA
ABA489F0FB22FFFE2C22D06504262F79E67F7CA45ACB131EBBE66567782713A3
340814681F35788AF23FDDAF588741B27756EECA6EA4ACCCEAFDFEDF6CEF791C
F61525A3DB48C18D1B1E196D3F3E3FB711D204EADF8B8B0A43F88B6ABB3F56A0
DBE6B13B8C7DBEBD890E71EE8FBCE816BEFEF792FC86FF930BB825420E982961
D45CAE096DDD3D99F451D2BB3C5483EF0DF322EA3682BD9ACAE73DD9A75ED4D7
9D0D42F0195957A839DD6BC64E4D5420154EB466FB44B797F9C0689CFC6FB36E
23E702B0C74876625EAED805DF25D13682F42752BE42F3D658E028B5557D60D4
F9A80BEAC37B950B6C5B440BCC174E079E3CB8B3627C1F1DA77E9538F5EB86ED
1AA8934DC7220035FCFEB65C4BB6AEE70691BE6BEADFC78B46D22D4263FE3A8E
EC4B378B7B1ED0A839200BFD0358D8D6A19694D174780C004594368E3E2D65B9
DDE752CD7E3F48BBE2998D0767B8BAD082F70FB97E9426054B2776969FA3BB99
504077B69235478245FBC4840B60318A53F40B965CDB427554779B5CF4913DAE
465365CF4E107E1A7CA3EDA2310CCEBFB19A88794CF4476D457AFAF6C7A5474E
32D8FA09D3223305B429EC82CD2A382C27AE640885340B702CAA931E07E48980
DAF8C406A6F39C4E94E65261241DFD51E5725F41F4A5360A4B1038867723EA32
15378205DF75D48640151D9F071494398324AE7EDB08BCDBB682AA1C9F96EB81
5BB3EB4ADF11170919C81067D75442CF8BA71B978DC3EDED7A6A5F2C259B6283
87F6D8574558F1EE4A901E343BE25594FD3ED3DAE32B798B5BF9ACE4B509F8BF
B9E91F3482335998B691A686FA4D9B6486974A691C7C3A820EA12732D9FB8292
B8FF8EAD15F84E06518896BA9F669F94A762F19E49B4603500CA5747FFA123D5
2634FDEADF4E4ABBFAF510B1F11EB2B8E1A1E06E4EED35F8FE3DB0EC49CB2CF6
9FF240D694605068770A577F4EEA9B8F1DB534315060938D4CC732B9092F4808
11D24A6F6BF1E9D1F0007A508E3D3D6BC6F96F69D98C5A28FE52BE07C6020D99
DDC535817AF1D42F1F3345DD8A77B84795CF693E19513DC10A843B57EC20F173
BD86C842D1C92533284987543507B6C2648CE346D68203DD2F8E2D87AC641B5C
E6A4AB7FD9E57650FE815D8BBE68FB47F4B32C5D7C190D0D290BB86E8C7C88E6
B4D94EC3B3464165EA12FADBFCC3F233EA938EB4377D9F38017EF4EFF01BE78E
F3B1A3BDD2445C5CF473493AC5EB407FF2CA4771089CA074FE47ADB878A929F3
BA012779BF37035D0B29C9CA62B9A0E1D8306CAF10B098B01B81B89C4BE5EB01
3D54CCA02E919B0516D8FF3BC17700F363CE50532F3AF97E0B5DFDF4E2BABF76
A0673E1BE0214CE02983116E19A1A66565D587D051ADA0A406BD62FA3F3B750F
FC743524DB187C22FC463AB0B0836DD0264D2BA36146429A6BB44AB413BE239D
24134FB416955CA7AE091F30F624C38C4761523B1D30A1257F15B517C455FAB5
C78008F297B02C4439A4F704F5A5A56B108E2846EA315BA7E212B2542DD5AEDB
A02DCB56CA4D2E547CED3D5A0AC8E63F227EB83DFA1C358B83F6B9879386FD57
5C75CA344EED9CBDE7D01E906C948BB1A17EEBEEA6F701C9DE6E35B475E696E3
65E9A1741A89E38D7EB81C91B20C5D6C36DB371DF27D06C00AC3E69EDF83F7E0
07EB9DDB73A06E40FFE5C3C3AC204CE4A6BDC25FED541C361306B9213049240E
783F3EA11ACCC52B4952709A2B48743667E87EE9CC03D1EF96BAD08B38F03A80
9EAA55E1061ACE77814E34B5224AE4BB49C2549DA8B9A760F1E3D1AF8712B60F
8C330514F2D62B63CB897DA5AA1AF2CB750CFA254A9768B2B305B39B6255CA54
AB86A1B9B423C70E5C65EA4F4C13E8211D90E24F55DE817DAE97F6B4FD2295DB
DC02725999759788782FDB6897F95F68F5E233D9BEEBF70B8123A943B3B3E124
E9E4124738CA6C3CFCCC5D3E4F82ABAE2136B25999C8BD671DCA294989FE7787
169A65C06F84A291CBEA1CB015261F8432D55E9D4DC26D7CA1069A88C11D5D45
743B15EC281723B80F825EF6C7F71E35FCD360C9D24AB497C11F81678934E112
8DAB29960E6B54C8790F663520BA09537E19C7CE8A736873852C22C2F346E0AC
58040D477536F571D70CAED1DD3E9A19E607D66CA03D8E47CFFC593977439C82
4737D41963DAC9E8F6E1497C2CE13B4D9CC58CE1CE3851347288A61CDCFB9F21
4BD0B0E2A8D069CD4906350E1241765AF53CE867986EF67FFF025843FDCB8B91
72E69FBD0CF8EDF3DA477D4C2A65833FABC7DDFB0EF1A01942832E081A0C72FF
D2922651780196D0F99521F54776F71915A3CD1B22756D4C0A8BE47A053242C9
DAA2A01D747E16C41052F7D61CA0137F0DA80E70D15D0BBF69BD171752BA23A0
FD95259634BBF06D324F28FF863AA2C3BEBE6155D497B82B959FA7EDA481AA1A
97B99AA653C848D13E11B7E9A7619E1DD55A8FFD96C6C46B3715CF868B70461E
682D2B1895DC17EBFC9DD986528E0F2177E45CE6BED7FA3A39C168268B899C32
9F0D01A651269E1A12F791CF64CFED3987DC401799F5CA0FADFA13A071D87AB9
7EFF6A19ADC2B9CEABF1305A3785CEF6E5F0D3DD52E2971482ED9145980371C0
B901C9575B72F899449F1B9A3897BB788FC9EA5F7388958E8BEAB2BDBE4140CD
0E78CEB955FB60C5C272F59542C9358F11C56A6FE97A0F46EC9076ADC175A1D6
3D779B491DBBFC546BEF65189A13254D591D0E798F3FDFFCDF9C18413045F76A
35F7B47802ED77EE9AE192DB5BBCE009C361BECB638D72730556C3F96FC13B86
A00257FD83D80C3E31242C7857B591BCFD50EA92BA4059AC10D14323757A49F2
BD1DE0658B07821E3EA40E37BD94FC8624800091C66E238ED6B33941D1F84233
795BAF9F172515A6185D17CB692E06B17C1F6EF0BB6F66BA610149185EA3290B
D563CD14EB96FF718912BC972CB44754E17EF838363864EBC3B81828F743AFC1
D5F90A53C7FC4F553D3E9BF7A70F88336A0EBBD4C23F9687628E45E26A542504
8E4CE869914AA1D9F0D860DC98F10A8ED431F240A04AC6C6E24BFA41DB690A49
4032B4ED8BD1294D4EA296CAABDCA9308B4A56BC6E2CFBAB3C8FDCE52A38F71D
4576D00578B48D6E616FBE656FE5580CAF99F72A4AA3D2B3B52AE5224BBC165E
A948F4A0B9476FD0A6B91CD86567409DBAC04EE0D7187B8CEA593DE15272F691
AB5E31C2E1428CCD4106D8106143F996885859C134772CB117BEDD86E8624EA8
B41679A6F04EF9D73289B1836E2E3F3694C0205246AFA42B0D09B77ABA3B8389
8B35282C708E12968B3C0320D164FCC6D1B8483A1DA84A8D028A4D551822315D
47578354532FA08DE94FBE26B6D3800FD7048F0DB614D276EFA6F02BAC677631
329F3B9077E2AE0F1D8D93FB6E2BC04E37A043B20A391F6E1881FD1EB7A8743A
EC5035809934F97AC80F79B2A203EF5977B7ED59E12050A888D434A4A8EDF7C0
75386242DB2233B50B98E0DD257E95DBF2D27C7D1FC65C70714616BC24B0111C
8B0BB1513402232EA4A3A45EBAB0A36096394DB636198079D822DC8944BE3D68
C6EB9007766EBE3BA2FB821860BCD230B6BE99C6F9767697C1F9A4B1A2E19872
970FD44217B4F8608CD58ACA781A36CA7FA185003DE8EA59D31CCBE83FA020BC
979F977E532FBAD51B5398150099EE5C42EFE6B290387739CB4BC94B723EC1E7
39D68413E17F5C74B6B651AEE2BECDB1C57E6B4908C172BC32589E55CA31FFD2
58427CE1C77147953A2F8786F9FC30C5C43DAF75BFDF057CD5C47A921E18DAE3
F72A11A7D849F9C1382D7C5E1792DA348803B97BBD802468EC32362D99B33B30
497B8B892CB3267D28A0C175462DBFA2A8E2C35B2B0E83A78A151A33D8F89906
E1DA407C59494524735023A9F3C687C91F0257C66AF2EDA8C175D5214F18BEDD
93761C09D4E3A85F7DFB486C097A092786ADA00D6D769ED83A3AA1A335D3160F
377932CB58E4FF1F690872F91DEBF4B0B488B07C9CB01EEAAAEEA66176A999D5
829A6640EA4E9B7294DC8DF3C88DA30F3A1F4026346819FCE84AB19B6DC36A6E
5D8F20A4B9C000F6382FCDA9C77E2759C08325BB6A68D7379AA05F99A710393A
5A1AF656B4BA0E5BBBCF90061BF9044C6D2A9BAE6FB470C4DB640663805D929F
FD13EFF04E5D5999ECE556E8C2B66ED137090FBA8706D7D1BC3CE4D6DE5FECEC
ACB12F5C4FFADF0D972504322C1230F66D1EC7CC5015F5766AD54FBA921794F1
CBA948908FADCEDC9CDC63D97B61820A0E4F7D3B1A5A7AE4B47816A6E8550F8B
39CA9569442765546ADA7BE348681CF88CE44202CC472A2916A196EDA533297B
F94D6798952391040ED1A79D62B0485C0F6040F0312846DAC9D378D675BE334C
C760A9B99DC004DD7AB5B1DA2FD782DC2562ECAE54DD3C18B7F0BAF48E8034D4
332314A3756B9B6906B724B32B822BAB593D98906AFEF0268A243BB605754549
5F56A3BDED8920A21E23DBD8796ECF0C5DB48CB660C82FC9602EED8D71EEFAFE
CCE74A0C88733E89F1B8C7028E27D1B8362FBDE1442055C8F0DED19B14899C54
29ABD73964E6A518E0287A8CF336DE9C13CEB86F8BCA7C60C2EF5D8B76D5B898
AF78974CAE1B59369944D20E9EC444EF3543FFEED9A981A97DA3D58B424AAA7C
EFDD129175F45AF610D16EEE29FBD8CDFD120E82AB6F54585177956A88EA53AE
05ACB07E1F27E9BC0C1C04FAD9A8A5659D6DA2C1F55038CD5259F1FD296AD41A
CA6A78A10B13D9403BB5364697134DA7D67809CA06C80CBF95663AD5E0832947
96A83E5F0ABA94EE979B8043296BD93AF263966FAFA02C7CBA4441A0E99E1E84
24EEF9F56F5E6ABBF70A0B46FC0A8A8098FC5D3E680F7B371F69FD970E1F82C2
659A9F7B7AA2783F1C971FA09BFAC12B87C4EF0D0306A165300BB36BDBE7C4C9
1BE791647638FF731F3EB9FD54CC9389B4A03DBB15DDA29489F2FC655DE931A5
72B0C07D60080CCA736F9D9023473B50C2AC895F8247707F16524BD0E73E6CE8
9079D127A65AF27E4CDFE1A611B6C4D9A4C25B9B1C730FBA9F3C199BEEE517D9
0C3B34C38622A44CE6B1783CD4880385A94F2628CFC5045FF397570BBC92186B
7796B439025771F5BDB495EFF99DE8F2C8A7886A4A3AD3D8D63C29300B53375B
F84E4EA15A8B15E7A196D2AD15D691A7AB015CF7310AF86E9433DA717F20C401
59C82ED8C45BE976FBF7A1EE65D14EB04BEEC539E2AB363C6C75E3894818D111
298065731B99373B712C9CBB8F35B90E51F076514E1EE148B3DF995A7290FBCA
73F3E6BD2A9AB6C859009288EDF5B13E71D4690BA197E0E3D92628EAB39DF33F
4DF7A558BBF0ED89D1D10DAE8E182834FACC50D549CC5AA2096E547140AAD6D5
FD7FBFAAD9BC28DE1D4B4698F94CE0664F14A4838410B7BFBFE20F99DDF469DE
94F202FACBFDDB2CD4CB4BC0B78732E4103BC8BDBADCF274D9B1C9F1DEBEFC00
DC1DBCA09BBF5B2A7B21164292A62CDA1564CF0AA861D524909BD30D049EF32B
2A2D50DAE7EB7BC7750C2A1D441C679D59F3D4CA7153AD26DE13EAC7918D1439
C2AD69DF1D093702CF39ED8D228F2D9AE02BEEA95FB91FAB0DD3D5C4D4A9F0D4
43ACD6313CC153DF4D9C809677EBD286DC3EA2D9B8D3FA1C0A4AE55809DE94F4
255358E7208F387EB1AF1B25AA5748EB11CD1C6A36F8CA0EB70C7CF4E3099CF7
A08AFA583AF1523A9711FAE17BD7E6E6841F96CF3CBEEA22B64D69347BAD94AC
00F208A7553E71D7AD1CCF54F98D350561BB0C3CD2212729FF01DE061E816BC5
4FCECA6AEC42602316551470007D52073F5C02305E8276807B4EE6A21088AFB2
558A4F663E74169469F7D8F4E7260DA32FF4B8CBEE93301E056916A43C518EE9
7ED355DB2CE99768F6944DAD099ACB71AD7024F86570C6869C725DAE908A650F
F1F1C0D1DF7902005BB170E5B471D740F2EEB8E9E88FCF972909406F4C02F160
48F09833FABD32F5206FF248C5E514F63613DDEF726EA33493160841D3970E93
547863896D9DFB1F4867434727434DA276CC1DC7D71296C01164AC5F930D0DF7
1FC2965B9B8EAB22E5E377FB757AD2D4971F6E397E6F2AEE586ECFE329CD6970
155411EB0B48EF2E1459ECEAEA896D921339B43494AF80645E7D1D954E9C7CE5
F6AFD2DEA45AB494D5E4B590D64B9ABCC61AEF486A81B48E939C35C80068E8B4
2B14E7EC6845C3C71871D24BD7C87C4660D03BCFFF95B645E1BAC01E2E4813C7
EBECAABDB87E8F0E28D01793305967C4E34B67C41DB4597332F2466DB2801472
0E5083831F5FAC5441773947014389903E0D32456DEF35F1A400D1C0A8DC3082
D35617B5B3396DB2D56C3AEEFFE92ACB8B9FB6893F42FECE87E5D7008163F43A
216E3A61D403F2AE845AFAD91C470CDAA16722536019B595603B3B0F7248541C
BD996EF16D30291FB5E564EC4836D41400A23AF0DDD542A831B967704BBC66EE
4831E4541450F290351F3E9F6AAE0CDA18F2E22936EE50B7529F402C75BCE152
161B1A70D1D5DDD19C54B0E3E27E24892237D9F5C06C1070BEB3BE91B3151939
F683E443A7772AC6B8D973EEF5030006730B9902CBA1388751DBFC57304CD10F
7E7125D5287B8A43AD0B4F77744EA4C40C6034D95537C76FCE38AD88AF003076
188E75E0F0A021A3C270E432AB60A55263271D674C6DAEBA05F7CF771250F146
4DCFC984E3EEB0D57BEEB14DCC63C34D66460FB0F7CE73FFED165A2A667BDA10
265250BF9D91AFE3A15C1E387FE85249CC402A929DDDC61A34C57EB89955AE00
1B592654B629571F2055BF664011FEC993F530AB582463F66EA5D97D7CA5B6D3
C8789B5E5B4EEF71580AB9CAF1A20A9AD3057F47984C85E5B5A6A836E53A9C78
7BB72C3B933760D34993FC26057C93C9234AAAE7D3B6E3309559202764B41B57
AB64C4A06EA2A92428E9592441B18466FFB4859C258250AE5F36A79D7A6E484E
3916FD3867A1600E1B47DD6003945F2516D27B53EA685F6992415FF650176110
A3108AE81EA4A59414BD0BE9EC29D9F9B0F1A947343CF94A394531B0F1C7ACBB
747D4FF18D65716FFD1A30FCE5E4EC65FFAB4B3A41B9EC761B0F7E001722D0F4
352094587FBF51FD7CD5D857B647017B252A75D547A982D1770956A68604D7B6
5F1C4DF9AA88E5364E49C6CAE727229AD0E0ABC13EBB88C7437E0E94D383FEE2
CBE956606389B6B8A958720D8222EF1B6CFCFCCCD168DDFC802EE8B51AE9A009
8E96FD3DF23E37243132D584E5F46946FFE76218D9BA5BCC8DB61E6FA85A9C2B
EE950AC429AB8DB78B17386DE64BD03B3FD57A61D4B1708134E48A308952EB80
99334D2D4D608CDCE4DB49C7C06D7A9D41F51CB92B39301A4A9B9AE2C27EF1D1
54D5C89E7C8F6DB45E9275F4818EF4E9ABF95DF24FAE8B5365C124F4C56CA436
13686DC8860774296F2D3E935173F92289F6B51D96DC3CEDB3B1DEA1CBC1137B
8B69663FDA325C03FF310E65A8340337D2383042DFC2A33D9087B5180BC293D5
19BDA0F45AE9077E3F0ACEE8A91802EE806F98594A7A8088EDA69D5262F6386B
44B0CFAB57B20F5F441E1B5C88C456F68E338266D70CB251FA5C68C7FF46108F
158F0BDF840E4E567D2685078119205F8D0892897D1736AF4D3D41206379A863
677DCE2407FC788A1E9421E5A623B9C7474D6658BFB2C6F7F9606256221DC6B4
026F33D131AC9591B6630E91CE7987D1339A307F22414644085D99A5A265E519
9DBC3A300D36DAC4178D71EBB021E79E17530DF49FDA9B6F02983B12E278D1EC
06EABD768913521473DA186F8B46F4D81254EA0E6C1135619C1DA237FE241CD2
AB9DE0051BB9A125B068E9B8FFFF9841C7D7555561EDAC2C13AB9D519A3E0BC3
09D608A8FB986BC19094FC22D2B2E55D5BA1302A0BD9509ABEEAA932EA714A5F
2B0AA606C66D4488A64BAB2AEC5092AF1B56936EA0B011AE54022E5030D63514
51C1989280DF7108A590C4C05114E1C60766060CEFE3FE6952667E509DC787E8
C4B3C1BC8B7C51BDAD34CDA021C093D6722B730C76CD32DCC11BED6B68364A10
A21D919A00CC5049FF363C59FCBB17B7D19241A0BF5C569473DF2794264CBC6D
809F8C1BA8C8F7944841E5A2F473A7FB093ADB1DD03E789CE8D256902AFD5A79
FCB8F3F8FA5CE642A731E2956D4F7DEA6FF9A538A41BADEEE17A5B495B748FD5
1835A1D4A12AA52AA07ABBBB07E455BFABC18FA093F33180F6A7741082D9F618
E70F02BC37A2761B10E83CCE534E8D540B37F5A2DE3D94424FF20AC9653C68C7
A7DDEC492E6932122368098DA387FBBB78DE9D065083BECB05F6F46D68402DB8
84B1340AF8A6794CABE86665199C56BF0EF861B73DF8BD353393DC840877DE6B
EC111C3F0122D6A3330899E7364B73BB55E9EA795D3F71F9C92D55826D7AA564
E97FAA8EAFD23B8CA53F5516A2E3F1175DF21016B3D73EC12A010BE3B2E862BA
75B61EB091E726715C61380A38DD88749758C231801A634A1AFC87A431235C50
B210A210161C138E09416C715DA2E6EBD9BF316DD1E154EE14A52E72AD3B2BA4
1A93D2FB47AEA4CDD2F141575A5BC04B567BAF2A65878843FA01E21EAD0D0193
8E437DCB5D30586C465802702D1CA447CC1473D0B67DCA4FB06E3D3D4A1467E6
0D27310918CD2B7D5301B9FB2C443437152CDE7807EAE89A69B88B638FD07206
8B01E4559A9C3DD8F666EB818E1EFE0712CD99C54FCA5FEB6976C766E28491F0
AD3764B8F823BFA3E4EDFA0C90828303B152D8E33463E6C937ED5AA352C77FD1
343C6B28E9D8A847D3255903A7D836BA02820546025961C1D5AB56A83E17BB02
AD64C251A2A704C855F0D16F4FE0795D8CFAFDE73A5F52E479DE00F9F7BD4FFF
738BAB40D2C7D88EB697E283439EE7390812A238A40A7CA89690B275C6DADCFC
2587494DBAA161DDABA81ABC93C0C7CAC6579E6D5C0ECFD8E95EDB0C911CAB02
23CEE73313455D19B0F0C271BD1B124C8D80AC27947B7F08FFFA0776D27E2212
DF57166DC4E8F5944C04C786A327061AA2FA47C6C2C145483460707EFAF9DD09
8957CBFEBED4071A4122183E15D0B2182B06BF4ECD66FB183DEB7A51BC262AF2
176D6257DDCFB28CB76FFD4EA743902B07426F2C8BA305BFECEA845130CF6F68
7D2C867FAE946D5545F920CC2FA6F9EE2EC4F18D11479D9512703E56215D28D1
BA7A506E5C108C3C11F1C266D66973E972F30291BC6D3AEEC40BF3BCEAAD4A6F
2C20D5050219F1EC14AC33396CC2BF2405707C02BD1263477A6056F506ED1124
5A74461001B42E07C3412C496A40BA2E82BF2324AC98556433149F1706AA2718
2F26D33B62E2AAB6A3116813BAECC31903DEEA1B01CD13CE7D26491CEE9C9110
68E90367FEBEEF15230DA526EC71EE1B608F61D5B751A9BB13268B2EB0376395
B72AE08A0D3982862E9C78C5800F816915CAE19740EB702964406FF3E1619AFC
488983CF1F89A0BD6F07498B88ED312B6949E48CE7F996307570B182E1F024E7
7689C02654969DEBE07CACA614F45917B13A0C4D375142FA5C1DF10510C57FF8
C62942668796F6CE22826AFB731D41B45EBD12EB9966EB458AFEA0DF3947DF90
79766C1A7B7E264255829E1D32EEB6AD0CA45B7FBC7040B3E9FCA6CEC40401A8
95E672B5C3183A262D65139D46E6ECB10A398D41218ED77E11760C808ED908C8
EAF5B140BAF7CAABE23DCB841A23C6B4001AC0254394C05C61C43BA5832E3501
0FE93DCA6B68A2F78A9255BF66A99EB0D24F72ACDA2BCCAD62DA9A3C8093FCB2
76D78CA1E607EE0A079B93FF70CBFE8545AF0519415484ABA37DE59D68D8BD55
5CE2E0F5D858BD03DEECFF3493955CE1FCA87A9C2A3E3FB89B69BACB941BC04C
E6CA3602C18A90E495B7A3E777C82C3047CE660D98F44524D7CAA7E043490E9E
E346E115CD43CA8CC9A81AF2AD963E4D4E3E1C9B27B9775133D77CBEB277C644
C578449F8D6105D8DD186512CB668FDDE1E1643BCF11E38D7C31718578DA007A
B9EE7B017B268270E2FB88697C8FC2D5520DC785314FFBA7078F1810CD7F10D8
53F0C48FEFBA3D1B24D2695C50D44CD9855281F637E200549A96B11B861A035B
474CAAE6F775BEF0A61F355D2E480F429D790D999B5D26B2C08146F349023F96
2BBFCE5E6CB8DB50FC6B5E4D66194D4B97D0C485FA5BC0AFFBFDB3146AA86247
6DE783B5B36D06A0BE2876D72B50B49569CAB0BDC022EF89A5C60E45E4E4EB7F
E6B35C0FD6B417D7C337833DD53BD9E2D63A6D64B4282B6452A9CE5A1AB398B9
4A0511D81255C9A0A95F056615C8952ED255BD9BF5263586B08A5CC8DD37AB60
005A2F1215491B59C8245E8DCF687EF28543DDCD71DE9FCD5B635DF3D6C67ECA
0EF8EDC150172E00677BEDE41F159D40F7C84BFB52190C4E0D8BA2E3B2B83983
8BB87C8410C5BCC253665C9960A92C6EEB00ADB83F6809E1D7CC54D60537558C
05CFE19A29306E0FD1C5265815E246DC562228B32292A7CD72E8BE31694DD63C
F79182A15CABA2A2D39CC6895F9F318549259B1C9918750B2A3328238422C3AF
05D4E7D016B6E05233AFEFBE289DEE33B67E74B925E93F57F0BF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 70 /F put
dup 73 /I put
dup 77 /M put
dup 81 /Q put
dup 85 /U put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158DCD1C1BC03B83FF94C60B1DC71CE8A86B46DBE661C9F8F4677F8A2C7CF1
E41A91EBDA2304735147BE66CDFF2673F09D408297302124C127F0B35690CAE9
CE1679120CC4D582FB69550AD34A047DDFCD9D411724554CCED753DB52D6AA7B
22B0C55EB698ADDBB0F8ED15C971AEF113C74B9E25DA29199237B98DA4023665
C2A63A837E4CAB38F8DF37DBAB5DC80C0AB25B56BCA5D899F1575E61ADF75676
F48EE26C054AD9A75FD88A3E17498AC26FD4DC8000A125D6DD423540B8A98779
B28CE97C9CAFAC45693FF43249E4B559E7F19FB349F94B60AAAAF05B5FBF244E
982B4B51D997DA5811CD43E1917DA885DD96133A5CE1A290DBBFD88AF285A879
D3136C41C839FD2276760A7B4F21F4026AADCDAB3F113FCCCA9588C7FB72643E
AB8F6D8AEAD1DC3DCA6E436B3DF24E7DC6AD37137B49327871EA80F3B8AEE932
D20D9A5B4779DFFAD7B3E5D447023D6433575F8F5AF589D7E094DA3786555D0C
046A427ADF128E00AC7B458D5A131A130D6F49A7ABF47833791F172D69FE6393
EAE0E90E7FF7BC2333D4E0215D5201E4B209591782F8A664335F67B9DDE36DBA
793EC77E5EB405862D14EAB6A99218B3F66F11EA2F345629C402BD8FD9CA0AC8
FB5A2E119DAA9F80083C9BC54F4586C44320993CB5D9CBDC8F8522001F82A16C
E307F175B794F4426E5D273581A6D2844444D82093FB03482B270D693391DEA7
CB26D4A418E48A2989167B7DCE251F0D53D5C9B29D359A568FEDB965DF31CBF3
900392FE739A2B43BFA2363CA74FA72668FC761D1A17B9C0B56D6172499CDDCC
90EA538A5526FD5AFF81D04BFEA703E5DA963B11042723106704021C1B90557C
B7AA96E076842E2C5F929FDA6D05E0B91B5548006EB4A6EB262077411083C2EE
D51D0D237A85D6480DA41A9D8DC24EAEC0C849E0D53D9FE1E54ECD82C957B8B9
ED68D7B29A43F369C28272083B7B4E700546D293DEDD4A99CC2F0BD0358E73D5
00D9A5CF19043C6D10E57C77C60697ED7FE698988CA7362221E3430AF0C9FE88
0DBA07B832A01384198E068B9B5C062C6CE40C05DCBA60B400B92DF30A2BC7B0
6C5679A64DB5E01ED4F570E02343F42C7AE268DFE56E10583707791F81EC1E31
7C38738BD6A91FDF9E1CC278145AA01E7F11989AFE00F0148664D6B446A8E4F9
B88C747FE8D3A668ECC0CC7A3DAAA2650AFF078F3F5D67D9ACBABB7CBCB88B7D
3C2AF94919F4B9EA6669666A2E0C1951B40E725D99A55B6543C2AFACBAFD2D9D
AAF0AFF6D8058371D5B7758A43F98F4DC4792308CDFE2779CA6D4B2493201FDE
2D2E1EA7349E324829A88CD39230CB704CF55C88A384578D427F6A7F96140C43
040D8CDCB54BF299F59281F5D884990D12A8623AA85139D5850352AE19A7CFD1
304ED1F6623E816759FB07322FEC679D5301FAF2F3A859772B6C2FB2FBCDB3F5
36F6EBDCEF76E071987A2E1E865AC53337A2B71B1A778154E509810D2B7593FF
82245B574C006312B75EC8CBD27A9535FDD857AD22CAC9501CA38F000F6CB7A8
3613183EC59E20DE7FF216EFE58F67669D0F2F88C3793A49AA271DDEC0F7D5FD
10CF36A97B3A6255005B498C743688DC8A4F5F1CF7D7877FAFDEC945EC195186
41404C817414D0579308612AD113219204CA439EB063939AEFC3033B88B33AB6
7C5499D2A60B5321A5CEE11E936A61EA31ACA64FA46DBF03CCAB754A76FB3295
6D729E9026B048BF61FA390F64979D77A4C7C9FD30974301B03EADCF20921974
6A94A779EE401A870CF6CB86871B8015310B7CCD19092E38926AF357735CD024
D45A9A51D740B3A96E7AB386AB4E11543509A15F2E06AC34A1963C88484F6200
033392BBDB3D0F4A1595CEEB754055F97A776BE144ED61E45E483B01391504C0
BCA3338ADA5587B19AE9DDD54C3856B0C7F9E488C409BC09A2FD62C42F0051A6
2F6B19E07F599290E1D54478C06F58144992CFD7A726E5853FD36F77921618B8
4A9EA4B7C4250D431C0CABD2F6ED221CEDBC36A5BBF674A6D08D44E50F0E736B
B7657CF2A4F91DD6CB23306030744F3CBD72A3F25B6139EF0F83D58EDB7EDAC3
E7B309A33509D2A2FD2D948114EEADFD750413A051DB8558F2E61C3901A60EB9
82EABB944C3726E1D08939C98BB33BA9F778D8802781AD3E53AFC25A5D8916D4
91301D6F8F10147486A61733A9B2368C0EB4D3D2FE3E2B04F2CA53DD6A5CBCFD
4C33387FB09BA23BA935CCA30ED45A24FC3DE5EAFB7284BD34D039C82AF294F4
4621374D9EB519860FD89192A442D94ED07F5F98396D0ED789D7C65B696A7CFB
C509D7468674601474DEE2140809854ECFAC5734B9C97B00E9AD88DBCD9CA636
754F3C225CC77E8AC9953A3578C13D4C2E29D98AE7877BF182F2EED8E082699C
A492D19E1B10F4E9CDAD078B3E0E5E889447206EA72127D82576A2CB8C213B4F
B482525BD472D60840A71D8CA231883E95575A8B730A57721EE9D678A759A85F
77BB9FCADE34330BA317B27B4E249F1A8C5DABF4E62D76AB880E5F0AFAB2498F
E1D79954BD53619CA37601F80AFFC57D97601280566D93EDB3776748198CE6A6
F78E439BFA59B74C19F6098ABC5B7AA9E39FD27DCD1AC8D125FC737B5ACE4B08
231102E217DCC01F885DB1F37A43352667CAD3C09C6F603744218C45505AC95B
16F37CDCCBD16F8122A624D8D71A372ABEFDEF19D1BFB8391B8AC5B93984C5F9
BE48A7C1CEA96610D95AF6BFA7F2CCDDE2B125F5E5D26F7C27B21A7B06BBD319
026C514AE2BFD687F8117DA7408FD0D154340F46D0F308B7D1982AA68D1BC452
B617A5E928FAE1111C8E0CE934ABD73714AA3532EB8B2C75F492D163BA1FA753
C14253089649C90F8B5A69A3E032167058311E50DD786F2C962F1D4B2B90181B
4459855B8FBF85257C42A6ED10B3B7A3F9FDC54F38D882DDE8DE6CB8BA50972E
534935577E9C5003EB4ED9832582F5515AF13D970F120E82187082675F9141E7
E8105F520330D0FDB1C61ACD5727B2A51C2974914936DCC7356EBE4EBCAE4B08
32101891DB6E1C7AC7D51D070780EF90AC2F0E220E400E7F38B995AD9E8983EF
183A562D7A8C97E96488653627FFA758080666D4FCD71C9DA1A776EE24A4CBB9
A0A693BC35FDAF30EA27983A25D956F3F545D5FC78AE8132EA5DEBFAADAC6AC4
306F13059F0E2D4CC01A749D635EC466C6E96F276FC34D28F9D59711965F402E
3F79DA88E169976F33E60C1763AEB4A4FF62AF6354EFDC17A754EC2181B45FC7
17D9AC587ACFC9FA27561C940347C2DEF2E55247E10D43546BF6E321D2D48675
2659C90B8BF4B87D58F4F7247675B2391F4610A58C8A18DB8D53DB1546DA4EFC
75CB69B897C9EA83852D31F31DB5DD57E6124A5A6B8B8F1919AC1530F33C92C3
07493074B784793FC5E716A2E6CD8E44F9E73598264523AABF967C4B30B38F39
870841FDD91E749CCFEDF6E48B9AB9CCB47B682220859C957D0B8DD0236AFBCC
F1DE775F64FD232924D7331FB56520C1B376D947CE976521F7A0B2705CB5581D
00E96C51916902C2CD37D254925C8492A676F6B63980950447A0F1E5754C8509
A44A408194353A73D58E53181E7E0696933F9F1F25B35E1AAF97FF66D8743A8F
1585D6034F3FFB7433CD34C2E33FEEB9D199B7EA15C90E2FE9F89B33FB0DB7AA
9D0BBD68CD028F44347CDA0C2EBA0A73537E9791F1D91099A994B6F684CB308A
D7FF6297A5D73CFF3B0276C3055F99E115F207B7AC6ABDD62AEFC4686A1919D8
5216E28CD90267CFA35E9A1101427494A4EA2CE008805EABCCB2685FDCEB8BC7
63488F4E04FB13CB6416AB19C3471FCDAAAE3A5578466D7440ABA02D9D4F91CB
A5AB74AEE5A6D64AA4A5ACD54D5CA386B4B3DE1DC411E2F23AC40FC0703C270B
50055E2BF1CA662527372999ABB2EF02B55510749E03BCA4BC9E51261E1E364C
916993B850FFB5B96CBC35F8126F0A5011722862FD29793E5D3AAA25A7D48C7E
4A3805BDE15D8517F5EDAD5CF7E4FE1358D01E85178BEC123C1FC5B34CA3C6D9
73378141C0D5E654B4C1DA48BA61C721A32B0588C26E29B7663B647D28631D9C
D161E469D1C5DF8B7364B4ED64CD18471A496139091F443677685C051E91FC84
85205054C33CE3067BE80898D2E5FB81A0FC31C9828CF2AC805C61469B5935E9
5023C38452B7DD0D4685D3004D393780D45DFA4514879A46DFB419239EF3E0A5
98D872F8FA3941E1F133529C8282FD8FF32C3AA5F3A4C8BC8B99C89B09718F85
26D60B33A817C5D56E65E35D16280A1DC2AC8B579744B0394F3EC7C2DA9C6EA4
15401A786D548C49E14C5F2A728AF040D9C7663C31A15C0646D729CF49A29030
D2805FB92697F373DA5F64FC59C7C7D9CA8186B71F7C6B45091AF3430D150656
39AA81B250F06C00A09C650D2A736CFC319A96CD3BCD1289578BE98C248F73C8
B7BF94258BCCB213FB9F0FAA887399B60B6E32681F4819BE5BB05A57C9B9831C
592D58BB3C8A1F210F9939EAB82F6AEE9B2754F5605824F6AB14A53E19984D86
93829365043A2A6B1A25784FCEF841F4DA3C4646852870D89C85F9ED426303DF
5F0D34442D7CD6E28CBC41863E5BCF6F325367AC0B566A9AF87AEAB0B2E0A7A1
B6338E37DE147617C870F1E34513CEDF21CDA1AD968F850830988525669CC68E
08389585B9DF7E99BD44EFE39D3757E08ACE3E92F0C4CB0A414395E20E24858E
D1A87151835AE5A720C445F3384485B8A78D8E112DB17B12854F034DAAB31F3D
9D9283D6DA4149F43B6A5F130C53D42BF4F8239CBC64980494A83FAD890E4469
62AB23C399FC3DEC552CFA06AE19BF7018230B54B6452264412ABCFB5181579A
D6F4A4602EFB5BF94E115BE226C15FCA728EB2397BCD26767090D22864625158
8CB1F08C01293FDF862E6ED99654120E72E2D57F3463562493C3878B2E6423E1
9180A4A40BE93B1F1DC900AC0A69CB02602EFBAF8827059AB8B6D3830AEC3F7F
3119A89150F2A86812C45FE1F7632D34F95570A21BC2EBB85A5162E600525372
BDE229F17C061C926DDD0ECE6E8BCBECDAEBE72DD9E7C27B4B22604F93EED252
BA22A66EA78DEEFD0D710236D8C47FB3AA01E3DFE7CC5AE890EC5518B5D9EF9E
05BC7B578EB92ED4F2939DC3E6944BBDB04F26E355EC5A8CD29CFAE02AAF8651
C7B134DD266A73999233F08F8D33FCC84573985DCF55ADFC90350EFC42DA444D
ECC237A2187BB1E55CF3DE57D294D25FDE2F335DA252290285BD5BB83CA4B3F7
364117451D880DACA8543E2D6A27B1208FED3799E0E87BB85AE6DF4AD51ABC5D
0740320962568639F40366AAF79AB6AE29E8B2775D4A1F53CAB47C9623AE3BDA
D46BB328C1105C5387C0377EF37DEE314C65186CFF8CAA9AAE533F7E6E607A51
53C4150B04DA8DD7485BEBB017D9E677C703AF98F9361950B8D76FC8DB81D443
899E372601892E6258E07A1D9B26910B2734FBE49E53485E62F586EE83116FF4
6BFD140D9321FB423D608FF37988C7DE6AF8A82A27589220BCF9D6001A67DE98
9E65F3E62AA2E6BC4EA4736EE6B2C96CE3E4CF1D00A67B8F360BCA4B5DDFABEC
E9ADDCB99CB8F365707FD1982B6AC03569C73FFC3C71DD3258E1A5666C3D1A9B
BD3C3BC2BA1E4D3BFD70AB4DAEF06299B4BD07139DC3E5738F1B9DE43FB8FE95
00A5D7C84B9298D9F82D9AC6C2975C5EB2045A3940C3BA0147BAA45469372BCE
64C8ADC27CFC2BD3CC2FCA415D0CAC7AA0A9BA320920BA9ECE44F0C19227C617
9F8CFAAAE97E5752BF254A6B2BC0ABFBA101627014CC711484A57CC7BDAEBC66
9BE28BC93D35CE7AD674FE98C02F95B59CED7D8B94EAF88686CDF7F2B68EBBA6
EF4F3CBA35AB0C1D9FF8B9D816E57A4CB298DD8C1EE101433560F835FBC7944D
E38EC7753CF382C8747759D64EC0ADA5D818FB7D33591730351D74405DEF3919
A06177CA9C16210DDEE1B337939AA8BF15DFA21A5088AD43E265308B36A80738
0D2FA7CFC59D8970F4022353B71B1189766D22C91352AFB248B617CEF38FC4DC
84F2887C97EE06942C93462070621CF18D59FC819F1C53AAFEB88DAB1F7B9506
3053C2184E4A9A5E1EF8E79B35455D0A09607C42128F2F5AF790AA225BB3F7E2
379B88E3331FF25A6E823A4EF3116BDAFCC450380F3934ED366E469CA5691562
0EB49648E0198ED28E3DE56FAB35771F044D037BCB97B64A324183A16EA03B54
82B7FDA8FDDB1A27212349BEBD903CFB3265CB090C1B356B4EC5BDFE8CD57ECC
58742DB90A930A87C6B16F7BD40EF34EC9D7EF691968C4882C0D85ADD3546F18
F784131FBE002A12C582194FE0C112DDC67193A1C73EF5AC58B744F871164FAE
195E94A1CED69C5D8669E0E9FB442653F55AC77FAD42B0D5F7F45F7FE4193237
92274691705020A34BAF68CD1B9E4C86BE259810CD013FE4D8F6A267C19499EB
0A2FF7DCF3A287C17CDBC0C6D9E9BA4A94A3656601A024E1C5D9514006809813
80A1BBF5961E596FB407C5CB3825AADDF14FC89F0828C4F99F4322F5D8D87079
B937C9CC4B29F097361A11BDAF94FEFB54C323838467F99A87CABC598C0DD11D
C695FCA68F530367FF8E0F7C04E143DDCB2586FE9A04CC5FDB7AF33858D5EDF4
3EF77BCD1A5B05DE8C2B085E226F24107805B600D42ECD0869F2B9797E4FE6BE
D682DED3A46B14CCEE2693DB2403DE68B363D34C5B804AC3AD736A9799D79009
0E68CDFFD8ED8F427E8C13CF7201E6E43CB15A4FAD891DB8A84EA63EEF90EB19
5C869E7FA40D73E73627427A2AD858311C06B9552B827A1BF1E3BEEE1949C7A3
8287AFEC3059DABCF03AC09D2B50E21EF71337CE0DEB29B8129B1A9BBA4C5EA0
95D9A18EC7DA5093B06E90F5F0381725593D6F3F007E82D73F15FBE1CFC043E0
35A1447A089EB2E38BF36320B72CED4562147AC9D2EEB295A014830F60CA6D71
19DC98135487F51166F65BEBC41392AD3B766F027B50A7C7994304DD94C46B82
D6A218A4A90C49D2F0FBF59D48D2E43857773C482B401D42DF4E03AFBC85D988
4D6EF6FD728472266519C095CBA515E9D3514B5B6C15A45FFE25F1A8EE4B7DA9
DFAA157D2569CF912A5CFDD4D225D9B0C2DA7594E292DFAA10CDD4537D15FE6E
D790B0795699D166EA6CD3FBBD479DDC6C9764122002D33AA5E93BA088899C48
FA87211F8529055DA9CABBBE22CB3BAB38FF58EFBE01B79E3758DB54F72E2DE8
9797721A097FD8712DB598528403139143E9A504DFEDE39E8773FDB6255198F1
0326022825C43DBE1EF620B193B31E37C0B08BF6B0A06C4ABD9E370B398DE296
FEA042C68543864ECDC0938A458C2ED96B3BF8D006F0CE37F595E915B765BC9A
AB7710A1FFC3ACB244E4A3F030E1F851BF172C5577207F27966DD673892D4079
B5FB0D28629C1ECC04BF2BC3F196E981D591B0B78C3681B4F9B55B5D3B571834
95B83BAC241A90338ED93FB4ED409D9A4693E79FE6D6622BB8E08508A541C36A
29241184AC86BEAC9A1516A8F3C4010CABC456E3E9B3374F83487F046C82E2E7
B8C3E3002BA21E720AA730B5D19E7768C01D487BEB68A111484AD044CB21DD02
C597AA3BAFA6C0B238C8995B20D39061C353DC2E216A7B9C23D14A0B49DEDFA9
B1E1BC3D0A4158BAEE8C058290B1B2147817D226F1813B30B4000749A56A4BAB
544C6FFD8F287D55B6752B40CA05449CEB6CB8A36CAC84BE638568A911FBF44C
6F6CF820A6D33DCAF75F88DE948B02E85FEC67E5037E5BE43E52EA6B345694C9
CF988867412F1D615469F1946FF0CFE01928ECAD924C3914531FAE882DF6A3B6
681C63BC462ED064AFB7F3B1C2F62D9EC33E18E0878E45511B21181C12998774
4AC84241047BB43BA577585404CA7A47387AECDFA9B4B7B5E57728410EFE1735
B14461EEB2056210BAE0FDCD3ECF07F74234B6890ED4A0E4BED4752DDCDD78EC
77FF6983786D39F63E9FC3A69C9F95C3DBA5BFC49BA81FB830309C4A3E91AEB6
B3D26C3BE813EFE02850D9364ED8C34B1EF95FA5E6F02933430F637A0D3CA742
46850B65E549CA87C00A8CC9C3AC55C48749EE4F2C14945FED8DAE9AA6205B76
D3FCDE807E289C8A2DE401BE5A226858EC74DF789624D1474BB2A29E704BE651
A8701254D33BC411C0D41E9D4AF8B356C07C7E7481EB7EEDE6AF8FB297815DF9
50AB167B54E408D032C4E96971E635B653B074216A6E5A0DA2E61A68E14DB3B4
3BACD616A5A1C31463C0D09D5907DDD800CE1E31C0C6C04C8A5784F4061095F7
21C788E82CC30EE2BD199FCB719B74861A58C9D502AF5B87D9597E64FB99EF57
535CB54B8E6D622216761B63826FE5D4AE407140C84A6D0753CC6BE1AD5A396B
09914F2299AC534C9DC8D532BA4BC8BC789AFD6A9182A687B43DF9A66DA35208
71717816425CB600C4120B07BECCD207E0D34276D23FFEB464872CC2295A38BD
D71E4697B647724E5F2186B5E472F92AA1F7012DADE4C723E623AE5748BEDF98
6C5C96DE551A4B887649E45963061AB4BD28A96AC2B91102822A33A69D0697F1
C48BA1730CE8AE66C6231FA188CCE526E19715CDE70FA0C988709D9397B882AF
5D0DFB848EE96D2B5B9EE5B7D491E786D6D94BD171ADF9546BA8CDEF5A4DB798
3711113542DD2E8B83E7BC265E2278EA643C8FC98AB99821105BC02D73CF0EE0
D7D6AD8459FB2B62F6117C4678A9A37BECFFAE22E25B0EEB76A67889775507FA
C1A256207DA7B9FEA82CC9692ECA5FA2CF4CCC282F91DE2326BEA8267591D2D4
FC16807066B81401F4A389F94DCD1FE996BF7A638AEE8CDA4822A6588971A9C3
C448E5345F2E3914109509C8D1129CCA6360C7FE75A587488DC4089AF53FA980
BEC24B9BB8FFBB900BBE8D40DD84C5716E44A87B4740AB7C396CB8E64BAF914E
BBB6519721A0A41168CB15DD11254364EA2D15F0A3AB619F9055C35C42B47C0E
89AB603234E833B1E69574928C03DF415F3EB1AFE7A847D442EF957D9B3458CA
50E4C88D716A014F38527ADE579B905AFBC75E3A46AF552DDD70113A736161CF
DE1C53D393B254FF6664B45DA5CB78BED4AD83AADCCEFC7CBE3DED1AE0449FD3
00F6111A50A0B53D5886787BBADE18951C3E083FEB01643B7E9E269BF5E7394C
250695439A48FC94B8588AF38CC4DC2F6714A844497D507A1A3512E91203F35E
ED1DEBC29F8FFB391A74F77F1246EB0B43223BCBA430BDD0AAF80A621F159D40
F7C84097C008CFDB5DEBD271270A4739CEB07E268ACF4E7BB2110092059EA0B6
7ABD1FA6642B09943AC2FB853066A3C033BB0AE241EE5601C6CA66762BB78912
173A4954AF8BC1EC86BD2B820937B8FA0C3927051B46B2658AB73C9F357F709C
C89E2983BE34F311DB67348863627C7F5FA76A0164D56E6037D89A0D28809718
D58F030BC4815DE0A6B4D88DE59B96DBE6186F83A75C275E8B484223147797A8
398DC5945341704670397D01705A35641D38C503C9C3E5DF8A7E4F62B8F54A37
8B308F05D8E2369996FE46940482757F1B7D7EF40A5184CC8D7F00FFA8AE2426
2FBAC0C39C87CB872F6CCCB56AFF2A95B29BF64E69CAF27DB7CDA9172AAE1B67
4B76428C7B02F653008A6E2A110738C62C5B91736610F45A68A53A296BC7C42B
D008FF7781E3046A27041D9008481154D16BAFA25F598810D9D6717D8203BDF5
B56C654DC82FABEBD6AEBCB0715BE718E743F8AF5E5045C1310634CFBB6F3A5F
5E9A2DE3552000EBC1CBDBFDB3685E129D16ABAD0968EC161B84B0651597BC48
1C78C204DBBCBB5900E2D640D5F2D84C3CBA351BBFCAA078A2BD4B148D9D1321
5A30ABF40352077DC4919226CD3B22C6A45C4E4E0377AEA728E18D4617BF3FCB
957BD492A820DCE45DFDB1DAE428DEA1AE1D44433AB62D7E842FDD36B61672CA
2E81BDBDA3B474545C13564A05DE826BB6A9ABAB06588BCB4424DC2EF044AAF6
297AA7EF39E0E95F8D97557F9AA2394F521DB49B02AAA3C81D543CA23AAC5806
DF6F12011E48071630F69EB8E42D042DD5484C58C2DA9E82F1801083312A00EB
27C632DA0938FDAA289CC223E308EEC3BD202CD1F7A5358310B225FA75EFF09F
54E8EA2E081685D0A35FA257909F0D07E790F2AD0A6F349EA5EB3FE5F49A3705
560DAF1115A57444190D8CF1B2A6E1123B2CC61C4C9EEBF973DF89F604B448EB
820ACA20FB80FB8C1C2B19F6FD28FEFC0EB0F41B125776DC24B72661A9C29182
CAC9CD98E81F3DCC6356D99B35EF7ABD737733164853C4D78AE91EA13464E6A3
65EA299E791883AA124D099545795A6E62188BD765AFE450527FA0D6CD4FF346
87F9BC5804DACFA9585770D1722A7D72775188F8C49342921E19030888C208D7
8FE420FF7689AC4DB1D8AE91DA14550C770A7E23912B68EF37DC62347F6132B0
699C75FDCBB9448FE226EB67AF469C15B271483F6301B66E6F09E890FAF861CF
4297C803DFCC8F53B1C1B0F589FCD8AAF83173F182C77133558C3D6D0B07CB7A
5935634A760BE6FB11D585242216CF1C5DCA544BB0B914B6A6B0FFDCFFB795E1
FCC01ECF887EC80CBC22A4359650B07B08524E81B3E6AC8775C24513226C8C90
C99428EEB0E1C6DEDC951E2C1DED828F112E0F58993D00CBADD992FCA43719F0
B0453984849F33A223BF25AFA18B673B901786E1AFC20EB1E5C3C6BE35D29E07
5F8A86CE469B9A330FB0475D481AEBD95F828DC4F52E48E4BBAFFD09AEA83329
409C65D132678BDAD0D60751F4D4D9EFC9F76DE7EEAF18F7DF59469B888338FB
F6BA5C5A7393C1FB297075A7DBCBF50AB0D85221633EC3F2A6F7CE0C87727223
3FD0E25C2D17860F9D257ECE31B5DDE7315523E5D3E1B40DA7AFF6A44B8CEC69
EF7B37F45AB607CB7A3136F3B7AC37F415FD8F8DD352A84626F3E7636BA2DB99
DADB4802722F9ABB7F1272A70A83789EE0DA80281B303D1D0C91B7350CBCFAA4
F25C01152A31E39B5D990B951C20A6541E036CA8039C886C566BA02655E17BF4
E41DACEAF66B3DAE0D0BAF133387A6DD76D2E772225E4B2A7FFEA795E6861949
8C588EC15F53B46BFEC2DCFB9CEEAD6E64713565A8D9A17FF52C63E5356FDD2F
8AA89975E4D609AC8ACDE6C9F496B66F1A31DF93303A034E768968FE7B758FD1
273D1DCAF21668
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR5
%!PS-AdobeFont-1.0: CMR5 003.002
%%Title: CMR5
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR5.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR5 known{/CMR5 findfont dup/UniqueID known{dup
/UniqueID get 5000788 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR5 def
/FontBBox {-10 -250 1304 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR5.) readonly def
/FullName (CMR5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 76 /L put
dup 77 /M put
dup 81 /Q put
dup 82 /R put
dup 85 /U put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE26BF1F487876AD1
16184ABCA7446A2352AB37C36E9C9BB67CEE105C612D36566FB459D6ACFB1DC3
7A59448A06EBA21F8824266BDD0ACF9E356251A897A920C39F1AB236EE06C039
8C4C0AE55FCED464E19AFAF548D454FCF73F6087102630AEA03E622AF2596870
1353925801642BBDC11F09963F4ADF037671B73D48CD9C209DB4D5BE7F4CB381
94887E8365D25C45D1F87EFFAE360104ABD3235E4D2F4BA163408448E814D49A
3E7C171B8F1275D49937C3255326069007B302844EBF2BC1990DDFF1A34C2770
A262ACCE874DA1E0002188D6A713C79D5E9226178EED27D6F4E4DC24ED2669B2
3873F42A48E5C1365AAFC83FAD8B849E5D7E52BFBB01B281005A9EBEB4EA2F35
B691489305BCFE5516DEFBA092F66ABCA2D739A9277AC69F74F786045E63B0F8
66D545B12B0581AEB579D5E1E2A412DB8F66276E05F131EC3B9F543E11F40FBA
8CC47071DB04A5D38A707C9F825527521CA1FC412FB54DBD72E912BA4EC8F747
306A65040671237C8FE84AB6D6157D96EDE13B3A8FBF7140F1A9DA55B666953B
C7FA638353F278D07066AB8DDF0DFFC832F7025DF1AF9F894D52E9FA95EBBEF5
9D6B97768FEC26E845B87C6ACF5395C75B894B5A1F50B248BA33943C5AD6CC2A
8D9AC65C08B3206E7F5E5913CD0D54C9FF741A4D92B628F85E43F52082397891
66E6F922E0BFA2E45F0072217011D4B8EB40893F151E4E2E92ECE5862C467D4E
3833311B08340AE1C0C692095AFB739E9B9A4F56BFA0F0B2AB8455A7470C22C2
0C2EC285026195CB73EE2A713ABBDE4945AFEB92630BF852DD4845FB4C9A8C8A
0C8C971F29440B4A786108D0DA1AEFDBE03568B6B2F3953B4D07A5B7D6FF564F
6CC0D8C08CA459D556154A45133BD7AF70C7D8F474DE66E64FA112D776478A83
B282EA4E941CE2FD6D8F7B68D129CE0093AAF7C1D345C3D65BE74EE9391C9B89
2D4D31764F1BA81CB12CE46D15A6BF941C9F0EACB4A2DECC8F2F6B85FFF490D4
ED7BB6C7CDED10F03F68282B2ED20809F95840A904020C98299E17C46243D9EF
05B5B8173BB2E8CBAB3AA9B8207A9EFE6366C91A7674DBCD9FAF12A2EF4B5117
5687F3DF1244F5439ECD8AB0587F492E990DD7B516C664AFAB76CE71084FDD70
E7F5A38BD46926615659488D3548C5066C06E443016DD40275CFF3105573117E
369C8C34E48BEE832D93F0ADA7674FC6F5A64183DB2B70FF166E02E044B7063A
41D2F396A9158A26D3953F12982ACD1D7593F474DB98ECFD00EAF57FAAF17C7E
C1E4775B37FCBCD6DB1B5BC6209162E57E21A6AF427043562D9854B430A0BAED
20D31A9AC334C87875E53E0B956D33111955459DCD98D54E1BCC61BA58CDB41E
03009979C0A541FA9F69B55D3F3750515E5F268A7B55254B8A44CA732F2B9242
18F34C029665B31EB68331B0147607645983340D15E322E3D0532E6376D40FA2
1041F7988EB9F56D83946757786737D8BB4A996EA7933E79BE61B4EA1115AA4C
286B7AAFE80AB7C619329AD5FA772A6279FE85FA6B623138FAE1C6AE3FA45AB0
95D8020D2EE2979E8A87D7E7C5DA2E6B701FEB4923F401F892D83A4928807152
96CB664018AF24E829E582FA8B4F0E07387BAC53530AB3AADF74404EB2F311E6
C6A70F960FA962E52A30CCC6E15097F9B7BF011626DAD38EDF78745B60C0818B
34663683577D897B1B6AEB240F3A2AA29F1F1800FE0A5C205B35C6A6438259FF
CCEC942AD2D7C3CFE01F956B795C0349DD5380D0140D3BB54FD99EEE5171DAF5
4FA360A740589A1F8AB4FBC275CC06FF89A8350F4982F87E747501A74B7C81A0
0F40FBA9D2875022DC3D417FD623D89FB6A0C0F1B930ACC2117C6CE94AAE5844
0B5C9DAD579B7DDB73F2B26B05E1AAE30AF69937722E8360987AC0BDBE305B5B
DDBEF5A6C03BE1743C518E6B7B58A85AC961B8755BF37688E37DE0632BBE06E0
53FAFAFBE52EAF276365A0484A1A682C9B9486CDCFBFBC4F4A1D6BF71378F014
56DDF9B15A5AE0276827ACBD9AB04D685F52A62BD3DA33BDC2A262B756B58C26
4F3B552841B81CA60C951F400551166C72B8D357D8122685FE97D14AC22AB6FD
2EE4CC429D580AD7B8D12A9C601FEE5D25C98BCBCF96C87FCFBF28419BEEFFA8
7A4FC7B6E5FD377EBD5E743C3FDBB7554A1FB9663B648B15C4119CA952A8263B
278E5845AB929942E1A0FC4CC413F36134884EAF3704865C1478D6988880EB54
C5C5C1BDD7CB0548342B9C7B6F94DD6341C5744A9A3C4A866F620BB70575EABD
AAA42E3B6E23AA029080B299294AF2E9388520367E964A3A66A84628D75F1BEB
C7A58C92EF7335F30BD0A26D072A986635318E0473CE3CD5B4F1BBFF6E781938
EE4E3C11AC27A1BE0C3B55586A4565E4B967ED2EE4674121A46DA1C32C5D278A
44BEB43CCA246B730D337918AAA394728814C726DA4F9C40AC6EE877365976EE
A53276A818CF25E995CAA34039339C55DDDE74B3C11742786C1E9FA5C432EAC4
E184F35560EA31D687D005843B02F9252C2A16F9E4C31C18D0D45B7D5F63D589
3C1FE3D33C912B9CD79DBCCF9FD8223FDC18D55762F0DB2DB241625B91DB17F6
206120D6300D317E82F3DDE6D2D0825547C08BE7E6FF8FB54D4DFEF2F4E475F7
F3838B4ADBE49F8C41409D85085DB5A030858AAEEA5AB9CD2D1172C8D0EE31AE
507D8048E123AEAB05979C872ADBA4833D36626166BBB2A2CEF2F3E641DB429C
AB15C97D7180E8E6AC0D871E20678516ABAA4D616B51C132F41E5661858B8C2C
ECEE4A65A2B0FF310DFB531B213196D2E2AB015963246F44E22E603E741BBFF0
16DBFC284906983A8C15278A36F5379F46C152304DADC8D90C313961E5F58180
EEEC5A15131E5C48AD27F80B77EB0370482D528735FBA3E6C0548BB66CC222F7
CCE87194F565B9EF7F32E656E6964501CE32462FFA6B87087EBAF45D454CFBA9
ACA808C4397F3852158F1C0AE44772253ABEF6D278F726A03A9CBC4330EC80D0
117F9131C5974445B81093C1D6E093C669CD285D1BFE864D53E5F140D40BE4CC
2689C42C50C4137DE564374B2130609785D8F519E0083DD24A44DE24A68E4071
4A2122AB8AB9649660D1C96DC58F37F88623528078BFDA3BA3085D527ED4CAF6
25BA663A61AEC4938CA78C49623FE0EED33DA2D08CC78F86A807E791BC9CFCFE
8FBFA55EC2259B64C31F6EBC45D2DF9B47EE09AA54011D40F55B6F12F49F2266
EDDB09D44C521EC9568CA7E62283C483A436417B65B4FCBC7EA32AC6EB4E7B30
080816F29F06D6B09E5506D3149C5D758BA85D820357D4955B0C1FFB383E10DA
4D61774D3B23C84A339C7348ECA6078080FF8B436B2261091DBBDC02583E366A
622ED9F95D2A85BDBA48DCE8BE45628A4ADFD5A48869800D9B54F530F43A8F53
F765F5D5C44A9399FC1B9CEFA343966118DD11CB102423D46BA0F096795AF0D1
BA33F089AD80A104DE7FDF8A6E7D935E6713963FE3C57CC673BCDD423DF3DCE0
C57EADCA2AE4DBB30166C2CF1F7113DF96A27D4BBB23ABECC5A4795F1290F4F5
5293B5870F892C9A32C776AAD06D78D0514F047373879CFC5AF9D624DCE5BC8F
7CEA5055064050AAB2F24A1C792B2609FFDADC6AB8D0F31A12403CF3436A1E1E
E24BA5F92587925C4D6795A3FB163245FBF054BB1B0FF01FD63DBF7C192D0F31
33A17E7764699B669A3ACCF7C36849EEDA395E7F55174023A79904A766F21D58
3DDB7B4C2808DE7FFB8717658084E70DBE046A13BBF1F9BB97B3AB527D68DE8E
924DE65486C3B883CD65A95901B0DE57821CB6C6AE37644E02F5CB0163617113
C91D2C649A0BA10736F3709BD504F22DA8831A09BD0B2D6790A498F2FBC2F642
7845796E606ECAB2356238AAF40323D71B236CBD1E3E43BD5443F304D52F3CC0
28DB5D33A732695AA09C0449C53C656704D820217AC035DF45F59AE445946481
E5BFBE5D4EC0A42B5662FBEB9FF6ECFFB5E8517312F56C91A01824E401E7203E
258C3BA073C1B2532B8312F5AE29E37F5EA71C52F171593B1370D4ED5D7341CD
567390ED5B75D612D5873BAC518587525A591164E8D36D2BD89F792BD9EE6ACE
99FB72B23CB2445F12B8A6A0876EE711166C9E34897D370174C17A2495D58B4D
3DA19DBB1AF2E09C72FA42AA3D8047D05AC4F6A27F3EBF32ADD2AD2FF26EAE05
A9AB34C9287EE00E8EC29C6603036D365AE08E00D1C7C410EA2551696954EC92
92080C8FA5C9E67698BD7B895C82ED29391E015F83E0DA145384E223319CBA74
19494F070649E03CE9FF905619C6CB40F562DA49C1EDD2CA221DD7D3DAFA8279
AB50DE1C059CB8D5C9FA8137DA711B9D30F236526AA389B2F79F3D5BA6ED9534
8852BF4448DC1B72E361A6A2B94CF865BC9C3401D995529E2A36DE755EE001FE
C67B184AE8241D08AF88D626BD2D8AA12EE791AC4253D4761A21917C7F2F5AEC
795CD14B33F59DD7080C7654DEFFFA669F50FB1AC8C0F2E60201673A78D03DFD
DE0CB142F0F616C4051772BDB837CB4CE87A0C8D61E0FC7F90517EA0F5F6B1B4
D57143CC0AE7CA9521C1536962867D6318DF1C9CE6476CEB9ADB21655D379B26
7A0EAEC2D28430C14D38764C493BA4C06EF4BE6780131F2FEC066C4866E0B258
51C48BEF77011A0B5763CB3D69A50BDD50C2D7EFBBF18BF42544B1AC196377FB
4826BACB3C16DB805D38C34F9E92AA9AB5F9A9B317D8BF32AF8A758017269914
DE3B748625D319E571187E1BFED9CCBE11ABC18C0C6123D24D2C7303DE998847
0F6F644748ED225135CC3B957EDE8567AF3EE47F5E942EA9293F7BF74260D1D5
A6F5E56705E12C8379DED158E66DF54349F0504EF584C6D05C44CDD8B720809E
3DC36FF60BF55FDF1CA8C968E68346CF43C568E0B3175CB7D55343DE21CF9730
C9DF918360036E4204CD024A67E764D3CC7677E5B229C1B909ECD1B9042134BB
DD8E47FDBF63F212D401A797EF60011F52EAAFB88E3E70E007BF19826E40FE4A
73B57D52FAB33A737B1341381EB2ED307E0B83B45D6911E04BE623DA82DD6BDB
2DA096827E6A498A8D503668E45926525789D43D1BD5B896B487C0CE04FC9DAA
CD9078D0C8A0639E27F0DCD82C552A7FABA42BFFEAD66CEBBD4D2E4B4A1B40A7
B6FD119D37FA26C14C29A70E2EDB3253A1AAAC2650009CA3B97B430B1A05F2C6
F2120C8981683D0976BC42FE98AB2D33014B983CE1E2F1E1AC4A524249C3CF13
4B36652F96FCBD3660ACFC2F9778B729AFE2CE1BCF473DC5A846FCC3ACBE455E
2C37853F5204085ABF3BEE50C28D99312A078CE2F6F4C1D2D3017F0E5BB5B614
102BE45CAF8108407EA970111B5A97CA8C7A64C70D52D28D2EDCD27879B1003A
6D168CD054E87C063744CDE097887CDF268D89180AF8BB4F170804AE5DA779B2
1941775FC32FA189038D6050EC0E400BBED364E0CCD8DA571E902DAD812988E2
4BF761F472EBEB411388FEB6F901777D090400F695D823C758882CC008D889E1
02678FF81B252C33C89E3B04157C889D4F0F86D432F0B3DD7811BCF01C2FC041
0D4B1DD9CB6F2433F9B34E7E8ED8BB1FA4F9F7CEB5354A8305C372C2EDEAFE5B
4AE23CEF34AC457961B15CEA084E31B3741CF2EC317DF484736EDD688737C380
6D868BDC02D1E63A52D21C8E7C1FD1BD8717612FC247293CC91E0EEA08D5F805
70217761CFCA0F9C13996DE0F045F28DB67378221722416236E4DC00194E9C45
A3839F4BB53E226919C2CD13A44E4F67334454DB7E133B2D308925CC2E275293
F81AFEC4DCF49230F22EFA19F48CAB7E09FA727CC2E11E5A5CCF57307506D5E7
6DD1D26BFD3DF97E73C2DC019B0A75B9D6386469ACF1A00A5AAB55F99BA1DE49
9883DC4FB0E8AD9421B105E050519976705F7BC889FB3B6C2921D2E198FEA294
E192DB3738EBEBF6485075728A0E16ABD53A25BB0795A21B65AFB6ABD7EAA3F7
1DAE1BA012651B4BA0ABE02F3CCCEB9E92979F17A3338A376C57A1F13E3C90C7
9DE8ADE421329A57369CCC2BA622840B79C0DF098EA42B810C596DE85F51EB9E
C8F6FAA598C73F359FD7CB1D337E3B083833389846A99C87885A7537D35772DC
A7EE51E8EEECF4E4F38AA04C3F4C447080386A41F1461599739D73C58CD02D65
0899177F7D707AE793B4C915C590AFD6E6810700BC0C3D14B67E03129A4215E4
953B88C7A9FF1AF4B6DA293E1DF2EF5667D408AD3F2DFDBA46EF95A1D8E1CA29
FBFA01A4B965D1101CA6C0C2BF4670E94776753FF52C2751AE41872EBE3DC66D
EE58BFD3BF8F543802C7614F64E7A9CC4474DAB5F4C59F8085FD523C91F0FCE2
0CAEE1B9613064F9C9CE9556C841563A43660E0E71EE761F0448C41589AD0312
958167F62FB166655800150F9E81A558949071F01BB11C9ACFB2ACA4F332D2AC
598AD5ABD3D5EB17AFA97456C0DE4D3D872750F548C357FF34919A3EDCFF9658
F3DBF53BB3D0A204E84702DF6FCF5022E753CA92323ABEDC81071ED44C306A7B
C10D15F905672783BFCDF28D97EE156E293046C09595159C735A266ADAACB887
7026C404951C27B88CC3EC1A6F15F016D55AE6B5DD739914DBD6861098977064
762AE2867697967117DD7E3CDFC24D046F1D83856D49224191CBAE95C2E7B9DA
4DC5ACB06B9F637312C1378941EF6B9D966E84DA69E66C43EDC0564D4A9B201E
5CCD830900AC4D4EEDBBA4AD14ACBADA20179AE138CF35D6F830801D7F9D1F3A
B48B6C2EA3B77E7EE42DC0A26C7FDA6EB64DF4136FC3AE0FADAB84CD30392E44
49DD3F7DFAB77AC2E3A8D16C9BC002AA17A9C1E9166A21648AE2AD7F9DB250DD
2F3F480844C93059796E89238B0DD470329C2AEC9F178B83D421063BCC18CC35
2C562DAE86EBE6529D19066FAB70C8E73B260C71924B0B3DD652AE37DC2ADCD7
A3E3E1936FDD259A3F32D669B6CD82D73436212D6CCBE436578139AE07BA8C5F
07A8D2158C8F21007FC0B96E2B3588466A6FAB4F70363E994AC4FDC2CAB3A478
9C98DE079DF219648A6219EC7040A8FA91BE9D9451BEA89906677866F50B6FAB
E8FC00E826B115CD65FAF738492A919CCB657186BA12260C2816C44A632285CC
25CA1D797DB0D901EECA675FFA1182AD6D48A8A96402D07A288CCC02F8A7CE0A
39084DA379C5FD08743060851BD02A3C9CC298FFA0AEAC5F5E1928C46A6EBB42
7D2AF9D32BD0117A8CD7B453C66FF39163092568B5A26F210900D466EA5CE01F
14BC1F57BB0D3186BEE9BA1A5648887CAC06E23057199A31781C4C37B1A07C32
B8AE8A40F5C481C8D2854AE5C2C3C746C4A2B48189A373A438F512642A55F2B2
3CCD2D5A06A1859B50C1C3352B1B5B56E652F00EE79060842A33A8CBD002E777
3CF6C051A6D5F02E35480569E9D00493C494F9FB977E665AAE4468E6DBBCC950
33876A21B75095CF391E09E814D7A03EAA19BA0D7A560610CC36EC3A9CA39CD1
4A359FBC14B07975379B68949C9FC2DFAF037C56C13802A7F66C809549EF2FC5
25EF3F517F06F90EEDFA6F8A3E5F1F3531A5415F3191B8FA7B0F28950A20A1E0
6E354480D09729E3A2D6796DB81825DADFA4580FDC7813B7989B18020C3AB1A2
87E44011CAB86258F2AD36B7F217C696351BEFEAE26D641D4932540F7AB281F9
3C9AD323569C57B510FA6AB55D1E120E82187082675F914F99049593BEEF1080
B8E63CC1047E73B28F8FD39312BA79226FC1CEF3DACE57A09F962CEA1CD75547
F61F66F43106A015B4BECF94937CE559ECD19956CFFBFDD570C4C88978C41F8A
5D103B8609D7E5B7D4980F2C29CFBA88DF8D87F32A7BB5B06672CAD5E073D10E
CBF085B2AE0423DE309A360FF60CA82A8251BE5674DFD0B1F1F3CEC338951D72
A53DBC6F8F1CF86BAF35A302B4EB1FCBC912871E95712948EA8D08BF2734367C
0E7854CB47132679FBD578360DCFBE22CB795C8AA8B97A9A211FBEC2C23A0234
844F7843B5463AB31C3F60E77138E2559978A635008F775DC3406F75DBB3504C
0D51CD0C6AACE95CA4F6DE4FAEB1CC3B0672E47E51BF17859A338B4394A32045
A986FD6016B9A425AD5D38A6C17B68BEEAAF9013201AB7AB5E64759F5C3F53F9
E08A9B7BD4757FC2D2E66C75CE9BE81D9EB13F6AFD3A55BE3D8A0AE596863011
DFB2040BD0014253B5044062FD3800E804158E16F2F859E46888610715F2A0C7
51B48455C0B2095E8D279B787ECB6358C2CE21B1CB4957CD095B8EDC58B7AFF2
D9387A7E2219418CAD831B30EE92F67760CD2550EFB3E8FB4E6C0BF0BB3653A4
743FC4F942F8F3732DDFE80B8F9F3051BA4F01F25041B0BE0BD9354C0E6975EE
16677D441549C0B7D01FBED0FBA30B85C37F0A5E02CE0771112641369D7B1CAB
132CD33C1CE099063EBC204F5CC0AF6CC263F75523082C7956A8D2098665236F
190731F53D0A4BCC5433E340A94FF8914BAF8D30685BA24FC2DC5FBC06D31AF2
2BFA0119FB4CD922126E8325A69505456122387D01E4F56E5EC1094122E391E4
435EE678B3690606AFEBC02F761313F7A33EEFB54100B453BA097533563168B6
7A48B875C558F5A71F18B659D875EE22135827D2E52BDB195F6BC18A9626807D
E15D52A745D0849BC3E784F596ACD1F9E76DC97C80B828EE9B9D651D1006CD8C
F135482243643B9DC2F473BA63886E42711ED51AA09EB0247A6C3BD1477E563F
CC6F7D2784008B20F78A70786D99F409DCFCA600D712181C96B2918DA29B9116
BFBB594D902412A7FA87A291F0A6088656754F51F10F8B7310B3EF9994E6AFE2
887735C4E6238BB21C2326153E1D035F412C3489A4CF6EED9EE3D6E845BD9573
70A597175017FB1D607C81D3012654268155E00A81DD29C95D84DC22E0FC1AB4
446972AE16D0DD167766DA269BE5A1548DB9CFA278442D09E353968F113BF7D4
A3313891B94FD77227CFD373425C7E6E14892B68E569842E8930DBF3848EB152
DFFA418A4BF4B25FC0916AFF37710989B0964281576ABD54D549E8B744A0F0EC
DB640607175DDB6E68ACD1F9B6B948B47880622B4794DC4BCAC40FD0F6CF3FF8
3F02DE116E4F50C0CF930AEBE38466319B8BFA2ED90EB13BAA4CFE9CAA6D349B
8FC478EFC3D95812B0262ED9EC47FF1BDED5C4BD1AB5BEE4DEB10E74AE7FD288
856632C4EED95F9AC925CB8D17713665326460A64682DADC55C774BB94FE05B4
C676C28BAD6CC36A0F21A0252280400BA887E7915BA75830DB9B6A5E31903665
E0DC1D1FFF07BBF725117EBD770202D1CD853BCBA586C945CDB2D81E70530687
F68375D6B24065AE77F21B479F35CB8BB56B249D0FB5CF5C0A0C80D42DD26645
9F0AF34BCDB3831FB795898CC0C4670501CE19A4E3AA2B2B90AB466870C6E9F0
0BE1CCF37DA62E1245C56A9D217F39AC4FBC84608F2A62C39935BFEA42061D93
8127DB7D46031E833A5433E156D08C1A29A341A0A6BA06D38C3C2F272AB9481D
82BB7EA202E9FDD0091A49C1B7CB78FAF237BAA106FEC4704635441A6C60B188
9425C6FEA851382CCDFFEDE240D4839755631E7E486D47BBD71A565FBFA6F09C
FD61F6FD6935A60E5B44F4F7AB96AF293FABF28DED6C1089057042681900244F
9283461FF6AF35D343BA9DE76756B87442034CC6849DD519090C71017CB4987C
ABF9B3573869BECB5CD5EFEC17EA2EE04DFFA68C8447F5EF63193B578CCE4120
2ADEB15F1B41962E0EC05FEBC34F1A910FC7AC19D3F550C44D842D0E494F8E2C
4344D78DA0165BB0D5E674AFBFCD159DAC613691CC0E8C60ED7B6C632292FF3E
89894B05B05A96A2A9E7CE3568C20EDF90F14A350D2915D31E05B8B32000D4F6
76665F37BCB9C93831FC9F314F8F90CED74F5A2062F489B290C7C361BD5903CD
2B8576B3DABDA84E39939DB8061B15647AC3D5DB54F319C8734ED84DEAC437FE
946133C6E266BF2EB3A63E6E0D1D1C0733CDEC2E2D2FBA9F389A5A858EBF7A6D
9F2B378419F6E54616E81F0403C74887DF41D308BE296663B336C6C15855B4F0
0CA9EE4F0F64B1B424128942F782935E02F95A6B1888E07CA9FD6CA665EB5086
16318B4389A3FD6254E9EB5D292720110B58D936C818A356A7CCF0F028A3CC6C
814EE572F49E71934AB7CED29D788E62FA8DE6C018F7ACD77F8D2DC28D3F4621
FBC8791EAC2C9B00199FE7FD76E6CC97F439EC8F0C27A990D942455D35C9F5A3
39354222C7FC83AC352A63068AAA2D390093887931CB58B9E8E436606E068321
C1E58C3B6B3EB1EF3B7D2CCD5605FF93A95A46C43E5FF9D4D8028C3D5E1CECA9
7B472ED2CBFB9F2FF89CDC85EDA58333077D5B1F59F4898F71ED5C7F5B613379
76C0DFA80DDA2F4CBD0D5FCE0BA4C2F20CFE96AF450B11E0B12BB8963E6A9024
EA8E757E3C26FE60551956C07A460CE85C312AB4CECB5346B5435371D2085DED
1BA786AC14293C7221510E79B8A7CB23C5A30A6D2445E69077D98E65876CC5B7
BFCA82386FAD5FEDAB9AE399A3C4A28B97D39EA3D6BEB3315BB9C67387EA823B
A5DF068CAEF2C03EAF8893EC248B8741344FA877DDCC46A6F1739F0406D1E047
6870C60F033DD5C898E77A5AAB7DA8D60AC4F813FE4BA4D95BB5D90473284D8B
CD49AFB190F8CCCFEA57DE74308699EA301C0C82AF85C80DEF8EE3DDCE35DCFD
4211502E8607547D4C1C32CAD1FACCC5955FB6BA08661D65902C39D6266574D2
E9CB5DF99094EEDA02EA34A03FC02E474BA0BE3B1423317686FF74F13B5C0EA0
7638BE8DE3A7CD76D65DFF6F07173A09CB058BF3E7E3DFFF2BBDD1A908D9FD7A
7B480222A5C2ECC558269ED8B8333A212962A4356AA5E1181835BD4E9E8343A6
B02FC10B50EA2B2B0F4C3AFC5C0C6BEEC99C8646374A54E0B4BA44ED637382F1
15483C0822D4A948EB57F94F67C24359B6A3DB8D2A256497B80704BA465CB177
D7F6D47022190F471399E58CC904FCD53C81A2A8110D94F41E10E06369C7A00B
C9055A89DF94658B9062D5824CEF283B78879F17ED986E67CB36669D251C7778
05D2DDBC904B68949EAEB683AD2084615B100D6B5542570E29E43F95643657B0
AD1336862AA63BB4577198FF80F8B6094A551517649AA3970977E688BE76A324
F39F99057247F9772ED0102DD9987D1D459BCB812F7E7FC0E1CFEECB84EABFB1
A3DB20F315B99B22447B9B73751599897FAF33178AA7A9BE8E9EA76DC851C821
C8CAED69818DE1BD54F274EEB1294A7B4825BAE1375FC8CBADE2046BA8FB67C0
209C427543B089CBB47A93D872ED2357E3E0BEC36B2D49F6B008801E0BC35AC3
2E9BE3FB671059FEBA55E7276D9B0781E62344C21BF99F5FAA53EA1F65132800
62D1DC39495A4EF11317DC8D95979C909B0B47E9779B856B36CCB1CC801061B6
6BDC44323B499C4BDC51B8B59B387934AAA734442AE2AF36F5DB1BFFD091CB44
A6171F4A78CDCA970FBD4020E5233747B6683974506120A1A30692E5EAAD21FE
7E7746B2E9642BD750840E44A498B2F589E5485B10B9673F69019630CEC3D32F
F60BBD0BEF8242D150A5FA01E9AE6F2D758481F838A34B365AEE755B5ADADE68
B889BBA7A4BFAC561D58FE858A7D45580DD815F9392FBC7C36B263BDA954203F
7ED32C9248822F266272ED54646519321C2E2C6C8DA2E7DD8D5B5078C17186BA
EDDD646E3C681C742339DAABCE957937140248B6DC903F4B779175575A93CDA9
49CE6F0C3F20E008C1A13BB3984B8D6832372FAE3DD095DD4B3F79E25D25D424
B8CE49C4C03A1A6880D1F75C06070B855BB45AFF3820B676271763CD5CCE64A6
57C543DAA035B4EBF348120F7DEBF1A0AD6C524DDC62BC6E112CD63D8A4FD720
177A27766EC4C5C707A998044AD7DE8EE4BB4A27492A88F3C231DC693E2971D7
2CF7F8570A79497A27432370BEFEBB915DDC27CEED93BCE2270AC615B79183BD
F4248D15FB56B1DF32606F7085C2ED4429EEFE040FE394AC5A0CE4B7E54F8B8C
CB543A1AE6DBCD42544B1F235CA37E60755AABB935ED7C3E31DBCD05C6EBFC69
9EC06D3895DDCC4A073BA3C027C095A9D8A0D7360BF715E3C21103AE398FDDA7
27FA46CBEF0F70C53A956E83CAB6355001A3EFD273A2A0DC43C20CD0AB2EE30A
5F2F9C554240A2E67572E3E9C9BF16D27D6D0AF69839F0A4F3A453A3F3C4E329
9909B9A6463F1B581FF9C4C9F67952EA5C02D1DBBBA2BAA423D93EB1823FA012
F25EFA946C142426B3197ADA956DDA4F30B2FAE6E86EEF3CDEF7313AF8F41627
8622DD023D8E5C25A7B3B4BFE089126733A2C67FEA466E1BA519AE9E3FCA98C0
5083A8426EF3E542DEA95F16D171BAB038EB32DCE7312A0451D6377E429262BC
82C134FA49132935E8C08E9D2004A8816A1974A16EB4327B5574690CB14D1BE7
9487239642CEA0B23E1955E997BDFBD17E0AEB297416385071245FF96B67E96A
8207F4F508C3B89AC3ACC24110E8249274772F146936CF6D187BFFA4EFEFD7E5
8D9C61F7C0F8E29A38A30172E2AA1817BF8091048F597DCA9FFE5BEE6BCA40AF
71130342FE884159883283BDB38D94DE321551225DD3D13F209B4E37B66433D2
7FB2221E547955A19874EF19ABEDBC50E2373DE5E064C9F37630EF71A1606B42
AFE0753B9747AB66274D09549F8503E8D5F40532ED1DFFC5505780A14F8E19DB
393FA055A6BAA26F7AA06C8F242AC9BE45C139947DC10657A7CBB72AE4018CD4
AFF73302CD2614DDA0C018A49349EA67216470CA66C1D452AB149845BFBEB9D7
87FC2F23FDE70979C4696B5B0575FCDB7409A54CF6BE228693FCDA7FE59F30B2
FE15C176129F913315CDFBE0152F26D0C652E5FF666B02E416986C8EAB88E801
62766C574FBEAAF5A3B65DCCF33D967A5EF7BCC166F891A2DB27221FF6313A50
2CF6608D45D51B755A3BBB163DD66E89F21246D1E2E607798F0F4189B6E2BA08
C9E0B1E10B86B7C0EC92CA9FCC87B2C12C6CAF4F967BA39B3536D4C035458BCC
6849CF37D022D266374C95E3B69C6C6A4B8F4AEFC718072CB728AEBD223FD5A9
2CFF854C1E052BE04943DA5B2EA05F97253A993E00ABD81DEFA1A50D5EAB46B6
404A30815AC2F78653400B7F311747D6C46EF750D5891314DA921720CA977034
C8D67397EDE42CC048C1FD14E46D78E9789C3D04BC91C25D9F067A758B7802E6
7C7CA340F537A943BAF8E6164C708C7A27597CDCB7DF942CE7C376745E4B0DFE
126F1FEEE7BF8EEC06A35661C77A121CAA706873558041B73BF8B7DDB6A3A5A4
4E762B55EABC1F09758E89CA9E82D9ACECA6336D594C3896F88EB6C3FF3F2EE5
632DBDC5807213FF0A917C6B2C794AFA50850C2217C5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 600 600 (mathquiz-manual.dvi)
@start /Fa 188[60 67[{}1 83.022 /MSBM10 rf
%DVIPSBitmapFont: Fb bbding10 10 2
/Fb 2 38 df<00000000000000000380000000000000000007C000000000000000001FC0
00000000000000003FC000000000000000007FE00000000000000000FFE0000000000000
0001FFE00000000000000007FFE0000000000000000FFFE0000000000000001FFFE00000
00000000003FFFE0000000000000007FFFC000000000000000FFFFC000000000000001FF
FFC000000000000003FFFF8000000000000007FFFF000000000000000FFFFC0000000000
00001FFFF8000000000000003FFFF0000000000000007FFFE000000000000000FFFFC000
000000000001FFFF0000000000000003FFFE0000000000000007FFFC000000000000000F
FFF8000000000000001FFFF0000000000000001FFFE0000000000000003FFFC000000000
0000007FFF8000000000000000FFFF0000000000000001FFFE000000003F800003FFFC00
000000FFC00007FFF800000003FFC0000FFFF000000007FFE0001FFFE00000000FFFE000
3FFFC00000001FFFE0007FFF800000003FFFE000FFFF000000003FFFE000FFFE00000000
7FFFE001FFFC000000007FFFE003FFFC00000000FFFFE007FFF800000000FFFFE00FFFF0
00000000FFFFE01FFFE000000000FFFFE03FFFC000000000FFFFE07FFF8000000000FFFF
E0FFFF0000000000FFFFE1FFFE0000000000FFFFF3FFFC0000000000FFFFF7FFF8000000
0000FFFFFFFFF00000000000FFFFFFFFE00000000000FFFFFFFFE00000000000FFFFFFFF
C00000000000FFFFFFFF800000000000FFFFFFFF000000000000FFFFFFFE000000000000
FFFFFFFC0000000000007FFFFFF80000000000007FFFFFF00000000000007FFFFFE00000
000000007FFFFFC00000000000007FFFFF800000000000007FFFFF000000000000007FFF
FE000000000000007FFFFC000000000000003FFFF8000000000000003FFFF00000000000
00003FFFE0000000000000003FFFC0000000000000003FFF80000000000000001FFF0000
0000000000001FFE00000000000000000FF8000000000000000007E00000000000000000
4B4B7DD153>34 D<000000000000000007F800000000000000003FFE0000000600000000
7FFE0000000F00000001FFFE0000001F80000003FFFC0000003FC0000007FFF80000003F
C000000FFFF00000003FE000003FFFE00000007FE000007FFF800000007FF00000FFFF00
0000007FF00001FFFE000000007FF80007FFFC000000007FFC000FFFF0000000007FFC00
1FFFE0000000007FFE003FFFC0000000007FFE007FFF80000000003FFF00FFFF00000000
003FFF83FFFE00000000001FFF87FFF800000000001FFFCFFFF000000000000FFFFFFFE0
00000000000FFFFFFFC0000000000007FFFFFF80000000000007FFFFFF00000000000003
FFFFFE00000000000001FFFFFC00000000000001FFFFF800000000000000FFFFF0000000
00000000FFFFE0000000000000007FFFC0000000000000007FFFC000000000000000FFFF
C000000000000001FFFFE000000000000003FFFFF000000000000003FFFFF80000000000
0007FFFFF80000000000000FFFFFFC0000000000001FFFFFFE0000000000003FFFFFFF00
00000000007FFFFFFF800000000000FFFFFFFFC00000000001FFFE7FFFC00000000001FF
FC3FFFE00000000003FFFC1FFFF00000000007FFF81FFFF8000000000FFFF00FFFFC0000
00001FFFE007FFFC000000001FFFC003FFFC000000003FFFC003FFFE000000007FFF8001
FFFE00000000FFFF0000FFFE00000000FFFE00007FFE00000001FFFE00003FFC00000003
FFFC00001FFC00000007FFF800001FFC00000007FFF000000FFC0000000FFFF0000007F8
0000001FFFE0000003F80000001FFFC0000001F00000003FFFC0000000E00000007FFF80
000000000000007FFF0000000000000000FFFF0000000000000001FFFE00000000000000
01FFFC0000000000000003FFFC0000000000000007FFF80000000000000007FFF0000000
000000000FFFF0000000000000000FFFE0000000000000001FFFE0000000000000003FFF
C0000000000000003FFF80000000000000007FFF80000000000000007FFF000000000000
0000FFFE0000000000000000FFFC00000000000000007FF000000000000000001F800000
0000000000004F4F7CD053>37 D E
%EndDVIPSBitmapFont
/Fc 133[39 41 47 3[30 1[37 8[29 6[36 44 36[65 23 23 58[{}11
83.022 /CMMI10 rf /Fd 143[69 5[23 2[42 42 51[55 34[42
14[65{}7 83.022 /CMSY10 rf /Fe 133[42 4[51 49 38 4[51
4[25 51 53 1[46 2[48 51 8[68 92 2[65 2[70 3[82 57 17[27
58[{}18 83.022 /CMCSC10 rf /Ff 129[44 44 44 44 44 44
44 44 44 44 44 44 44 44 44 44 44 44 44 44 1[44 44 44
44 44 44 44 44 44 2[44 44 44 44 1[44 1[44 1[44 44 1[44
44 44 1[44 44 44 1[44 44 44 44 2[44 44 44 44 1[44 44
44 44 1[44 44 44 44 44 44 44 44 44 44 44 44 44 44 44
44 1[44 44 44 1[44 44 1[44 44 33[{}78 83.022 /CMTT10
rf /Fg 133[34 40 39 55 38 45 28 34 35 38 42 42 47 68
21 2[25 42 38 25 38 42 38 38 42 6[51 4[62 59 1[61 2[64
1[74 52 3[62 2[56 3[62 6[25 8[42 2[25 46[{}37 83.022
/CMTI10 rf /Fh 190[49 14[33 50[{}2 58.1154 /CMR7 rf /Fi
131[83 1[37 44 44 60 44 46 32 33 33 44 46 42 46 69 23
44 25 23 46 42 25 37 46 37 46 42 7[62 62 85 1[62 60 46
61 65 57 65 62 76 52 2[30 62 65 54 57 63 60 59 62 1[39
1[65 1[23 23 42 42 42 42 42 42 42 42 42 42 42 23 28 23
65 1[32 32 23 5[23 20[46 48 11[{}74 83.022 /CMR10 rf
/Fj 133[42 1[50 2[53 37 38 39 2[48 53 1[27 2[27 53 48
1[44 53 42 53 46 11[73 3[72 3[91 3[36 2[60 2[69 68 72
1[45 10[48 48 48 48 2[27 32 32[53 12[{}33 83.022 /CMBX10
rf /Fk 133[50 4[61 59 46 4[61 4[30 61 64 1[56 2[58 61
8[81 110 2[78 2[84 3[99 68 17[32 58[{}18 99.6264 /CMCSC10
rf /Fl 133[25 4[31 22 23 22 2[28 31 46 17 2[17 31 2[25
31 25 1[28 11[41 2[40 43 3[49 34 8[40 67[{}21 41.511
/CMR5 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 432 133
a
SDict begin H.S end
 432 133 a 432 133 a
SDict begin H.R end
 432 133 a 432 133 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 432 133 a 0
TeXcolorgray 494 215 a Fl(Course)20 b(co)q(de)490 265
y(Course)g(URL)2365 215 y(Course)h(name)100 b(MathQuiz)20
b(Man)o(ual)2434 265 y(Quiz)g(URL)p Black 0 TeXcolorgray
440 448 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 440 448 a 440 448 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 440 448 a 440 448 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 440
448 a 440 448 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 440 448 a 0 TeXcolorgray 0 TeXcolorgray
923 1033 a Fk(Ma)-7 b(thQuiz:)49 b(Web)38 b(Quizzes)f(using)g(LaTeX)440
1136 y
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 440 1136 a 440 1136 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 440 1136 a 440 1136 a
SDict begin H.S end
 440
1136 a 440 1136 a
SDict begin 12 H.A end
 440 1136 a 440 1136 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 440 1136 a 163
x Fj(In)m(tro)s(duction)440 1399 y(MathQuiz)h Fi(is)f(a)g(L)1093
1382 y Fh(A)1130 1399 y Fi(T)1176 1416 y(E)1222 1399
y(X)h(based)f(system)g(to)h(create)e Fg(inter)l(active)45
b Fi(w)n(eb)37 b(quizzes.)66 b(The)440 1498 y(idea)39
b(is)g(that)g(y)n(ou)f(write)h(the)h(quiz)f(using)g(L)1900
1481 y Fh(A)1937 1498 y Fi(T)1983 1516 y(E)2028 1498
y(X)h(and)f(that)g(MathQuiz)g(creates)f(the)440 1598
y(w)n(eb)g(page)e(from)i(this)g(\014le.)67 b(An)n(ything)38
b(whic)n(h)g(y)n(ou)f(can)g(write)h(using)f(L)2823 1581
y Fh(A)2860 1598 y Fi(T)2906 1616 y(E)2952 1598 y(X)h(will)g(b)r(e)440
1697 y(con)n(v)n(erted)d(to)h(HTML)g(b)n(y)g(MathQuiz.)62
b(This)37 b(includes,)h(for)e(example,)i(mathematics)440
1797 y(and)23 b(graphics)f(written)h(using)g(PST)-7 b(ric)n(ks.)34
b Fj(MathQuiz)23 b Fi(supp)r(orts)g(three)g(di\013eren)n(t)g(t)n(yp)r
(es)440 1897 y(of)28 b(quiz)f(questions:)440 2046 y
SDict begin H.S end
 440
2046 a 440 2046 a
SDict begin 12 H.A end
 440 2046 a 440 2046 a
SDict begin [/View [/XYZ H.V]/Dest (Item.1) cvn /DEST pdfmark end
 440 2046 a 0
TeXcolorgray 541 2162 a Fi(1.)p 0 TeXcolorgray 42 w(Multiple)g(c)n
(hoice)f(questions)h(with)g(a)f Fg(unique)33 b Fi(correct)26
b(answ)n(er.)35 b(\(See)27 b(Question)f(1\))440 2216
y
SDict begin H.S end
 440 2216 a 440 2216 a
SDict begin 12 H.A end
 440 2216 a 440 2216 a
SDict begin [/View [/XYZ H.V]/Dest (Item.2) cvn /DEST pdfmark end
 440 2216
a 0 TeXcolorgray 541 2328 a Fi(2.)p 0 TeXcolorgray 42
w(Multiple)d(c)n(hoice)g(questions)f(with)i Fg(sever)l(al)32
b Fi(\(or)23 b(no\))g(correct)e(answ)n(ers.)34 b(\(See)23
b(Ques-)648 2428 y(tion)k(2\))440 2482 y
SDict begin H.S end
 440 2482 a 440
2482 a
SDict begin 12 H.A end
 440 2482 a 440 2482 a
SDict begin [/View [/XYZ H.V]/Dest (Item.3) cvn /DEST pdfmark end
 440 2482 a 0 TeXcolorgray
541 2594 a Fi(3.)p 0 TeXcolorgray 42 w(Questions)f(whic)n(h)i(require)e
(a)i Fg(numeric)l(al)36 b Fi(answ)n(er.)g(\(See)27 b(Question)g(3\))440
2860 y(The)g(use)f(of)33 b Fj(MathQuiz)26 b Fi(is)h(describ)r(ed)f(in)h
(the)f(next)h(section.)36 b(Later)26 b(sections)g(describ)r(e)440
2959 y(ho)n(w)h(eac)n(h)g(of)g(the)h Fj(MathQuiz)g Fi(en)n(vironmen)n
(ts)e(are)h(used.)440 3142 y(The)38 b Ff(discussion)33
b Fi(en)n(vironmen)n(t)k(in)h Fj(MathQuiz)f Fi(can)h(also)e(b)r(e)i
(used)g(to)f(write)h(W)-7 b(eb)440 3242 y(P)n(ages)26
b(lik)n(e)h(this)h(one)g(\(The)g(pages)f(y)n(ou)g(are)g(reading)f(here)
i(w)n(ere)f(written)h(using)g Fj(Math-)440 3341 y(Quiz)p
Fi(.\))440 3624 y Fj(Basic)k(Usage)440 3723 y Fi(Once)h(y)n(ou)f(ha)n
(v)n(e)f(a)i Fj(MathQuiz)g Fi(\014le,)i(y)n(ou)d(can)g(run)h(it)g
(through)g(L)2616 3706 y Fh(A)2653 3723 y Fi(T)2699 3741
y(E)2744 3723 y(X,)i(in)e(the)h(usual)440 3823 y(w)n(a)n(y)-7
b(,)38 b(to)e(pro)r(duce)g(a)g(readable)g(v)n(ersion)f(of)h(y)n(our)g
(quiz.)63 b(When)37 b(y)n(ou)f(are)g(happ)n(y)g(with)440
3922 y(the)d(quiz,)h(use)e Ff(mathquiz)d Fi(to)k(create)f(the)g(HTML)h
(v)n(ersion.)51 b(Note)32 b(that)h(the)g(prin)n(table)440
4022 y(v)n(ersion)24 b(of)h(the)g(quiz)g(do)r(es)g Fg(not)33
b Fi(lo)r(ok)24 b(lik)n(e)h(the)g(w)n(eb)g(page;)g(rather,)g(it)g(con)n
(tains)f(all)h(of)g(the)440 4122 y(information)i(in)h(an)f(easily)g
(readable)f(la)n(y)n(out.)440 4304 y(If,)i(for)g(example,)f(y)n(our)g
(quiz)h(\014le)g(is)g(called)f Fg(quiz1.tex)38 b Fi(then)29
b(y)n(ou)e(can)g(use)h(the)g(follo)n(wing)440 4404 y(commands:)p
0 TeXcolorgray 0 TeXcolorgray 702 4653 a Ff(>)43 b(latex)e(quiz1)696
b(\045)43 b(latex)e(a)i(quiz)f(file)702 4753 y(>)h(xdvi)f(quiz1)739
b(\045)43 b(view)f(the)g(quiz)g(using)f(xdvi)702 4852
y(>)i(dvips)e(quiz1)696 b(\045)43 b(print)e(the)i(quiz)702
4952 y(>)g(mathquiz)d(quiz1)565 b(\045)43 b(converts)d(the)i(quiz)g(to)
h(html)440 5201 y Fi(Con)n(v)n(erting)29 b(the)i(quiz)g(to)g(h)n(tml)g
(can)f(tak)n(e)g(quite)h(a)g(long)f(time,)i(particularly)d(if)i(a)g
(large)440 5301 y(n)n(um)n(b)r(er)c(of)h(images)e(need)i(to)g(b)r(e)g
(created.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 440
133 a
SDict begin H.S end
 440 133 a 440 133 a
SDict begin H.R end
 440 133 a 440 133 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 440 133
a 0 TeXcolorgray 960 241 a Fe(Ma)-6 b(thQuiz:)40 b(Web)32
b(Quizzes)f(using)h(LaTeX)519 b Fi(P)n(age)26 b(2)p 0
TeXcolorgray 440 531 a Fj(MathQuiz)32 b(\014les)440 814
y Fi(The)c(basic)f(structure)g(of)g(a)h Fj(MathQuiz)f
Fi(\014le)h(is)f(as)g(follo)n(ws:)p 0 TeXcolorgray 0
TeXcolorgray 702 1038 a Ff(\\documentclass{)o(ma)o(thq)o(ui)o(z})702
1237 y(\\title{Quiz)39 b(1:)j(Complex)f(numbers})702
1436 y(\\UnitCode{MATH1)o(00)o(1})702 1536 y(\\UnitName{Diffe)o(re)o
(nti)o(al)c(Calculus})702 1636 y(\\UnitURL{/u/UG/)o(JM)o(/MA)o(TH)o
(100)o(1/)o(})702 1735 y(\\QuizzesURL{/u/)o(UG)o(/JM)o(/M)o(ATH)o(10)o
(01/)o(Qu)o(iz)o(zes)o(/})702 1934 y(\\begin{document)o(})702
2134 y(\045)43 b(optional)d("discussion")702 2233 y(\\begin{dicussio)o
(n})o([op)o(ti)o(ona)o(l)d(title])876 2333 y(.)43 b(.)g(.)702
2433 y(\\end{discussion)o(})702 2632 y(\045)g(question)d(1)702
2731 y(\\begin{question)o(})876 2831 y(.)j(.)g(.)702
2931 y(\\end{question})702 3130 y(\045)g(question)d(2)702
3230 y(\\begin{question)o(})876 3329 y(.)j(.)g(.)702
3429 y(\\end{question})702 3528 y(.)702 3628 y(.)702
3728 y(\\end{document})440 3952 y Fi(The)24 b(pream)n(ble)f(of)h(the)g
(L)1213 3935 y Fh(A)1250 3952 y Fi(T)1296 3970 y(E)1342
3952 y(X)h(\014le)f(sp)r(eci\014es)g(the)g(course)f(co)r(de,)h(the)h
(name)e(of)h(the)h(unit)f(of)440 4051 y(study)-7 b(,)23
b(the)e(lo)r(cation)f(of)h(the)h(homepage)d(for)i(the)g(unit)h(and)f
(the)g(index)g(\014le)g(for)f(the)i(quizzes)440 4151
y(for)e(this)h(unit;)i(this)e(is)g(done)f(using)g(the)h(commands)f
Ff(\\UnitCode)p Fi(,)e Ff(\\UnitName)p Fi(,)h Ff(\\UnitURL)440
4251 y Fi(and)32 b Ff(\\QuizzesURL)c Fi(resp)r(ectiv)n(ely)-7
b(.)50 b(If)33 b(the)g(command)f Ff(\\QuizzesURL)c Fi(is)k(omitted)h
(then)440 4350 y(the)h(URL)h(for)e(the)h(quiz)g(index)g(\014le)g(is)g
(set)g(to)g Ff(\\UnitURL/)p Fi(Quizzes.)51 b(\(Within)36
b(the)e(the)440 4450 y(Sc)n(ho)r(ol)24 b(of)h(Mathematics)g(and)g
(Statistics,)h(there)f(is)g(also)f(a)h(pac)n(k)-5 b(age)2655
4466 y
SDict begin H.S end
 2655 4466 a 0 TeXcolorgray -16 x Fi(smsquiz.st)n(y)p
0 TeXcolorgray 3069 4395 a
SDict begin H.R end
 3069 4395 a 3069 4450 a
SDict begin [/H /I/Border [0 0 1]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(smsquiz.html)>>/Subtype /Link H.B /ANN pdfmark end
 3069
4450 a 25 w Fi(whic)n(h)440 4550 y(sets)27 b(the)h(default)g
(parameters)e(from)i(the)g(course)e(co)r(de.\))440 4732
y(The)31 b(title)h(of)f(the)g(quiz)g(should)g(also)f(b)r(e)i(set)f(in)g
(the)h(pream)n(ble)e(using)g(the)i Ff(\\tile)d Fi(com-)440
4832 y(mand.)34 b(Note)18 b(that)h(the)g Ff(\\title)d
Fi(command)i Fg(must)25 b Fi(app)r(ear)17 b(b)r(efore)h(the)h
Ff(\\begin{document})440 4932 y Fi(command.)45 b(In)31
b(the)f(pream)n(ble)g(y)n(ou)g(can)g(also)f(de\014ne)i(macros)e(and)h
(load)g(an)n(y)f(pac)n(k)-5 b(ages)440 5031 y(that)28
b(y)n(ou)f(w)n(an)n(t)g(in)h(the)g(usual)f(w)n(a)n(y)f(.)440
5214 y(The)35 b Ff(discussion)30 b Fi(en)n(vironmen)n(t)k(can)g(b)r(e)h
(used)f(to)g(add)h(commen)n(ts)f(or)g(remarks)e(to)j(a)440
5313 y(quiz.)h(F)-7 b(or)23 b(example,)h(it)g(can)g(b)r(e)g(used)g(to)g
(summarize)f(the)h(material)f(b)r(eing)h(tested)g(in)g(the)440
5413 y(quiz)30 b(or)g(to)g(giv)n(e)f(references)g(to)i(the)f(course)f
(notes.)45 b(The)31 b(syn)n(tax)e(for)h(the)g Ff(discussion)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 432
133 a
SDict begin H.S end
 432 133 a 432 133 a
SDict begin H.R end
 432 133 a 432 133 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 432 133
a 0 TeXcolorgray 960 241 a Fe(Ma)-6 b(thQuiz:)40 b(Web)32
b(Quizzes)f(using)h(LaTeX)519 b Fi(P)n(age)26 b(3)p 0
TeXcolorgray 440 531 a(en)n(vironmen)n(t)h(is)g(as)g(follo)n(ws:)p
0 TeXcolorgray 0 TeXcolorgray 702 770 a Ff(\\begin{discussi)o(on)o(}[o)
o(pt)o(ion)o(al)37 b(title])789 870 y(.)43 b(.)g(.)702
969 y(\\end{discussion)o(})440 1208 y Fi(An)n(ything)35
b(y)n(ou)e(lik)n(e)h(\(text,)j(mathematics,)f(.)14 b(.)g(.)g(\))57
b(can)34 b(go)g(inside)g(discussion)g(en)n(viron-)440
1308 y(men)n(ts.)43 b(The)29 b Fg(optional)34 b(title)i
Fi(is)29 b(used)h(b)r(oth)g(as)f(the)g(section)h(heading)f(on)g(the)h
(w)n(eb)f(page)440 1407 y(and)k(as)g(the)g(heading)g(in)g(the)h(na)n
(vigation)e(bar)g(whic)n(h)h(runs)g(do)n(wn)g(the)g(left)h(hand)f(side)
440 1507 y(of)i(the)h(page.)59 b(The)36 b(headings)e(should)h(not)h(b)r
(e)f(to)r(o)g(long)g(as)g(they)g(ha)n(v)n(e)f(to)i(\014t)f(in)h(the)440
1606 y(left)g(hand)e(margin.)58 b(By)34 b(default,)j(the)f(title)f(is)g
Ff(discussion)p Fi(.)54 b(There)35 b(can)f(b)r(e)h(sev)n(eral)440
1706 y Ff(discussion)24 b Fi(en)n(vironmen)n(t,)i(but)i(they)g(go)f
(all)g(in)h(fron)n(t)f(of)h(the)g(questions.)440 1889
y(Questions)i(are)f(set)i(inside)g(a)f Ff(question)e
Fi(en)n(vironmen)n(t.)45 b(The)30 b(text)h(is)g(follo)n(w)n(ed)f(b)n(y)
g(the)440 1988 y(answ)n(ers.)440 2171 y Fj(MathQuiz)e
Fi(supp)r(orts)f(three)g(t)n(yp)r(es)h(of)f(questions:)p
0 TeXcolorgray 565 2410 a Fd(\017)p 0 TeXcolorgray 41
w Fi(Multiple)h(c)n(hoice)f(questions)g(with)h Fg(pr)l(e)l(cisely)j
(one)j Fi(correct)26 b(answ)n(er;)p 0 TeXcolorgray 565
2571 a Fd(\017)p 0 TeXcolorgray 41 w Fi(Multiple)i(c)n(hoice)f
(questions)g(with)h Fg(sever)l(al)i(or)h(no)i Fi(correct)26
b(answ)n(ers;)p 0 TeXcolorgray 565 2731 a Fd(\017)p 0
TeXcolorgray 41 w Fi(Questions)g(taking)h(a)g Fg(numeric)l(al)37
b Fi(answ)n(er.)440 2970 y(With)26 b(eac)n(h)f(of)g(these)h(t)n(yp)r
(es)f(of)h(questions)f(y)n(ou)f(can)h(\(and)h(should\))f(pro)n(vide)g
(feedbac)n(k)f(to)440 3070 y(the)30 b(studen)n(ts)g(dep)r(ending)f(on)h
(whether)f(their)h(answ)n(er)e(is)h(correct)f(or)h(incorrect.)41
b(Belo)n(w)440 3169 y(w)n(e)27 b(describ)r(e)g(ho)n(w)g(to)h(pro)r
(duce)f(these)h(di\013eren)n(t)f(t)n(yp)r(es)h(of)g(questions.)440
3441 y Fj(Question)i(1)440 3541 y Fi(The)i(syn)n(tax)e(for)h(a)g(m)n
(ultiple)h(c)n(hoice)f(question)g(ha)n(ving)f Fg(pr)l(e)l(cisely)35
b(one)j Fi(correct)30 b(answ)n(er)440 3641 y(is)d(as)g(follo)n(ws:)p
0 TeXcolorgray 0 TeXcolorgray 614 3879 a Ff(\\begin{question})702
3979 y(.)43 b(.)g(.question)d(text)702 4078 y(\\begin{choice})789
4178 y(\\\(in\)correct)e(.)43 b(.)h(.)f(text)f(for)g(\(in\)correct)d
(option)789 4278 y(\\response)170 b(.)43 b(.)h(.)f(feedback)d(on)j
(response)789 4477 y(\\\(in\)correct)38 b(.)43 b(.)h(.)f(text)f(for)g
(\(in\)correct)d(option)789 4577 y(\\response)170 b(.)43
b(.)h(.)f(feedback)d(on)j(response)789 4676 y(.)789 4776
y(.)789 4875 y(.)702 4975 y(\\end{choice})614 5075 y(\\end{question})
440 5313 y Fi(The)25 b(m)n(ultiple)h(c)n(hoice)e(resp)r(onses)g(for)h
(eac)n(h)g(question)f(go)h(inside)g(a)g(c)n(hoice)f(en)n(vironmen)n(t.)
440 5413 y(The)33 b(correct)f(answ)n(er)g(go)r(es)h(after)g
Ff(\\correct)p Fi(,)e(incorrect)i(answ)n(ers)e(after)i
Ff(\\incorrect)p Fi(.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 440
133 a
SDict begin H.S end
 440 133 a 440 133 a
SDict begin H.R end
 440 133 a 440 133 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 440 133
a 0 TeXcolorgray 960 241 a Fe(Ma)-6 b(thQuiz:)40 b(Web)32
b(Quizzes)f(using)h(LaTeX)519 b Fi(P)n(age)26 b(4)p 0
TeXcolorgray 440 531 a(Either)34 b(can)g(b)r(e)g(follo)n(w)n(ed)g(b)n
(y)g(a)f Ff(\\response)p Fi(,)g(pro)n(viding)g(commen)n(ts)h(on)g(the)g
(studen)n(ts)440 631 y(c)n(hoice)j(when)h(c)n(hec)n(king)f(their)h
(answ)n(ers.)65 b(The)38 b Ff(\\reponse)d Fi(commands)i(are)g
(optional;)440 731 y(ho)n(w)n(ev)n(er,)27 b(it)j(is)e(recommended)h
(that)g(y)n(ou)f(use)h(them)g(as)g(go)r(o)r(d)f(feedbac)n(k)g(is)h(v)n
(ery)f(useful)440 830 y(for)f(the)h(studen)n(ts.)440
1013 y(F)-7 b(or)24 b(example,)h(Question)g Fj(??)g Fi(b)r(elo)n(w)f(w)
n(as)g(t)n(yp)r(ed)h(in)n(to)g Fj(MathQuiz)g Fi(using)f(the)h(follo)n
(wing)440 1112 y(commands:)p 0 TeXcolorgray 0 TeXcolorgray
571 1328 a Ff(\\begin{question})658 1428 y(The)42 b(shaded)f(region)g
(in)i(the)g(graph)658 1528 y(\\begin{center})745 1627
y(\\begin{pspicture)o(}\(-)o(3,)o(-1.)o(5\))o(\(3,)o(4\))832
1727 y(\\pscircle[linewid)o(th)o(=2p)o(t,)o(lin)o(es)o(ty)o(le=)o(da)o
(she)o(d,)o(\045)832 1826 y(fillcolor=blue,fi)o(ll)o(sty)o(le)o(=so)o
(li)o(d])o(\(1,)o(1\))o({2})832 1926 y(\\psaxes[linecolor)o(=r)o(ed,)o
(li)o(new)o(id)o(th)o(=1p)o(t,)o(lab)o(el)o(s=)o(non)o(e])o(\045)832
2026 y({->}\(0,0\)\(-1.5,-1)o(.5)o(\)\(3)o(.5)o(,3.)o(5\))832
2125 y(\\rput\(3.75,0\){$x$)o(})832 2225 y(\\rput\(0,3.85\){$iy)o($})
832 2325 y(\\rput\(3,-0.4\){3})832 2424 y(\\rput\(-0.4,3\){3$i)o($})832
2524 y(\\psdots\(1,1\))745 2623 y(\\end{pspicture})658
2723 y(\\end{center})658 2823 y(is)g(equal)e(to)i(which)e(of)i(the)g
(following)c(sets)j(of)h(complex)e(numbers?)658 2922
y(\\begin{choice})745 3022 y(\\incorrect)f($\\{z)h(\\in)i(\\C)g(:)g
(\(z-1\)^{2}+\(z-\(i+)o(1\))o(\)^)o({2})o(<2)o(\\}$)745
3122 y(\\response)84 b(The)42 b(equation)e(of)j(a)g(circle)e(in)i(the)f
(complex)f(plane)h(with)745 3221 y(centre)f($a+ib$)g(and)i(radius)e
($r$)h(is)745 3321 y(\\begin{displayma)o(th})832 3421
y(\\{z\\in\\C)f(:)i(|z-\(a+ib\)|<r)38 b(\\}.)745 3520
y(\\end{displaymath)o(})745 3719 y(\\incorrect)i($\\{z)h(\\in)i(\\C)g
(:)g(z+\(i+1\)<2\\}$)745 3819 y(\\response)84 b(You)42
b(want)g(the)g(set)h(of)f(points)f(whose)h(\\textit{distance)o(})745
3919 y(from)g($1+i$)g(is)g(less)g(than)g($2$.)745 4118
y(\\correct)128 b($\\{z)41 b(\\in)i(\\C)g(:)g(|z-\(i+1\)|<2\\}$)745
4218 y(\\response)84 b(The)42 b(graph)f(shows)h(the)g(set)h(of)f
(complex)f(numbers)g(whose)745 4317 y(distance)f(from)i($1+i$)g(is)h
(less)f(than)f($2$.)745 4516 y(\\incorrect)f($\\{z)h(\\in)i(\\C)g(:)g
(|z-2|<|i+1-2|\\}$)745 4616 y(\\response)84 b(As)42 b($|i+1-2|=\\sqrt)c
(2$,)k(this)g(is)h(the)f(set)h(of)g(complex)745 4716
y(numbers)e(whose)g(distance)g(from)h($2$)g(is)h(less)f(than)745
4815 y($\\sqrt)f(2$.)745 5015 y(\\incorrect)f(None)h(of)i(the)g(above.)
745 5114 y(\\response)d(The)i(graph)g(shows)f(the)i(set)f(of)h(complex)
d(numbers)h(whose)745 5214 y(distance)f(from)i(the)h(centre)e(of)i(the)
f(circle)f(is)i(less)f(than)g($2$.)658 5313 y(\\end{choice})571
5413 y(\\end{question})p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 432
133 a
SDict begin H.S end
 432 133 a 432 133 a
SDict begin H.R end
 432 133 a 432 133 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 432 133
a 0 TeXcolorgray 960 241 a Fe(Ma)-6 b(thQuiz:)40 b(Web)32
b(Quizzes)f(using)h(LaTeX)519 b Fi(P)n(age)26 b(5)p 0
TeXcolorgray 440 531 a Fj(Question)k(2)440 631 y Fi(T)-7
b(o)26 b(allo)n(w)e(m)n(ultiple)j(\(or)e(no\))h(correct)f(answ)n(er)f
(w)n(e)i(add)g Ff(multiple)d Fi(as)i(an)h(optional)f(argu-)440
731 y(men)n(t)j(to)f(the)h Ff(choice)e Fi(en)n(vironmen)n(t:)p
0 TeXcolorgray 0 TeXcolorgray 614 980 a Ff(\\begin{question})702
1079 y(.)43 b(.)g(.question)d(text.)h(.)i(.)702 1179
y(\\begin{choice}[)o(mu)o(lti)o(pl)o(e])789 1279 y(\\\(in\)correct)38
b(.)43 b(.)h(.)f(text)f(for)g(\(in\)correct)d(option)789
1378 y(\\response)170 b(.)43 b(.)h(.)f(feedback)d(on)j(response)789
1577 y(\\\(in\)correct)38 b(.)43 b(.)h(.)f(text)f(for)g(\(in\)correct)d
(option)789 1677 y(\\response)170 b(.)43 b(.)h(.)f(feedback)d(on)j
(response)789 1777 y(.)789 1876 y(.)789 1976 y(.)702
2076 y(\\end{choice})614 2175 y(\\end{question})440 2424
y Fi(The)25 b(only)g(di\013erence)g(to)g(the)g(previous)f(case)h(is)g
(that)g(m)n(ultiple)h(\(or)e(no\))h Ff(\\correct)d Fi(com-)440
2524 y(mands)27 b(ma)n(y)g(b)r(e)h(used.)440 2707 y(F)-7
b(or)29 b(example,)h(Question)f Fj(??)h Fi(b)r(elo)n(w)g(w)n(as)f(t)n
(yp)r(ed)h(in)n(to)f(MathQuiz)h(using)f(the)h(follo)n(wing)440
2806 y(commands:)p 0 TeXcolorgray 0 TeXcolorgray 614
3055 a Ff(\\begin{question})702 3155 y(Which)41 b(of)i(the)f(following)
e(numbers)h(are)h(prime?)702 3254 y(\\begin{choice}[)o(mu)o(lti)o(pl)o
(e])789 3354 y(\\incorrect)d(1)789 3454 y(\\response)83
b(By)43 b(definition,)c(a)k(prime)f(is)g(a)i(number)d(greater)f(than)i
(1)789 3553 y(whose)f(only)h(factors)f(are)h(1)h(and)g(itself.)789
3753 y(\\correct)127 b(19)789 3852 y(\\response)83 b(The)42
b(only)g(factors)f(of)i(19)g(are)f(1)h(and)f(itself.)789
4051 y(\\incorrect)d(6)789 4151 y(\\response)83 b(2)43
b(is)g(a)g(factor)e(of)i(6)789 4350 y(\\correct)127 b(23)789
4450 y(\\response)83 b(The)42 b(only)g(factors)f(of)i(23)g(are)f(1)h
(and)f(itself.)789 4649 y(\\correct)127 b(191)789 4749
y(\\response)83 b(The)42 b(only)g(factors)f(of)i(191)f(are)h(1)g(and)f
(itself.)702 4848 y(\\end{choice})614 4948 y(\\end{question})440
5297 y Fj(Question)30 b(3)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 440
133 a
SDict begin H.S end
 440 133 a 440 133 a
SDict begin H.R end
 440 133 a 440 133 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 440 133
a 0 TeXcolorgray 960 241 a Fe(Ma)-6 b(thQuiz:)40 b(Web)32
b(Quizzes)f(using)h(LaTeX)519 b Fi(P)n(age)26 b(6)p 0
TeXcolorgray 440 531 a(By)h(default,)i(the)f Ff(choice)d
Fi(en)n(vironmen)n(ts)h(puts)i(the)g(m)n(ultiple)h(c)n(hoice)e(options)
g(in)n(to)g(t)n(w)n(o)440 631 y(column)37 b(format.)66
b(Sometimes,)40 b(ho)n(w)n(ev)n(er,)e(the)g(options)e(lo)r(ok)h(b)r
(etter)h(when)f(listed)h(in)440 731 y(a)29 b(single)h(column)g(and,)g
(sometimes,)g(three)g(or)f(more)g(columns)h(are)e(b)r(etter.)45
b(There)29 b(is)h(a)440 830 y(more)22 b(general)f Ff(Choice)f
Fi(en)n(vironmen)n(t)i(whic)n(h)h(lets)g(y)n(ou)e(sp)r(ecify)i(the)h(n)
n(um)n(b)r(er)e(of)h(columns)440 930 y(in)33 b(the)h(HTML)f(v)n(ersion)
e(of)i(the)h(quiz.)53 b(Its)33 b(syn)n(tax)f(is)h(similar)f(to)h(that)g
(of)g(the)h Ff(choice)440 1029 y Fi(en)n(vironmen)n(t.)p
0 TeXcolorgray 0 TeXcolorgray 614 1267 a Ff(\\begin{question})702
1367 y(.)43 b(.)g(.question)d(text.)h(.)i(.)702 1467
y(\\begin{Choice}[)o(mu)o(lti)o(pl)o(e]{)o(n})211 b(.)43
b(.)h(.)f(n)g(columns)789 1566 y(\\\(in\)correct)38 b(.)43
b(.)h(.)f(text)f(for)g(\(in\)correct)d(option)789 1666
y(\\response)170 b(.)43 b(.)h(.)f(feedback)d(on)j(response)789
1865 y(\\\(in\)correct)38 b(.)43 b(.)h(.)f(text)f(for)g(\(in\)correct)d
(option)789 1965 y(\\response)170 b(.)43 b(.)h(.)f(feedback)d(on)j
(response)789 2064 y(.)789 2164 y(.)789 2264 y(.)702
2363 y(\\end{Choice})614 2463 y(\\end{question})440 2701
y Fi(If)31 b(the)f(optional)g(argumen)n(t)f Ff([multiple])d
Fi(is)k(not)h(presen)n(t,)f(then)h(the)f(question)g(admits)440
2801 y(precisely)d(one)g(correct)f(answ)n(er.)440 2983
y(F)-7 b(or)24 b(example,)h(Question)g Fj(??)g Fi(b)r(elo)n(w)f(w)n(as)
g(t)n(yp)r(ed)h(in)n(to)g Fj(MathQuiz)g Fi(using)f(the)h(follo)n(wing)
440 3083 y(commands:)p 0 TeXcolorgray 0 TeXcolorgray
614 3321 a Ff(\\begin{question})702 3421 y(What)41 b(are)i(suitable)d
(parametric)g(equations)f(for)k(this)f(plane)f(curve?)702
3520 y(\\begin{center})789 3620 y(\\psset{unit=.6c)o(m})789
3719 y(\\begin{pspictur)o(e}\()o(-2)o(.5,)o(-0)o(.5\))o(\(5)o(,5)o
(.5\))876 3819 y(\\psaxes[linecolo)o(r=)o(red)o(,l)o(ine)o(wi)o(dt)o
(h=1)o(pt)o(,la)o(be)o(ls)o(=no)o(ne)o(]\045)876 3919
y({->}\(0,0\)\(-2.5,-)o(1.)o(5\)\()o(5,)o(5\))876 4018
y(\\psellipse[linec)o(ol)o(or=)o(bl)o(ue,)o(li)o(ne)o(wid)o(th)o(=2p)o
(t])o(\(1)o(,2\))o(\(3)o(,2\))789 4118 y(\\end{pspicture})702
4218 y(\\end{center})702 4417 y(\\begin{Choice}{)o(1})789
4516 y(\\incorrect)e($x=2\\cos)h(t)k(+)f(1$,)f($y=3\\sin)e(t)k(+)f(2$)
789 4616 y(\\response)d(This)h(is)i(an)g(ellipse)e(with)h(centre)f
($\(1,2\)$)f(and)j(with)f(axes)g(of)789 4716 y(length)f($4$)h(in)h(the)
f($x$-direction)c(and)43 b($6$)f(in)h(the)f($y$-direction.)789
4815 y(\\begin{center})876 4915 y(\\psset{unit=.6cm)o(})876
5015 y(\\begin{pspicture)o(}\()o(-2.)o(5,)o(-0.)o(5\))o(\(5)o(,5.)o
(5\))963 5114 y(\\psaxes[linecolo)o(r=r)o(ed)o(,li)o(ne)o(wi)o(dth)o
(=1)o(pt,)o(la)o(be)o(ls=)o(no)o(ne])o(\045)963 5214
y({->}\(0,0\)\(-2.5,-)o(1.5)o(\)\()o(5,5)o(\))963 5313
y(\\parametricplot[)o(lin)o(ec)o(olo)o(r=)o(bl)o(ue,)o(li)o(new)o(id)o
(th)o(=2p)o(t])o({0})o({3)o(60})o(\045)963 5413 y({t)h(cos)f(2)h(mul)g
(1)g(add)f(t)h(sin)g(3)g(mul)f(2)h(add})p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 432
133 a
SDict begin H.S end
 432 133 a 432 133 a
SDict begin H.R end
 432 133 a 432 133 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 432 133
a 0 TeXcolorgray 960 241 a Fe(Ma)-6 b(thQuiz:)40 b(Web)32
b(Quizzes)f(using)h(LaTeX)519 b Fi(P)n(age)26 b(7)p 0
TeXcolorgray 876 531 a Ff(\\end{pspicture})789 631 y(\\end{center})789
830 y(\\correct)40 b($x=3\\cos)g(t)j(+)h(1$,)e($y=2\\sin)e(t)j(+)h(2$)
789 930 y(\\response)c(The)i(curve)f(is)i(an)g(ellipse)e(centre)g
(\(1,2\))g(with)h(axes)g(length)f(6)789 1029 y(in)h(the)h($x$)f
(direction)e(and)i(4)i(in)e(the)h($y$)f(direction.)789
1229 y(\\incorrect)d($x=3\\cos)h(t)k(-)f(1$,)f($y=2\\sin)e(t)k(-)f(2$)
789 1328 y(\\response)d(This)h(is)i(an)g(ellipse)e(with)h(centre)f
($\(-1,-2\)$)f(and)i(with)g(axes)789 1428 y(of)g(length)g($6$)g(in)h
(the)f($x$-direction)c(and)43 b($4$)f(in)h(the)f($y$-direction.)789
1528 y(\\begin{center})876 1627 y(\\psset{unit=.6cm)o(})876
1727 y(\\begin{pspicture)o(}\()o(-5,)o(-4)o(\)\(1)o(,2)o(\))963
1826 y(\\psaxes[linecolo)o(r=r)o(ed)o(,li)o(ne)o(wi)o(dth)o(=1)o(pt,)o
(la)o(be)o(ls=)o(no)o(ne])o(\045)963 1926 y({<-}\(0,0\)\(-4.5,-)o(5.5)o
(\)\()o(1,2)o(\))963 2026 y(\\parametricplot[)o(lin)o(ec)o(olo)o(r=)o
(bl)o(ue,)o(li)o(new)o(id)o(th)o(=2p)o(t])o({0})o({3)o(60})o(\045)963
2125 y({t)h(cos)f(3)h(mul)g(1)g(sub)f(t)h(sin)g(2)g(mul)f(2)h(sub})876
2225 y(\\end{pspicture})789 2325 y(\\end{center})789
2524 y(\\incorrect)c($x=2\\cos)h(t)k(-)f(1$,)f($y=3\\sin)e(t)k(-)f(2$)
789 2623 y(\\response)d(This)h(is)i(an)g(ellipse)e(with)h(centre)f
($\(-1,-2\)$)f(and)i(with)g(axes)789 2723 y(of)g(length)g($4$)g(in)h
(the)f($x$-direction)c(and)43 b($6$)f(in)h(the)f($y$-direction.)789
2823 y(\\begin{center})876 2922 y(\\psset{unit=.6cm)o(})876
3022 y(\\begin{pspicture)o(}\()o(-4,)o(-5)o(\)\(1)o(,2)o(\))963
3122 y(\\psaxes[linecolo)o(r=r)o(ed)o(,li)o(ne)o(wi)o(dth)o(=1)o(pt,)o
(la)o(be)o(ls=)o(no)o(ne])o(\045)963 3221 y({<-}\(0,0\)\(-4.5,-)o(5.5)o
(\)\()o(1,2)o(\))963 3321 y(\\parametricplot[)o(lin)o(ec)o(olo)o(r=)o
(bl)o(ue,)o(li)o(new)o(id)o(th)o(=2p)o(t])o({0})o({3)o(60})o(\045)963
3421 y({)h(t)g(cos)g(2)g(mul)f(1)h(sub)g(t)g(sin)f(3)h(mul)g(2)g(sub})
876 3520 y(\\end{pspicture})789 3620 y(\\end{center})702
3719 y(\\end{Choice})614 3819 y(\\end{question})440 4168
y Fj(Question)30 b(4)440 4267 y Fi(The)37 b(\014nal)g(t)n(yp)r(e)g(of)g
(question)f(that)h Fj(MathQuiz)g Fi(supp)r(orts)g(is)f(a)h(question)f
(whic)n(h)h(re-)440 4367 y(quires)k(a)h Fg(numeric)l(al)52
b Fi(as)41 b(an)h(answ)n(er.)79 b(The)43 b(n)n(umerical)e(answ)n(er)g
(m)n(ust)h(b)r(e)h(giv)n(en)e(in)440 4467 y(decimal)35
b(form.)58 b(The)35 b(answ)n(er)f(is)g(t)n(yp)r(eset)h(using)g(the)g
Ff(\\answer)d Fi(macro.)58 b(That)35 b(macro)440 4566
y(tak)n(es)i(t)n(w)n(o)g(argumen)n(ts,)j(some)d(text)i(app)r(earing)e
(in)h(an)g(answ)n(er)e(b)r(o)n(x)i(after)g(the)g(ques-)440
4666 y(tion)45 b(and)g(the)g(actual)g(n)n(umerical)f(answ)n(er.)88
b(The)45 b(text)g(is)g(optional.)88 b(The)45 b(syn)n(tax)440
4765 y(is)38 b Ff(\\answer[text)h(after)i(answer)g(box]{numerical)d
(answer})p Fi(.)66 b(Then)39 b(there)f(is)g(a)440 4865
y(mec)n(hanism)e(for)g(pro)n(viding)e(feedbac)n(k)i(for)g(correct)f
(and)h(incorrect)f(answ)n(ers.)61 b(This)36 b(is)440
4965 y(done)h(using)g Ff(\\whenRight)d Fi(and)j Ff(\\whenWrong)p
Fi(.)62 b(Unlik)n(e)37 b(the)h Ff(\\response)c Fi(commands,)440
5064 y(the)h(t)n(w)n(o)f(rep)r(onses)f Ff(\\whenRight)e
Fi(and)j Ff(\\whenWrong)c Fi(are)k(b)r(oth)h(mandatory)e(for)h(ques-)
440 5164 y(tions)27 b(of)h(this)g(t)n(yp)r(e.)37 b(The)28
b(syn)n(tax)e(is)i(for)f(suc)n(h)g(questions)g(is)h(as)f(follo)n(ws:)p
0 TeXcolorgray 0 TeXcolorgray 745 5413 a Ff(\\begin{question})p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 440
133 a
SDict begin H.S end
 440 133 a 440 133 a
SDict begin H.R end
 440 133 a 440 133 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 440 133
a 0 TeXcolorgray 960 241 a Fe(Ma)-6 b(thQuiz:)40 b(Web)32
b(Quizzes)f(using)h(LaTeX)519 b Fi(P)n(age)26 b(8)p 0
TeXcolorgray 832 531 a Ff(.)43 b(.)h(.question)39 b(text.)j(.)h(.)832
631 y(\\answer[text)c(after)i(the)i(answer)e(box]{actual)e(answer})832
731 y(\\whenRight)h(.)j(.)g(.)g(feedback)e(when)g(right)832
830 y(\\whenWrong)f(.)j(.)g(.)g(feedback)e(when)g(wrong)745
930 y(\\end{question})440 1179 y Fi(F)-7 b(or)24 b(example,)h(Question)
g Fj(??)g Fi(b)r(elo)n(w)f(w)n(as)g(t)n(yp)r(ed)h(in)n(to)g
Fj(MathQuiz)g Fi(using)f(the)h(follo)n(wing)440 1279
y(commands:)p 0 TeXcolorgray 0 TeXcolorgray 614 1528
a Ff(\\begin{question})702 1627 y(If)42 b(the)h(vectors)d($\\vect)h(a$)
i(\(of)g(magnitude)c(8)44 b(units\))d(and)h($\\vect)f(b$)702
1727 y(\(of)h(magnitude)e(3)j(units\))e(are)h(perpendicular,)c(what)k
(is)h(the)f(value)702 1826 y(of)702 1926 y(\\begin{displaym)o(at)o(h})
789 2026 y(|\\vect)f(a)i(-2\\vect)e(b|~?)702 2125 y(\\end{displaymat)o
(h})702 2225 y(\(Hint:)g(Draw)h(a)h(diagram!\))702 2424
y(\\answer[units]{)o(10)o(})702 2524 y(\\whenRight)c(The)j(vectors)f
($\\vect)g(a$,)h(\\\(-2\\vect)e(b\\\),)i(and)702 2623
y($\\vect)f(a)i(-)g(2\\vect)e(b$)i(form)f(the)g(sides)g(of)g(a)i
(right-angled)702 2723 y(triangle,)39 b(with)j(sides)g(of)h(length)e
($8$)h(and)g($6$)h(and)702 2823 y(hypotenuse)c(of)k(length)e($|\\vect)g
(a)i(-2\\vect)d(b|$.)i(Therefore)702 2922 y(by)g(Pythagoras')d
(Theorem,)702 3022 y(\\\(|\\vect)h(a)j(-2\\vect)e(b|=\\sqrt{8^2+6^)o
(2}=)o(10)o(\\\).)702 3221 y(\\whenWrong)e(Draw)j(a)h(diagram)e(and)h
(then)g(use)g(Pythagoras')d(theorem.)614 3321 y(\\end{question})440
3670 y Fj(Index)32 b(Files)440 3769 y(MathQuiz)h Fi(also)e(pro)n(vides)
h(a)g(mec)n(hanism)g(for)h(creating)e(a)i(w)n(eb)f(page)g(con)n
(taining)g(an)440 3869 y(index)d(of)h(all)f(quizzes)g(for)f(a)h(giv)n
(en)g(Unit)h(of)f(Study)-7 b(.)43 b(This)29 b(is)h(done)f(with)g(a)g
Fj(MathQuiz)440 3968 y Fi(\014le)23 b(whic)n(h)g(con)n(tains)g(a)f
(|quizlist|)i(en)n(vironmen)n(t.)34 b(The)23 b(syn)n(tax)f(for)h(this)g
(en)n(vironmen)n(t)440 4068 y(is)k(as)g(follo)n(ws:)p
0 TeXcolorgray 0 TeXcolorgray 614 4317 a Ff(\\begin{quizlist})702
4417 y(\\quiz[url1]{tit)o(le)37 b(for)42 b(quiz)g(1})702
4516 y(\\quiz[url2]{tit)o(le)37 b(for)42 b(quiz)g(2})702
4616 y(.)h(.)g(.)614 4716 y(\\end{quizlist})440 4965
y Fi(If)28 b(no)f Fg(url)36 b Fi(is)28 b(giv)n(en)f(as)g(an)g(optional)
g(argumen)n(t)f(to)i(|)2172 4965 y
SDict begin H.S end
 2172 4965 a 2172 4965
a
SDict begin 12 H.A end
 2172 4965 a 2172 4965 a
SDict begin [/View [/XYZ H.V]/Dest (quiz.1) cvn /DEST pdfmark end
 2172 4965 a 440 5114 a Fj(Quiz)k(1)p
Fi(.)k(|.)627 5214 y Fg(URL)p Fi(:)82 b(./quiz1.h)n(tml)18
b(then)h Fj(MathQuiz)f Fi(sets)g(the)h(url\(s\))g(to)f
Ff(quiz1.html)p Fi(,)e Ff(quiz2.html)440 5313 y Fi(and)27
b(so)g(on.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 432
133 a
SDict begin H.S end
 432 133 a 432 133 a
SDict begin H.R end
 432 133 a 432 133 a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 432 133
a 0 TeXcolorgray 960 241 a Fe(Ma)-6 b(thQuiz:)40 b(Web)32
b(Quizzes)f(using)h(LaTeX)519 b Fi(P)n(age)26 b(9)p 0
TeXcolorgray 440 531 a Fj(Credits)440 631 y(MathQuiz)k
Fi(is)f(a)h(HTML)f(quiz)h(preparation)e(system)h(whic)n(h)h(w)n(as)f
(written)h(and)f(dev)n(el-)440 731 y(op)r(ed)j(in)f(the)892
731 y
SDict begin H.S end
 892 731 a 0 TeXcolorgray Fi(Sc)n(ho)r(ol)c(of)h(Mathematics)f
(and)g(Statistics)p 0 TeXcolorgray 2240 673 a
SDict begin H.R end
 2240 673
a 2240 731 a
SDict begin [/H /I/Border [0 0 1]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://www.maths.usyd.edu.au/)>>/Subtype /Link H.B
/ANN pdfmark end
 2240 731 a 32 w Fi(at)k(the)2524 747 y
SDict begin H.S end
 2524
747 a 0 TeXcolorgray -16 x Fi(Univ)n(ersit)n(y)c(of)g(Sydney)p
0 TeXcolorgray 3281 673 a
SDict begin H.R end
 3281 673 a 3281 731 a
SDict begin [/H /I/Border [0 0 1]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://www.usyd.edu.au/)>>/Subtype /Link H.B /ANN
pdfmark end
 3281
731 a Fi(.)440 830 y(The)j(system)g(is)g(built)h(on)e(L)1317
813 y Fh(A)1354 830 y Fi(T)1400 848 y(E)1446 830 y(X)h(with)h(the)f
(con)n(v)n(ersion)e(from)i(L)2503 813 y Fh(A)2540 830
y Fi(T)2586 848 y(E)2632 830 y(X)g(to)g(HTML)g(b)r(eing)440
930 y(done)d(b)n(y)h(Eitan)f(Gurari's)1305 930 y
SDict begin H.S end
 1305
930 a 0 TeXcolorgray Fi(T)-7 b(eX4h)n(t)p 0 TeXcolorgray
1575 872 a
SDict begin H.R end
 1575 872 a 1575 930 a
SDict begin [/H /I/Border [0 0 1]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://www.cis.ohio-state.edu/~gurari/TeX4ht/mn.html)>>/Subtype
/Link H.B /ANN pdfmark end
 1575 930 a 28 w Fi(and)27
b(some)g(p)n(ython)g(programs.)440 1212 y(The)j(L)635
1195 y Fh(A)672 1212 y Fi(T)718 1230 y(E)764 1212 y(X)g(comp)r(onen)n
(t)g(of)37 b Fj(MathQuiz)30 b Fi(w)n(as)f(written)h(b)n(y)g(Andrew)g
(Mathas)f(and)h(the)440 1312 y(p)n(ython)i(and)g(ja)n(v)-5
b(ascript)31 b(co)r(de)h(w)n(ere)f(written)h(b)n(y)g(Andrew)g(Mathas)g
(and)g(Don)g(T)-7 b(a)n(ylor,)440 1411 y(based)29 b(on)h(an)g(initial)g
(prot)n(yp)r(e)f(of)h(Don)g(T)-7 b(a)n(ylor's.)42 b(A)30
b(related)f(system)h(whic)n(h)g(pro)r(duces)440 1511
y(quizzes)35 b(for)g(self)h(assessmen)n(t)e(tests)h(w)n(as)g(written)g
(b)n(y)h(a)f(team)g(sup)r(ervised)g(b)n(y)g(Daniel)440
1611 y(Daners)27 b(\(see)887 1627 y
SDict begin H.S end
 887 1627 a 0 TeXcolorgray
-16 x Fi(example)h(test)p 0 TeXcolorgray 1347 1553 a
SDict begin H.R end

1347 1553 a 1347 1611 a
SDict begin [/H /I/Border [0 0 1]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://www.maths.usyd.edu.au:8000/us/selftest.cgi)>>/Subtype
/Link H.B /ANN pdfmark end
 1347 1611 a Fi(\).)440 1893 y(The)18
b Fj(MathQuiz)h Fi(system)f(is)g(also)f(b)r(eing)i(used)f(b)n(y)g(the)
2173 1909 y
SDict begin H.S end
 2173 1909 a 0 TeXcolorgray -16 x Fi(F)-7
b(acult)n(y)28 b(of)f(Economics)f(and)i(Business)p 0
TeXcolorgray 3447 1835 a
SDict begin H.R end
 3447 1835 a 3447 1893 a
SDict begin [/H /I/Border [0 0 1]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(http://quiz.econ.usyd.edu.au/mathquiz/)>>/Subtype
/Link H.B /ANN pdfmark end
 3447
1893 a Fi(.)440 1993 y(Although)f(w)n(e)f(do)h(not)g(ha)n(v)n(e)e(the)j
(time)f(and)g(resources)d(necessary)h(to)i(fully)g(supp)r(ort)g(the)440
2092 y(system)i(w)n(e)f(ha)n(v)n(e)g(no)n(w)g(made)h(a)f(p)r(ortable)h
(v)n(ersion)e(of)35 b Fj(MathQuiz)29 b Fi(whic)n(h)g(is)g(a)n(v)-5
b(ailable)440 2192 y(under)27 b(the)h(terms)f(of)h(the)g(GNU)g(General)
e(Public)i(License)f(\(GPL\).)g(It)h(has)f(b)r(een)h(tested)440
2291 y(only)22 b(on)h(Unix)f(systems)h(and)f(it)h(requires)e(that)i(p)n
(ython,)h(L)2268 2274 y Fh(A)2305 2291 y Fi(T)2351 2309
y(E)2396 2291 y(Xand)f(tex4h)n(t)f(b)r(e)h(installed.)440
2391 y(Please)j(con)n(tact)h(Andrew)h(Mathas)f(if)h(y)n(ou)f(are)f(in)n
(terested)h(in)h(using)g(the)g(system.)440 2856 y Fj(Authors)440
2956 y Fi(Andrew)g(Mathas)f(and)g(Don)h(T)-7 b(a)n(ylor.)440
3171 y
SDict begin H.S end
 440 3171 a 440 3171 a
SDict begin 12 H.A end
 440 3171 a 440 3171 a
SDict begin [/View [/XYZ H.V]/Dest (question.1) cvn /DEST pdfmark end
 440
3171 a 166 x Fj(Question)30 b(1.)440 3437 y Fi(The)e(shaded)f(region)f
(in)i(the)g(graph)p 0 TeXcolorgray 0 TeXcolorgray 1872
4556 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0  setgray   28.45274 28.45274 2 copy
moveto 56.90549 .5 CLW mul sub dup 0 rmoveto 0 360 arc closepath  gsave
0 0 1  setrgbcolor  1. .setopacityalpha  fill  grestore gsave 2.0 SLW
0  setgray  1. .setopacityalpha   0  setlinecap [  5.0  3.0  0.0  0.0
] 4 DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1.
.setopacityalpha  fill grestore grestore 0 h a sub moveto   EndArrow
 } def /ArrowInside { } def   /showOrigin true def 99.5846  0 -42.67911
 0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true and
or { /viceversa -42.67911  99.5846  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline -42.67911  def /maxTickline 99.5846
 def /dT 1864679 abs 65536 div viceversa { neg } if def /DT 1 abs viceversa
{ neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add
epsilon sub }{ sub epsilon add } ifelse } def /logLines { false } def
/LSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1
add { /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MinValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for /dsubT
0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs 0 gt
{ gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 99.5846 0.0 -42.67911   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
99.5846 0.0 -42.67911 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 1.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1.
.setopacityalpha  fill grestore grestore 0 h a sub moveto   EndArrow
 } def /ArrowInside { } def   /showOrigin true def 0 99.5846  0 -42.67911
 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq true and exch 2 lt false and
or { /viceversa -42.67911  99.5846  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline -42.67911  def /maxTickline 99.5846
 def /dT 1864679 abs 65536 div viceversa { neg } if def /DT 1 abs viceversa
{ neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
} def /MaxValue { yEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add
epsilon sub }{ sub epsilon add } ifelse } def /logLines { false } def
/LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke
{  0  setlinejoin 0  setlinecap stroke  stroke} def 0 dT MaxValue 1
add { /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul exch moveto cntsubTick maxTickline
STsize mul exch lineto } { cntsubTick tickstart STsize mul exch moveto
cntsubTick tickend STsize mul exch lineto } ifelse }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave false { cntTick minTickline
exch moveto cntTick maxTickline exch lineto } { cntTick tickstart exch
moveto cntTick tickend exch lineto } ifelse Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for /showOrigin true def
/dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa
{ add }{ sub } ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi
{ 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 28.45274  mul cntTick
add def x abs MinValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 99.5846 0.0 -42.67911   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
99.5846 0.0 -42.67911 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 1872 4556 a
tx@Dict begin  { 106.69778 0.0 } PutCoor PutBegin  end
 1872
4556 a 1848 4574 a Fc(x)1872 4556 y
tx@Dict begin  PutEnd  end
 1872 4556 a 1872
4556 a
tx@Dict begin  { 0.0 109.54323 } PutCoor PutBegin  end
 1872 4556 a 1836 4575 a Fc(iy)1872 4556 y
tx@Dict begin  PutEnd  end
 1872
4556 a 1872 4556 a
tx@Dict begin  { 85.35823 -11.38092 } PutCoor PutBegin  end
 1872 4556 a 1851 4583 a Fi(3)1872
4556 y
tx@Dict begin  PutEnd  end
 1872 4556 a 1872 4556 a
tx@Dict begin  { -11.38092 85.35823 } PutCoor PutBegin  end
 1872 4556 a 1837 4583
a Fi(3)p Fc(i)1872 4556 y
tx@Dict begin  PutEnd  end
 1872 4556 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 28.45274 28.45274
  false NArray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end


@endspecial 440 5159 a Fi(is)f(equal)h(to)f(whic)n(h)h(of)f(the)h
(follo)n(wing)f(sets)g(of)h(complex)f(n)n(um)n(b)r(ers?)440
5342 y(\()p Fg(Exactly)k(one)f(option)g(must)f(b)l(e)h(c)l(orr)l(e)l
(ct)8 b Fi(\))1768 5342 y
SDict begin H.S end
 1768 5342 a 1768 5342 a
SDict begin 12 H.A end
 1768
5342 a 1768 5342 a
SDict begin [/View [/XYZ H.V]/Dest (choice.1) cvn /DEST pdfmark end
 1768 5342 a 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 440
133 a
SDict begin H.S end
 440 133 a 440 133 a
SDict begin H.R end
 440 133 a 440 133 a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 440 133
a 0 TeXcolorgray 939 241 a Fe(Ma)-6 b(thQuiz:)41 b(Web)31
b(Quizzes)g(using)h(LaTeX)498 b Fi(P)n(age)26 b(10)p
0 TeXcolorgray 440 531 a Fb(\045)83 b Fg(Option)34 b
Fi(1\(a\):)166 b Fd(f)p Fc(z)26 b Fd(2)d Fa(C)g Fi(:)g(\()p
Fc(z)f Fd(\000)c Fi(1\))1789 501 y Fh(2)1845 531 y Fi(+)g(\()p
Fc(z)k Fd(\000)c Fi(\()p Fc(i)g Fi(+)g(1\)\))2372 501
y Fh(2)2433 531 y Fc(<)k Fi(2)p Fd(g)440 681 y Fg(R)l(esp)l(onse:)42
b Fi(The)26 b(equation)h(of)f(a)g(circle)h(in)g(the)g(complex)f(plane)g
(with)i(cen)n(tre)e Fc(a)16 b Fi(+)h Fc(ib)26 b Fi(and)440
780 y(radius)h Fc(r)j Fi(is)1375 880 y Fd(f)p Fc(z)c
Fd(2)e Fa(C)f Fi(:)g Fd(j)p Fc(z)f Fd(\000)c Fi(\()p
Fc(a)g Fi(+)g Fc(ib)p Fi(\))p Fd(j)23 b Fc(<)g(r)r Fd(g)p
Fc(:)440 951 y
SDict begin H.S end
 440 951 a 440 951 a
SDict begin 12 H.A end
 440 951 a 440 951
a
SDict begin [/View [/XYZ H.V]/Dest (choice.2) cvn /DEST pdfmark end
 440 951 a 274 x Fb(\045)83 b Fg(Option)34 b Fi(1\(b\):)167
b Fd(f)p Fc(z)25 b Fd(2)f Fa(C)f Fi(:)g Fc(z)f Fi(+)c(\()p
Fc(i)g Fi(+)g(1\))23 b Fc(<)g Fi(2)p Fd(g)440 1374 y
Fg(R)l(esp)l(onse:)42 b Fi(Y)-7 b(ou)28 b(w)n(an)n(t)f(the)h(set)f(of)h
(p)r(oin)n(ts)f(whose)g Fg(distanc)l(e)35 b Fi(from)27
b(1)18 b(+)g Fc(i)27 b Fi(is)h(less)f(than)h(2.)440 1390
y
SDict begin H.S end
 440 1390 a 440 1390 a
SDict begin 12 H.A end
 440 1390 a 440 1390 a
SDict begin [/View [/XYZ H.V]/Dest (choice.3) cvn /DEST pdfmark end
 440 1390
a 266 x Fb(")83 b Fg(Option)34 b Fi(1\(c\):)166 b Fd(f)p
Fc(z)26 b Fd(2)e Fa(C)f Fi(:)g Fd(j)p Fc(z)f Fd(\000)c
Fi(\()p Fc(i)g Fi(+)g(1\))p Fd(j)23 b Fc(<)g Fi(2)p Fd(g)440
1806 y Fg(R)l(esp)l(onse:)52 b Fi(The)33 b(graph)e(sho)n(ws)h(the)h
(set)f(of)h(complex)f(n)n(um)n(b)r(ers)g(whose)g(distance)h(from)440
1905 y(1)18 b(+)g Fc(i)27 b Fi(is)h(less)f(than)h(2.)440
1912 y
SDict begin H.S end
 440 1912 a 440 1912 a
SDict begin 12 H.A end
 440 1912 a 440 1912 a
SDict begin [/View [/XYZ H.V]/Dest (choice.4) cvn /DEST pdfmark end
 440
1912 a 276 x Fb(\045)83 b Fg(Option)34 b Fi(1\(d\):)167
b Fd(f)p Fc(z)25 b Fd(2)f Fa(C)f Fi(:)g Fd(j)p Fc(z)f
Fd(\000)c Fi(2)p Fd(j)k Fc(<)h Fd(j)p Fc(i)18 b Fi(+)g(1)g
Fd(\000)g Fi(2)p Fd(jg)440 2337 y Fg(R)l(esp)l(onse:)39
b Fi(As)23 b Fd(j)p Fc(i)8 b Fi(+)g(1)g Fd(\000)g Fi(2)p
Fd(j)19 b Fi(=)1377 2268 y Fd(p)p 1447 2268 42 4 v 1447
2337 a Fi(2)o(,)24 b(this)e(is)g(the)h(set)f(of)g(complex)g(n)n(um)n(b)
r(ers)f(whose)h(distance)440 2437 y(from)27 b(2)g(is)h(less)f(than)1136
2368 y Fd(p)p 1205 2368 V 69 x Fi(2)o(.)440 2448 y
SDict begin H.S end
 440
2448 a 440 2448 a
SDict begin 12 H.A end
 440 2448 a 440 2448 a
SDict begin [/View [/XYZ H.V]/Dest (choice.5) cvn /DEST pdfmark end
 440 2448 a 271
x Fb(\045)83 b Fg(Option)34 b Fi(1\(e\):)166 b(None)28
b(of)f(the)h(ab)r(o)n(v)n(e.)440 2868 y Fg(R)l(esp)l(onse:)52
b Fi(The)33 b(graph)e(sho)n(ws)h(the)h(set)f(of)h(complex)f(n)n(um)n(b)
r(ers)g(whose)g(distance)h(from)440 2968 y(the)28 b(cen)n(tre)f(of)h
(the)g(circle)f(is)g(less)g(than)h(2.)440 3167 y
SDict begin H.S end
 440
3167 a 440 3167 a
SDict begin 12 H.A end
 440 3167 a 440 3167 a
SDict begin [/View [/XYZ H.V]/Dest (question.2) cvn /DEST pdfmark end
 440 3167 a 183
x Fj(Question)i(2.)440 3450 y Fi(Whic)n(h)e(of)f(the)h(follo)n(wing)f
(n)n(um)n(b)r(ers)g(are)g(prime?)440 3632 y(\()p Fg(Zer)l(o)j(or)g(mor)
l(e)g(options)h(c)l(an)f(b)l(e)g(c)l(orr)l(e)l(ct)8 b
Fi(\))1863 3632 y
SDict begin H.S end
 1863 3632 a 1863 3632 a
SDict begin 12 H.A end
 1863 3632 a
1863 3632 a
SDict begin [/View [/XYZ H.V]/Dest (choice.1) cvn /DEST pdfmark end
 1863 3632 a 440 3927 a Fb(\045)83 b Fg(Option)34
b Fi(2\(a\):)166 b(1)440 4076 y Fg(R)l(esp)l(onse:)41
b Fi(By)25 b(de\014nition,)h(a)f(prime)g(is)h(a)f(n)n(um)n(b)r(er)g
(greater)e(than)j(1)f(whose)f(only)h(factors)440 4176
y(are)i(1)g(and)g(itself.)440 4176 y
SDict begin H.S end
 440 4176 a 440 4176
a
SDict begin 12 H.A end
 440 4176 a 440 4176 a
SDict begin [/View [/XYZ H.V]/Dest (choice.2) cvn /DEST pdfmark end
 440 4176 a 282 x Fb(")83 b Fg(Option)34
b Fi(2\(b\):)167 b(19)440 4608 y Fg(R)l(esp)l(onse:)42
b Fi(The)28 b(only)f(factors)f(of)i(19)f(are)f(1)h(and)h(itself.)440
4624 y
SDict begin H.S end
 440 4624 a 440 4624 a
SDict begin 12 H.A end
 440 4624 a 440 4624 a
SDict begin [/View [/XYZ H.V]/Dest (choice.3) cvn /DEST pdfmark end
 440
4624 a 266 x Fb(\045)83 b Fg(Option)34 b Fi(2\(c\):)166
b(6)440 5039 y Fg(R)l(esp)l(onse:)42 b Fi(2)27 b(is)h(a)f(factor)g(of)g
(6)440 5056 y
SDict begin H.S end
 440 5056 a 440 5056 a
SDict begin 12 H.A end
 440 5056 a 440 5056
a
SDict begin [/View [/XYZ H.V]/Dest (choice.4) cvn /DEST pdfmark end
 440 5056 a 266 x Fb(")83 b Fg(Option)34 b Fi(2\(d\):)167
b(23)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 432
133 a
SDict begin H.S end
 432 133 a 432 133 a
SDict begin H.R end
 432 133 a 432 133 a
SDict begin [/View [/XYZ H.V]/Dest (page.11) cvn /DEST pdfmark end
 432 133
a 0 TeXcolorgray 939 241 a Fe(Ma)-6 b(thQuiz:)41 b(Web)31
b(Quizzes)g(using)h(LaTeX)498 b Fi(P)n(age)26 b(11)p
0 TeXcolorgray 440 531 a Fg(R)l(esp)l(onse:)42 b Fi(The)28
b(only)f(factors)f(of)i(23)f(are)f(1)h(and)h(itself.)440
547 y
SDict begin H.S end
 440 547 a 440 547 a
SDict begin 12 H.A end
 440 547 a 440 547 a
SDict begin [/View [/XYZ H.V]/Dest (choice.5) cvn /DEST pdfmark end
 440 547
a 251 x Fb(")83 b Fg(Option)34 b Fi(2\(e\):)166 b(191)440
940 y Fg(R)l(esp)l(onse:)42 b Fi(The)28 b(only)f(factors)f(of)i(191)e
(are)h(1)g(and)g(itself.)440 1125 y
SDict begin H.S end
 440 1125 a 440 1125
a
SDict begin 12 H.A end
 440 1125 a 440 1125 a
SDict begin [/View [/XYZ H.V]/Dest (question.3) cvn /DEST pdfmark end
 440 1125 a 166 x Fj(Question)j(3.)440
1391 y Fi(What)e(are)f(suitable)g(parametric)f(equations)h(for)g(this)h
(plane)f(curv)n(e?)p 0 TeXcolorgray 0 TeXcolorgray 1695
2329 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1.
.setopacityalpha  fill grestore grestore 0 h a sub moveto   EndArrow
 } def /ArrowInside { } def   /showOrigin true def 85.35912  0 -42.67955
 0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true and
or { /viceversa -42.67955  85.35912  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline -25.60773  def /maxTickline 85.35912
 def /dT 1118819 abs 65536 div viceversa { neg } if def /DT 1 abs viceversa
{ neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add
epsilon sub }{ sub epsilon add } ifelse } def /logLines { false } def
/LSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1
add { /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 17.07182  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 17.07182  mul cntTick add def x abs MinValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for /dsubT
0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs 0 gt
{ gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 85.35912 0.0 -25.60773   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35912 0.0 -42.67955 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1.
.setopacityalpha  fill grestore grestore 0 h a sub moveto   EndArrow
 } def /ArrowInside { } def   /showOrigin true def 0 85.35912  0 -25.60773
 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq true and exch 2 lt false and
or { /viceversa -25.60773  85.35912  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline -42.67955  def /maxTickline 85.35912
 def /dT 1118819 abs 65536 div viceversa { neg } if def /DT 1 abs viceversa
{ neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
} def /MaxValue { yEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add
epsilon sub }{ sub epsilon add } ifelse } def /logLines { false } def
/LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke
{  0  setlinejoin 0  setlinecap stroke  stroke} def 0 dT MaxValue 1
add { /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 17.07182  mul cntTick add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul exch moveto cntsubTick maxTickline
STsize mul exch lineto } { cntsubTick tickstart STsize mul exch moveto
cntsubTick tickend STsize mul exch lineto } ifelse }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave false { cntTick minTickline
exch moveto cntTick maxTickline exch lineto } { cntTick tickstart exch
moveto cntTick tickend exch lineto } ifelse Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for /showOrigin true def
/dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa
{ add }{ sub } ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi
{ 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 17.07182  mul cntTick
add def x abs MinValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 85.35912 0.0 -25.60773   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35912 0.0 -42.67955 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor   0 360 51.21547 34.14365
.5 CLW mul dup 4 -1 roll sub neg 3 1 roll sub 17.07182 34.14365  0
true Ellipse  closepath  gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 440 2633 a(\()p
Fg(The)k(choic)l(es)g(wil)t(l)g(b)l(e)f(liste)l(d)g(in)g(1)g(c)l
(olumns)g(in)g(the)g(HTML)g(version)h(of)f(the)g(quiz)10
b Fi(\))440 2816 y(\()p Fg(Exactly)31 b(one)f(option)g(must)f(b)l(e)h
(c)l(orr)l(e)l(ct)8 b Fi(\))1796 2816 y
SDict begin H.S end
 1796 2816 a 1796
2816 a
SDict begin 12 H.A end
 1796 2816 a 1796 2816 a
SDict begin [/View [/XYZ H.V]/Dest (choice.1) cvn /DEST pdfmark end
 1796 2816 a 440 3095 a
Fb(\045)83 b Fg(Option)34 b Fi(3\(a\):)166 b Fc(x)24
b Fi(=)e(2)14 b(cos)f Fc(t)18 b Fi(+)g(1,)27 b Fc(y)f
Fi(=)d(3)14 b(sin)f Fc(t)18 b Fi(+)g(2)440 3237 y Fg(R)l(esp)l(onse:)45
b Fi(This)28 b(is)h(an)g(ellipse)g(with)g(cen)n(tre)f(\(1)p
Fc(;)14 b Fi(2\))29 b(and)f(with)i(axes)e(of)g(length)h(4)g(in)g(the)
440 3337 y Fc(x)p Fi(-direction)e(and)h(6)f(in)h(the)g
Fc(y)s Fi(-direction.)p 0 TeXcolorgray 0 TeXcolorgray
1695 4275 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1.
.setopacityalpha  fill grestore grestore 0 h a sub moveto   EndArrow
 } def /ArrowInside { } def   /showOrigin true def 85.35912  0 -42.67955
 0 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true and
or { /viceversa -42.67955  85.35912  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline -25.60773  def /maxTickline 85.35912
 def /dT 1118819 abs 65536 div viceversa { neg } if def /DT 1 abs viceversa
{ neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
} def /MaxValue { xEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add
epsilon sub }{ sub epsilon add } ifelse } def /logLines { false } def
/LSstroke {  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1
add { /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 17.07182  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 17.07182  mul cntTick add def x abs MinValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for /dsubT
0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs 0 gt
{ gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 85.35912 0.0 -25.60773   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35912 0.0 -42.67955 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2. CLW
mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale
} if gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1.
.setopacityalpha  fill grestore grestore 0 h a sub moveto   EndArrow
 } def /ArrowInside { } def   /showOrigin true def 0 85.35912  0 -25.60773
 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq true and exch 2 lt false and
or { /viceversa -25.60773  85.35912  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline -42.67955  def /maxTickline 85.35912
 def /dT 1118819 abs 65536 div viceversa { neg } if def /DT 1 abs viceversa
{ neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
} def /MaxValue { yEnd 1.5 2.  CLW mul add 1.4  mul viceversa { add
epsilon sub }{ sub epsilon add } ifelse } def /logLines { false } def
/LSstroke {  0  setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke
{  0  setlinejoin 0  setlinecap stroke  stroke} def 0 dT MaxValue 1
add { /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 17.07182  mul cntTick add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul exch moveto cntsubTick maxTickline
STsize mul exch lineto } { cntsubTick tickstart STsize mul exch moveto
cntsubTick tickend STsize mul exch lineto } ifelse }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave false { cntTick minTickline
exch moveto cntTick maxTickline exch lineto } { cntTick tickstart exch
moveto cntTick tickend exch lineto } ifelse Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for /showOrigin true def
/dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa
{ add }{ sub } ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi
{ 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 17.07182  mul cntTick
add def x abs MinValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
0.0 85.35912 0.0 -25.60773   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  1.0
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [
85.35912 0.0 -42.67955 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def   /t 0 def /t1 360 def /dt
t1 t sub 49 div def /F@pstplot { t cos 2 mul 1 add t sin 3 mul 2 add
} def /xy { t cos 2 mul 1 add t sin 3 mul 2 add 17.07182 mul exch 17.07182
mul exch } def  /ps@Exit false def xy moveto  49 1 sub { /t t dt add
def xy  dup 1.e30 17.07182 mul gt { moveto } { dup -1.e30 17.07182
mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit } if } repeat
ps@Exit not { /t t1 def xy  dup 1.e30 17.07182 mul gt { moveto } {
dup -1.e30 17.07182 mul lt { moveto } { L } ifelse } ifelse  } if 
   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 440 4397 a
SDict begin H.S end
 440
4397 a 440 4397 a
SDict begin 12 H.A end
 440 4397 a 440 4397 a
SDict begin [/View [/XYZ H.V]/Dest (choice.2) cvn /DEST pdfmark end
 440 4397 a 266
x Fb(")83 b Fg(Option)34 b Fi(3\(b\):)167 b Fc(x)23 b
Fi(=)g(3)14 b(cos)e Fc(t)19 b Fi(+)f(1,)27 b Fc(y)f Fi(=)c(2)14
b(sin)f Fc(t)19 b Fi(+)f(2)440 4805 y Fg(R)l(esp)l(onse:)69
b Fi(The)41 b(curv)n(e)f(is)h(an)g(ellipse)g(cen)n(tre)f(\(1,2\))h
(with)g(axes)f(length)i(6)e(in)h(the)h Fc(x)440 4905
y Fi(direction)27 b(and)h(4)f(in)h(the)g Fc(y)i Fi(direction.)440
4921 y
SDict begin H.S end
 440 4921 a 440 4921 a
SDict begin 12 H.A end
 440 4921 a 440 4921 a
SDict begin [/View [/XYZ H.V]/Dest (choice.3) cvn /DEST pdfmark end
 440
4921 a 251 x Fb(\045)83 b Fg(Option)34 b Fi(3\(c\):)166
b Fc(x)24 b Fi(=)f(3)14 b(cos)e Fc(t)18 b Fd(\000)g Fi(1,)28
b Fc(y)d Fi(=)e(2)14 b(sin)f Fc(t)19 b Fd(\000)f Fi(2)440
5313 y Fg(R)l(esp)l(onse:)47 b Fi(This)29 b(is)h(an)g(ellipse)g(with)g
(cen)n(tre)f(\()p Fd(\000)p Fi(1)p Fc(;)14 b Fd(\000)p
Fi(2\))29 b(and)h(with)g(axes)f(of)h(length)g(6)f(in)440
5413 y(the)f Fc(x)p Fi(-direction)f(and)h(4)f(in)h(the)g
Fc(y)s Fi(-direction.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 440
133 a
SDict begin H.S end
 440 133 a 440 133 a
SDict begin H.R end
 440 133 a 440 133 a
SDict begin [/View [/XYZ H.V]/Dest (page.12) cvn /DEST pdfmark end
 440 133
a 0 TeXcolorgray 939 241 a Fe(Ma)-6 b(thQuiz:)41 b(Web)31
b(Quizzes)g(using)h(LaTeX)498 b Fi(P)n(age)26 b(12)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 2156 732
a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.0 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def
/ArrowInside { } def   /showOrigin true def 17.07182  0 -76.8232  0
ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true and
or { /viceversa -76.8232  17.07182  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline -93.89502  def /maxTickline 34.14365
 def /dT 1118819 abs 65536 div viceversa { neg } if def /DT 1 abs viceversa
{ neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
1.5 2.  CLW mul add 1.4  mul viceversa { sub epsilon add }{ add epsilon
sub } ifelse } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 17.07182  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 17.07182  mul cntTick add def x abs MinValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for /dsubT
0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs 0 gt
{ gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside { } def
 1.0 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside { } def
 [ 0.0 34.14365 0.0 -93.89502   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside { } def
 1.0 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside { } def
 [ 17.07182 0.0 -76.8232 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.0 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def
/ArrowInside { } def   /showOrigin true def 0 34.14365  0 -93.89502
 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq true and exch 2 lt false and
or { /viceversa -93.89502  34.14365  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline -76.8232  def /maxTickline 17.07182
 def /dT 1118819 abs 65536 div viceversa { neg } if def /DT 1 abs viceversa
{ neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
1.5 2.  CLW mul add 1.4  mul viceversa { sub epsilon add }{ add epsilon
sub } ifelse } def /MaxValue { yEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {
 0  setlinejoin 0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 17.07182  mul cntTick add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul exch moveto cntsubTick maxTickline
STsize mul exch lineto } { cntsubTick tickstart STsize mul exch moveto
cntsubTick tickend STsize mul exch lineto } ifelse }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave false { cntTick minTickline
exch moveto cntTick maxTickline exch lineto } { cntTick tickstart exch
moveto cntTick tickend exch lineto } ifelse Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for /showOrigin true def
/dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa
{ add }{ sub } ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi
{ 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 17.07182  mul cntTick
add def x abs MinValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside { } def
 1.0 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside { } def
 [ 0.0 34.14365 0.0 -93.89502   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside { } def
 1.0 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside { } def
 [ 17.07182 0.0 -76.8232 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def   /t 0 def /t1 360 def /dt
t1 t sub 49 div def /F@pstplot { t cos 3 mul 1 sub t sin 2 mul 2 sub
} def /xy { t cos 3 mul 1 sub t sin 2 mul 2 sub 17.07182 mul exch 17.07182
mul exch } def  /ps@Exit false def xy moveto  49 1 sub { /t t dt add
def xy  dup 1.e30 17.07182 mul gt { moveto } { dup -1.e30 17.07182
mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit } if } repeat
ps@Exit not { /t t1 def xy  dup 1.e30 17.07182 mul gt { moveto } {
dup -1.e30 17.07182 mul lt { moveto } { L } ifelse } ifelse  } if 
   gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 440 1365 a
SDict begin H.S end
 440
1365 a 440 1365 a
SDict begin 12 H.A end
 440 1365 a 440 1365 a
SDict begin [/View [/XYZ H.V]/Dest (choice.4) cvn /DEST pdfmark end
 440 1365 a 282
x Fb(\045)83 b Fg(Option)34 b Fi(3\(d\):)167 b Fc(x)23
b Fi(=)g(2)14 b(cos)e Fc(t)19 b Fd(\000)f Fi(1,)27 b
Fc(y)f Fi(=)c(3)14 b(sin)f Fc(t)19 b Fd(\000)f Fi(2)440
1797 y Fg(R)l(esp)l(onse:)47 b Fi(This)29 b(is)h(an)g(ellipse)g(with)g
(cen)n(tre)f(\()p Fd(\000)p Fi(1)p Fc(;)14 b Fd(\000)p
Fi(2\))29 b(and)h(with)g(axes)f(of)h(length)g(4)f(in)440
1896 y(the)f Fc(x)p Fi(-direction)f(and)h(6)f(in)h(the)g
Fc(y)s Fi(-direction.)p 0 TeXcolorgray 0 TeXcolorgray
2085 2354 a @beginspecial @setspecial
  tx@Dict begin STP newpath 1.0 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def
/ArrowInside { } def   /showOrigin true def 17.07182  0 -76.8232  0
ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq false and exch 2 lt true and
or { /viceversa -76.8232  17.07182  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline -93.89502  def /maxTickline 34.14365
 def /dT 1118819 abs 65536 div viceversa { neg } if def /DT 1 abs viceversa
{ neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { xStart
1.5 2.  CLW mul add 1.4  mul viceversa { sub epsilon add }{ add epsilon
sub } ifelse } def /MaxValue { xEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke stroke} def /subLSstroke { 
0  setlinejoin 0  setlinecap stroke stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 17.07182  mul cntTick add def x abs MaxValue
abs le { false { x minTickline  moveto x maxTickline  lineto } { x
tickstart STsize mul  moveto x tickend STsize mul  lineto } ifelse
} if } for } for subTwidth SLW subTColor subLSstroke grestore stroke
/dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT
add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick
minTickline STsize mul  moveto cntsubTick maxTickline STsize mul  lineto
} { cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick dsubT
add def } repeat subTwidth SLW subTColor subLSstroke grestore } if
showOrigin { gsave false { cntTick minTickline  moveto cntTick maxTickline
 lineto } { cntTick tickstart  moveto cntTick tickend  lineto } ifelse
Twidth SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse
} for /showOrigin true def /dT dT neg def /dsubT dsubT neg def 0 dT
MinValue epsilon viceversa { add }{ sub } ifelse { /cntTick exch def
logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 17.07182  mul cntTick add def x abs MinValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for /dsubT
0 def subTwidth SLW subTColor subLSstroke grestore } dsubT abs 0 gt
{ gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MinValue abs le { cntsubTick tickstart STsize mul  moveto cntsubTick
tickend STsize mul  lineto }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave cntTick tickstart  moveto cntTick tickend 
lineto Twidth SLW TColor LSstroke grestore }{ /showOrigin true def
} ifelse } for } if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside { } def
 1.0 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside { } def
 [ 0.0 34.14365 0.0 -93.89502   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside { } def
 1.0 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside { } def
 [ 17.07182 0.0 -76.8232 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 1.0 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  moveto } def /ArrowB { } def
/ArrowInside { } def   /showOrigin true def 0 34.14365  0 -93.89502
 ArrowA CP 4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave
L  0  setlinejoin 0  setlinecap stroke  stroke grestore /yStart exch
def /xStart exch def 0 dup 2 mod 0 eq true and exch 2 lt false and
or { /viceversa -93.89502  34.14365  gt { true }{ false } ifelse def
/epsilon 0.01 def /minTickline -76.8232  def /maxTickline 17.07182
 def /dT 1118819 abs 65536 div viceversa { neg } if def /DT 1 abs viceversa
{ neg } if def /subTNo 1 def subTNo 0 gt { /dsubT dT subTNo div def}{
/dsubT 0 def } ifelse -4.0 4.0 /tickend exch def /tickstart exch def
/Twidth 0.4  def /subTwidth 0.2  def /STsize 0.75 def /TColor { 0 
setgray  } def /subTColor { 0.5  setgray  } def /MinValue { yStart
1.5 2.  CLW mul add 1.4  mul viceversa { sub epsilon add }{ add epsilon
sub } ifelse } def /MaxValue { yEnd } def /logLines { false } def /LSstroke
{  0  setlinejoin 0  setlinecap stroke  stroke} def /subLSstroke {
 0  setlinejoin 0  setlinecap stroke  stroke} def 0 dT MaxValue 1 add
{ /cntTick exch def logLines { gsave 1 1 DT { 1 sub /OffSet exch def
-10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 17.07182  mul cntTick add def x abs MaxValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for subTwidth SLW subTColor subLSstroke grestore
stroke /dsubT 0 def } if dsubT abs 0 gt { gsave /cntsubTick cntTick
dsubT add def subTNo 1 sub { cntsubTick abs MaxValue abs le { false
{ cntsubTick minTickline STsize mul exch moveto cntsubTick maxTickline
STsize mul exch lineto } { cntsubTick tickstart STsize mul exch moveto
cntsubTick tickend STsize mul exch lineto } ifelse }{ exit } ifelse
/cntsubTick cntsubTick dsubT add def } repeat subTwidth SLW subTColor
subLSstroke grestore } if showOrigin { gsave false { cntTick minTickline
exch moveto cntTick maxTickline exch lineto } { cntTick tickstart exch
moveto cntTick tickend exch lineto } ifelse Twidth SLW TColor LSstroke
grestore }{ /showOrigin true def } ifelse } for /showOrigin true def
/dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon viceversa
{ add }{ sub } ifelse { /cntTick exch def logLines { gsave 1 1 DT cvi
{ 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add exch dup -0.1
mul 1 add { /dx exch def /x dx log OffSet add 17.07182  mul cntTick
add def x abs MinValue abs le { false { x minTickline exch moveto x
maxTickline exch lineto } { x tickstart STsize mul exch moveto x tickend
STsize mul exch lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul exch moveto cntsubTick tickend STsize
mul exch lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def
} repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart exch moveto cntTick tickend exch lineto Twidth
SLW TColor LSstroke grestore }{ /showOrigin true def } ifelse } for
} if  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside { } def
 1.0 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside { } def
 [ 0.0 34.14365 0.0 -93.89502   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside { } def
 1.0 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2. CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED
{ 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h L w neg a neg
rlineto gsave  1. .setopacityalpha  fill grestore grestore 0 h a sub
moveto   EndArrow  moveto } def /ArrowB { } def /ArrowInside { } def
 [ 17.07182 0.0 -76.8232 0.0   /Lineto /lineto load def 0  setlinejoin
false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt
{ 1.5 2.  CLW mul add dup 1.4  mul exch 0.4 mul neg add /arrowlength
exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1
sub Atan def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 1.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def /ArrowInside { } def   /t 0 def /t1 360 def /dt
t1 t sub 49 div def /F@pstplot {  t cos 2 mul 1 sub t sin 3 mul 2 sub
} def /xy {  t cos 2 mul 1 sub t sin 3 mul 2 sub 17.07182 mul exch
17.07182 mul exch } def  /ps@Exit false def xy moveto  49 1 sub { /t
t dt add def xy  dup 1.e30 17.07182 mul gt { moveto } { dup -1.e30
17.07182 mul lt { moveto } { L } ifelse } ifelse  ps@Exit { exit }
if } repeat ps@Exit not { /t t1 def xy  dup 1.e30 17.07182 mul gt {
moveto } { dup -1.e30 17.07182 mul lt { moveto } { L } ifelse } ifelse
 } if     gsave 2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0
 setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 440 3328 a
SDict begin H.S end
 440
3328 a 440 3328 a
SDict begin 12 H.A end
 440 3328 a 440 3328 a
SDict begin [/View [/XYZ H.V]/Dest (question.4) cvn /DEST pdfmark end
 440 3328 a 183
x Fj(Question)i(4.)440 3610 y Fi(If)i(the)g(v)n(ectors)f
Fj(a)h Fi(\(of)g(magnitude)f(8)h(units\))g(and)g Fj(b)g
Fi(\(of)g(magnitude)f(3)h(units\))g(are)f(p)r(er-)440
3710 y(p)r(endicular,)d(what)f(is)h(the)g(v)-5 b(alue)27
b(of)1694 3893 y Fd(j)p Fj(a)19 b Fd(\000)f Fi(2)p Fj(b)p
Fd(j)28 b Fi(?)440 4075 y(\(Hin)n(t:)38 b(Dra)n(w)26
b(a)i(diagram!\))468 4457 y Fg(A)n(nswer:)171 b Fi(10)p
440 4376 605 4 v 440 4484 4 110 v 1041 4484 V 440 4486
605 4 v 193 w(units)440 4607 y Fg(R)l(esp)l(onse)28 b(when)g(right:)42
b Fi(The)25 b(v)n(ectors)f Fj(a)p Fi(,)j Fd(\000)p Fi(2)p
Fj(b)p Fi(,)e(and)g Fj(a)15 b Fd(\000)f Fi(2)p Fj(b)25
b Fi(form)g(the)h(sides)f(of)g(a)g(righ)n(t-)440 4706
y(angled)h(triangle,)g(with)h(sides)f(of)g(length)h(8)f(and)g(6)h(and)f
(h)n(yp)r(oten)n(use)g(of)g(length)h Fd(j)p Fj(a)17 b
Fd(\000)f Fi(2)p Fj(b)p Fd(j)p Fi(.)440 4806 y(Therefore)26
b(b)n(y)i(Pythagoras')c(Theorem,)j Fd(j)p Fj(a)19 b Fd(\000)f
Fi(2)p Fj(b)p Fd(j)23 b Fi(=)2166 4737 y Fd(p)p 2235
4737 259 4 v 69 x Fi(8)2277 4782 y Fh(2)2332 4806 y Fi(+)18
b(6)2457 4782 y Fh(2)2517 4806 y Fi(=)k(10.)440 5138
y Fg(R)l(esp)l(onse)30 b(when)g(wr)l(ong:)42 b Fi(Dra)n(w)27
b(a)g(diagram)f(and)i(then)g(use)f(Pythagoras')e(theorem.)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
